{"ast":null,"code":"import _styled from \"@emotion/styled-base\";\nvar _jsxFileName = \"/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/components/wallet-details/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport * as fcl from \"@onflow/fcl\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPlug, faWallet, faTrophyAlt, faSatelliteDish, faBracketsCurly } from \"@fortawesome/pro-regular-svg-icons\";\nimport { WHITE } from \"@style/colors\";\nimport { WalletContext } from \"@enhancers/wallet-provider\";\nimport CoralButton from \"@library/components/buttons/coral\";\nimport { BASE_TEXT, WEIGHT } from \"@style/typography\";\nimport { AuxiliaryPanelHeader } from \"@library/components/typography/headers/auxiliary-panel\";\nimport { Divider } from \"@library/components/layout\";\n\nconst Container = /*#__PURE__*/_styled(\"div\", {\n  target: \"e1tp03sa0\",\n  label: \"Container\"\n})({\n  display: \"flex\",\n  flexDirection: \"column\",\n  borderRadius: 3,\n  backgroundColor: WHITE,\n  boxShadow: \"0 1px 2px 0 rgba(0,0,0,.1)\",\n  padding: \"1rem\"\n}, false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n\nconst Label = /*#__PURE__*/_styled(\"div\", {\n  target: \"e1tp03sa1\",\n  label: \"Label\"\n})(_objectSpread(_objectSpread({}, BASE_TEXT), {}, {\n  fontSize: 12,\n  fontWeight: WEIGHT.BOLD\n}), false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n\nconst Value = /*#__PURE__*/_styled(\"div\", {\n  target: \"e1tp03sa2\",\n  label: \"Value\"\n})(_objectSpread({}, BASE_TEXT), false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n\nconst TextGroup = /*#__PURE__*/_styled(\"div\", {\n  target: \"e1tp03sa3\",\n  label: \"TextGroup\"\n})(false ? {\n  name: \"j7qwjs\",\n  styles: \"display:flex;flex-direction:column;\"\n} : {\n  name: \"j7qwjs\",\n  styles: \"display:flex;flex-direction:column;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nconst StyledDivider = /*#__PURE__*/_styled(Divider, {\n  target: \"e1tp03sa4\",\n  label: \"StyledDivider\"\n})(false ? {\n  name: \"s98few\",\n  styles: \"margin-top:5px;margin-bottom:5px;\"\n} : {\n  name: \"s98few\",\n  styles: \"margin-top:5px;margin-bottom:5px;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nconst ctaButtonStyles = {\n  height: 24,\n  marginTop: 5,\n  marginBottom: 5\n};\n\nconst StyledCoralButton = /*#__PURE__*/_styled(CoralButton, {\n  target: \"e1tp03sa5\",\n  label: \"StyledCoralButton\"\n})(_objectSpread({}, ctaButtonStyles), false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sdWtlaGFtaWx0b24vZGV2ZWxvcG1lbnQvbHlyYS1sYWJzLWRldi9seXJhLWxhYnMvZnJvbnRlbmQvY29tcG9uZW50cy93YWxsZXQtZGV0YWlscy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4RDBCIiwiZmlsZSI6Ii9Vc2Vycy9sdWtlaGFtaWx0b24vZGV2ZWxvcG1lbnQvbHlyYS1sYWJzLWRldi9seXJhLWxhYnMvZnJvbnRlbmQvY29tcG9uZW50cy93YWxsZXQtZGV0YWlscy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZUNvbnRleHQsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tIFwibmV4dC9yb3V0ZXJcIjtcbmltcG9ydCBzdHlsZWQgZnJvbSBcIkBlbW90aW9uL3N0eWxlZFwiO1xuXG5pbXBvcnQgKiBhcyBmY2wgZnJvbSBcIkBvbmZsb3cvZmNsXCI7XG5cbmltcG9ydCB7IEZvbnRBd2Vzb21lSWNvbiB9IGZyb20gXCJAZm9ydGF3ZXNvbWUvcmVhY3QtZm9udGF3ZXNvbWVcIjtcbmltcG9ydCB7XG4gIGZhTGluayxcbiAgZmFQbHVnLFxuICBmYVdhbGxldCxcbiAgZmFUcm9waHlBbHQsXG4gIGZhU2F0ZWxsaXRlRGlzaCxcbiAgZmFCcmFja2V0c0N1cmx5LFxufSBmcm9tIFwiQGZvcnRhd2Vzb21lL3Byby1yZWd1bGFyLXN2Zy1pY29uc1wiO1xuXG5pbXBvcnQgeyBXSElURSB9IGZyb20gXCJAc3R5bGUvY29sb3JzXCI7XG5cbmltcG9ydCB7IFdhbGxldENvbnRleHQgfSBmcm9tIFwiQGVuaGFuY2Vycy93YWxsZXQtcHJvdmlkZXJcIjtcbmltcG9ydCBDb3JhbEJ1dHRvbiBmcm9tIFwiQGxpYnJhcnkvY29tcG9uZW50cy9idXR0b25zL2NvcmFsXCI7XG5cbmltcG9ydCB7IEJBU0VfVEVYVCwgV0VJR0hUIH0gZnJvbSBcIkBzdHlsZS90eXBvZ3JhcGh5XCI7XG5cbmltcG9ydCB7IEF1eGlsaWFyeVBhbmVsSGVhZGVyIH0gZnJvbSBcIkBsaWJyYXJ5L2NvbXBvbmVudHMvdHlwb2dyYXBoeS9oZWFkZXJzL2F1eGlsaWFyeS1wYW5lbFwiO1xuXG5pbXBvcnQgeyBEaXZpZGVyIH0gZnJvbSBcIkBsaWJyYXJ5L2NvbXBvbmVudHMvbGF5b3V0XCI7XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZChcImRpdlwiKSh7XG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICBib3JkZXJSYWRpdXM6IDMsXG4gIGJhY2tncm91bmRDb2xvcjogV0hJVEUsXG4gIGJveFNoYWRvdzogXCIwIDFweCAycHggMCByZ2JhKDAsMCwwLC4xKVwiLFxuICBwYWRkaW5nOiBcIjFyZW1cIixcbn0pO1xuXG5jb25zdCBMYWJlbCA9IHN0eWxlZChcImRpdlwiKSh7XG4gIC4uLkJBU0VfVEVYVCxcbiAgZm9udFNpemU6IDEyLFxuICBmb250V2VpZ2h0OiBXRUlHSFQuQk9MRCxcbn0pO1xuXG5jb25zdCBWYWx1ZSA9IHN0eWxlZChcImRpdlwiKSh7XG4gIC4uLkJBU0VfVEVYVCxcbn0pO1xuXG5jb25zdCBUZXh0R3JvdXAgPSBzdHlsZWQoXCJkaXZcIikoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbiAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbn0pO1xuXG5jb25zdCBTdHlsZWREaXZpZGVyID0gc3R5bGVkKERpdmlkZXIpKHtcbiAgbWFyZ2luVG9wOiA1LFxuICBtYXJnaW5Cb3R0b206IDUsXG59KTtcblxuY29uc3QgY3RhQnV0dG9uU3R5bGVzID0ge1xuICBoZWlnaHQ6IDI0LFxuICBtYXJnaW5Ub3A6IDUsXG4gIG1hcmdpbkJvdHRvbTogNSxcbn07XG5cbmNvbnN0IFN0eWxlZENvcmFsQnV0dG9uID0gc3R5bGVkKENvcmFsQnV0dG9uKSh7XG4gIC4uLmN0YUJ1dHRvblN0eWxlcyxcbn0pO1xuXG5jb25zdCBBd2FyZHMgPSBzdHlsZWQoXCJkaXZcIikoe1xuICBkaXNwbGF5OiBcImZsZXhcIixcbn0pO1xuXG5jb25zdCBBd2FyZCA9IHN0eWxlZChcImRpdlwiKSh7XG4gIG1hcmdpblJpZ2h0OiAxMCxcbiAgZGlzcGxheTogXCJmbGV4XCIsXG4gIGZsZXhEaXJlY3Rpb246IFwiY29sdW1uXCIsXG4gIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG59KTtcblxuY29uc3QgQXdhcmRJbWcgPSBzdHlsZWQoXCJkaXZcIikoe1xuICAuLi5CQVNFX1RFWFQsXG4gIGZvbnRTaXplOiAyMixcbn0pO1xuXG5jb25zdCBBd2FyZElkID0gc3R5bGVkKFwiZGl2XCIpKHtcbiAgLi4uQkFTRV9URVhULFxufSk7XG5cbmNvbnN0IFdhbGxldERldGFpbHMgPSAoeyBjdXJyZW50VXNlciB9KSA9PiB7XG4gIGNvbnN0IHtcbiAgICBzdGF0dXMsXG4gICAgdHJhbnNhY3Rpb24sXG4gICAgd2FsbGV0Q29ubmVjdGVkLFxuICAgIHdhbGxldE5vdENvbm5lY3RlZCxcbiAgICBzZXR1cFdhbGxldCxcbiAgICBzZXR1cEZDTEF1dGhIYW5kbGVyLFxuICAgIHdhbGxldFVzZXIsXG4gICAgdmF1bHRJc1NldHVwLFxuICAgIGNvbGxlY3Rpb25Jc1NldHVwLFxuICAgIHdhbGxldEJhbGFuY2UsXG4gICAgd2FsbGV0Q29sbGVjdGlvbixcbiAgICBjb25uZWN0QWN0aXZlV2FsbGV0VG9MeXJhTGFicyxcbiAgICBhdXRoSGFuZGxlcklzU2V0dXAsXG4gICAgc2V0QXV0aEhhbmRsZXJJc1NldHVwLFxuICAgIGdldFJlc291cmNlc0NvbXBsZXRlLFxuICB9ID0gdXNlQ29udGV4dChXYWxsZXRDb250ZXh0KTtcblxuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcbiAgY29uc3Qgcm91dGUgPSByb3V0ZXIucm91dGU7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoIWF1dGhIYW5kbGVySXNTZXR1cCkge1xuICAgICAgc2V0dXBGQ0xBdXRoSGFuZGxlcigpO1xuICAgICAgc2V0QXV0aEhhbmRsZXJJc1NldHVwKHRydWUpO1xuICAgIH1cbiAgfSwgW10pO1xuXG4gIGNvbnN0IHdhbGxldElzTGlua2VkID1cbiAgICBjdXJyZW50VXNlciAmJiBjdXJyZW50VXNlci53YWxsZXRBZGRyZXNzICYmIGN1cnJlbnRVc2VyLndhbGxldElzU2V0dXA7XG5cbiAgY29uc3Qgd2FsbGV0SXNBY3RpdmUgPSB3YWxsZXRDb25uZWN0ZWQgJiYgd2FsbGV0VXNlcjtcblxuICBjb25zdCB3YWxsZXRJc0NvbmZpZ3VyZWQgPSB2YXVsdElzU2V0dXAgJiYgY29sbGVjdGlvbklzU2V0dXA7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEF1eGlsaWFyeVBhbmVsSGVhZGVyPkZsb3cgV2FsbGV0PC9BdXhpbGlhcnlQYW5lbEhlYWRlcj5cbiAgICAgIDxDb250YWluZXI+XG4gICAgICAgIDxUZXh0R3JvdXA+XG4gICAgICAgICAgPExhYmVsPlxuICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvbiBpY29uPXtmYUxpbmt9IC8+IExpbmtlZCBXYWxsZXRcbiAgICAgICAgICA8L0xhYmVsPlxuICAgICAgICAgIHshd2FsbGV0SXNBY3RpdmUgJiYgPFZhbHVlPk5vIGFjdGl2ZSB3YWxsZXQ8L1ZhbHVlPn1cbiAgICAgICAgICB7d2FsbGV0SXNBY3RpdmUgJiYgIWdldFJlc291cmNlc0NvbXBsZXRlICYmIDxWYWx1ZT5Mb2FkaW5nLi4uPC9WYWx1ZT59XG4gICAgICAgICAge3dhbGxldElzQWN0aXZlICYmICF3YWxsZXRJc0NvbmZpZ3VyZWQgJiYgZ2V0UmVzb3VyY2VzQ29tcGxldGUgJiYgKFxuICAgICAgICAgICAgPFN0eWxlZENvcmFsQnV0dG9uIG9uQ2xpY2s9e3NldHVwV2FsbGV0fT5cbiAgICAgICAgICAgICAgU2V0dXAgV2FsbGV0XG4gICAgICAgICAgICA8L1N0eWxlZENvcmFsQnV0dG9uPlxuICAgICAgICAgICl9XG4gICAgICAgICAge3dhbGxldElzQWN0aXZlICYmXG4gICAgICAgICAgICBnZXRSZXNvdXJjZXNDb21wbGV0ZSAmJlxuICAgICAgICAgICAgd2FsbGV0SXNDb25maWd1cmVkICYmXG4gICAgICAgICAgICAoIXdhbGxldElzTGlua2VkIHx8XG4gICAgICAgICAgICAgICh3YWxsZXRJc0xpbmtlZCAmJlxuICAgICAgICAgICAgICAgIHdhbGxldFVzZXIuYWRkciAhPT0gY3VycmVudFVzZXIud2FsbGV0QWRkcmVzcykpICYmIChcbiAgICAgICAgICAgICAgPFN0eWxlZENvcmFsQnV0dG9uIG9uQ2xpY2s9e2Nvbm5lY3RBY3RpdmVXYWxsZXRUb0x5cmFMYWJzfT5cbiAgICAgICAgICAgICAgICBMaW5rIFdhbGxldFxuICAgICAgICAgICAgICA8L1N0eWxlZENvcmFsQnV0dG9uPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICB7d2FsbGV0SXNBY3RpdmUgJiZcbiAgICAgICAgICAgIGdldFJlc291cmNlc0NvbXBsZXRlICYmXG4gICAgICAgICAgICB3YWxsZXRJc0NvbmZpZ3VyZWQgJiZcbiAgICAgICAgICAgIHdhbGxldElzTGlua2VkICYmXG4gICAgICAgICAgICB3YWxsZXRVc2VyLmFkZHIgPT09IGN1cnJlbnRVc2VyLndhbGxldEFkZHJlc3MgJiYgKFxuICAgICAgICAgICAgICA8VmFsdWU+e2AweCR7Y3VycmVudFVzZXIud2FsbGV0QWRkcmVzc31gfTwvVmFsdWU+XG4gICAgICAgICAgICApfVxuICAgICAgICA8L1RleHRHcm91cD5cbiAgICAgICAgPFN0eWxlZERpdmlkZXIgLz5cbiAgICAgICAgPFRleHRHcm91cD5cbiAgICAgICAgICA8TGFiZWw+XG4gICAgICAgICAgICA8Rm9udEF3ZXNvbWVJY29uIGljb249e2ZhUGx1Z30gLz4gQWN0aXZlIFdhbGxldFxuICAgICAgICAgIDwvTGFiZWw+XG4gICAgICAgICAge3dhbGxldElzQWN0aXZlID8gKFxuICAgICAgICAgICAgPFZhbHVlPntgMHgke3dhbGxldFVzZXIuYWRkcn1gfTwvVmFsdWU+XG4gICAgICAgICAgKSA6IChcbiAgICAgICAgICAgIDxTdHlsZWRDb3JhbEJ1dHRvbiBvbkNsaWNrPXtmY2wuYXV0aGVudGljYXRlfT5cbiAgICAgICAgICAgICAgQ29ubmVjdCBXYWxsZXRcbiAgICAgICAgICAgIDwvU3R5bGVkQ29yYWxCdXR0b24+XG4gICAgICAgICAgKX1cbiAgICAgICAgPC9UZXh0R3JvdXA+XG4gICAgICAgIDxTdHlsZWREaXZpZGVyIC8+XG4gICAgICAgIDxUZXh0R3JvdXA+XG4gICAgICAgICAgPExhYmVsPlxuICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvbiBpY29uPXtmYVdhbGxldH0gLz4gQmFsYW5jZVxuICAgICAgICAgIDwvTGFiZWw+XG4gICAgICAgICAge3dhbGxldElzQWN0aXZlID8gKFxuICAgICAgICAgICAgd2FsbGV0SXNDb25maWd1cmVkID8gKFxuICAgICAgICAgICAgICA8VmFsdWU+e2Ake01hdGgucm91bmQod2FsbGV0QmFsYW5jZSl9IExZUkFgfTwvVmFsdWU+XG4gICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICA8VmFsdWU+Tm8gd2FsbGV0IHNldHVwPC9WYWx1ZT5cbiAgICAgICAgICAgIClcbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgPFZhbHVlPk5vIGFjdGl2ZSB3YWxsZXQ8L1ZhbHVlPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvVGV4dEdyb3VwPlxuICAgICAgICA8U3R5bGVkRGl2aWRlciAvPlxuICAgICAgICA8VGV4dEdyb3VwPlxuICAgICAgICAgIDxMYWJlbD5cbiAgICAgICAgICAgIDxGb250QXdlc29tZUljb24gaWNvbj17ZmFUcm9waHlBbHR9IC8+IEF3YXJkc1xuICAgICAgICAgIDwvTGFiZWw+XG4gICAgICAgICAge3dhbGxldElzQWN0aXZlID8gKFxuICAgICAgICAgICAgd2FsbGV0SXNDb25maWd1cmVkID8gKFxuICAgICAgICAgICAgICA8VmFsdWU+XG4gICAgICAgICAgICAgICAge3dhbGxldENvbGxlY3Rpb24gJiYgd2FsbGV0Q29sbGVjdGlvbi5sZW5ndGggPiAwID8gKFxuICAgICAgICAgICAgICAgICAgPEF3YXJkcz5cbiAgICAgICAgICAgICAgICAgICAge3dhbGxldENvbGxlY3Rpb24ubWFwKChpdGVtKSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgPEF3YXJkIGtleT17aXRlbX0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8QXdhcmRJbWc+8J+PhTwvQXdhcmRJbWc+XG4gICAgICAgICAgICAgICAgICAgICAgICA8QXdhcmRJZD57YCMke2l0ZW19YH08L0F3YXJkSWQ+XG4gICAgICAgICAgICAgICAgICAgICAgPC9Bd2FyZD5cbiAgICAgICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgICAgICA8L0F3YXJkcz5cbiAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgXCJub25lXCJcbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICA8L1ZhbHVlPlxuICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgPFZhbHVlPk5vIHdhbGxldCBzZXR1cDwvVmFsdWU+XG4gICAgICAgICAgICApXG4gICAgICAgICAgKSA6IChcbiAgICAgICAgICAgIDxWYWx1ZT5ObyBhY3RpdmUgd2FsbGV0PC9WYWx1ZT5cbiAgICAgICAgICApfVxuICAgICAgICA8L1RleHRHcm91cD5cbiAgICAgICAge3dhbGxldElzQWN0aXZlICYmIHN0YXR1cyAmJiAoXG4gICAgICAgICAgPD5cbiAgICAgICAgICAgIDxTdHlsZWREaXZpZGVyIC8+XG4gICAgICAgICAgICA8VGV4dEdyb3VwPlxuICAgICAgICAgICAgICA8TGFiZWw+XG4gICAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvbiBpY29uPXtmYVNhdGVsbGl0ZURpc2h9IC8+IFR4IFN0YXR1c1xuICAgICAgICAgICAgICA8L0xhYmVsPlxuICAgICAgICAgICAgICA8VmFsdWU+e3N0YXR1c308L1ZhbHVlPlxuICAgICAgICAgICAgPC9UZXh0R3JvdXA+XG4gICAgICAgICAgICB7dHJhbnNhY3Rpb24gJiYgKFxuICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgIDxTdHlsZWREaXZpZGVyIC8+XG4gICAgICAgICAgICAgICAgPFRleHRHcm91cD5cbiAgICAgICAgICAgICAgICAgIDxMYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPEZvbnRBd2Vzb21lSWNvbiBpY29uPXtmYUJyYWNrZXRzQ3VybHl9IC8+IFR4IERldGFpbHNcbiAgICAgICAgICAgICAgICAgIDwvTGFiZWw+XG4gICAgICAgICAgICAgICAgICB7fVxuICAgICAgICAgICAgICAgICAgPFZhbHVlPlxuICAgICAgICAgICAgICAgICAgICA8Y29kZT57SlNPTi5zdHJpbmdpZnkodHJhbnNhY3Rpb24sIG51bGwsIDIpfTwvY29kZT5cbiAgICAgICAgICAgICAgICAgIDwvVmFsdWU+XG4gICAgICAgICAgICAgICAgPC9UZXh0R3JvdXA+XG4gICAgICAgICAgICAgIDwvPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8Lz5cbiAgICAgICAgKX1cbiAgICAgICAge3dhbGxldElzQWN0aXZlICYmIChcbiAgICAgICAgICA8PlxuICAgICAgICAgICAgPFN0eWxlZERpdmlkZXIgLz5cbiAgICAgICAgICAgIDxTdHlsZWRDb3JhbEJ1dHRvbiBvbkNsaWNrPXtmY2wudW5hdXRoZW50aWNhdGV9PlxuICAgICAgICAgICAgICBEaXNjb25uZWN0IFdhbGxldFxuICAgICAgICAgICAgPC9TdHlsZWRDb3JhbEJ1dHRvbj5cbiAgICAgICAgICA8Lz5cbiAgICAgICAgKX1cbiAgICAgIDwvQ29udGFpbmVyPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgV2FsbGV0RGV0YWlscztcbiJdfQ== */\");\n\nconst Awards = /*#__PURE__*/_styled(\"div\", {\n  target: \"e1tp03sa6\",\n  label: \"Awards\"\n})(false ? {\n  name: \"k008qs\",\n  styles: \"display:flex;\"\n} : {\n  name: \"k008qs\",\n  styles: \"display:flex;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nconst Award = /*#__PURE__*/_styled(\"div\", {\n  target: \"e1tp03sa7\",\n  label: \"Award\"\n})(false ? {\n  name: \"1t7rc33\",\n  styles: \"margin-right:10px;display:flex;flex-direction:column;align-items:center;\"\n} : {\n  name: \"1t7rc33\",\n  styles: \"margin-right:10px;display:flex;flex-direction:column;align-items:center;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nconst AwardImg = /*#__PURE__*/_styled(\"div\", {\n  target: \"e1tp03sa8\",\n  label: \"AwardImg\"\n})(_objectSpread(_objectSpread({}, BASE_TEXT), {}, {\n  fontSize: 22\n}), false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n\nconst AwardId = /*#__PURE__*/_styled(\"div\", {\n  target: \"e1tp03sa9\",\n  label: \"AwardId\"\n})(_objectSpread({}, BASE_TEXT), false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n\nconst WalletDetails = ({\n  currentUser\n}) => {\n  const {\n    status,\n    transaction,\n    walletConnected,\n    walletNotConnected,\n    setupWallet,\n    setupFCLAuthHandler,\n    walletUser,\n    vaultIsSetup,\n    collectionIsSetup,\n    walletBalance,\n    walletCollection,\n    connectActiveWalletToLyraLabs,\n    authHandlerIsSetup,\n    setAuthHandlerIsSetup,\n    getResourcesComplete\n  } = useContext(WalletContext);\n  const router = useRouter();\n  const route = router.route;\n  useEffect(() => {\n    if (!authHandlerIsSetup) {\n      setupFCLAuthHandler();\n      setAuthHandlerIsSetup(true);\n    }\n  }, []);\n  const walletIsLinked = currentUser && currentUser.walletAddress && currentUser.walletIsSetup;\n  const walletIsActive = walletConnected && walletUser;\n  const walletIsConfigured = vaultIsSetup && collectionIsSetup;\n  return __jsx(React.Fragment, null, __jsx(AuxiliaryPanelHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \"Flow Wallet\"), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, __jsx(TextGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faLink,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), \" Linked Wallet\"), !walletIsActive && __jsx(Value, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 31\n    }\n  }, \"No active wallet\"), walletIsActive && !getResourcesComplete && __jsx(Value, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 55\n    }\n  }, \"Loading...\"), walletIsActive && !walletIsConfigured && getResourcesComplete && __jsx(StyledCoralButton, {\n    onClick: setupWallet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Setup Wallet\"), walletIsActive && getResourcesComplete && walletIsConfigured && (!walletIsLinked || walletIsLinked && walletUser.addr !== currentUser.walletAddress) && __jsx(StyledCoralButton, {\n    onClick: connectActiveWalletToLyraLabs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, \"Link Wallet\"), walletIsActive && getResourcesComplete && walletIsConfigured && walletIsLinked && walletUser.addr === currentUser.walletAddress && __jsx(Value, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, `0x${currentUser.walletAddress}`)), __jsx(StyledDivider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }), __jsx(TextGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faPlug,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), \" Active Wallet\"), walletIsActive ? __jsx(Value, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, `0x${walletUser.addr}`) : __jsx(StyledCoralButton, {\n    onClick: fcl.authenticate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, \"Connect Wallet\")), __jsx(StyledDivider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }), __jsx(TextGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faWallet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }), \" Balance\"), walletIsActive ? walletIsConfigured ? __jsx(Value, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, `${Math.round(walletBalance)} LYRA`) : __jsx(Value, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, \"No wallet setup\") : __jsx(Value, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, \"No active wallet\")), __jsx(StyledDivider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }), __jsx(TextGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faTrophyAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }), \" Awards\"), walletIsActive ? walletIsConfigured ? __jsx(Value, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, walletCollection && walletCollection.length > 0 ? __jsx(Awards, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }, walletCollection.map(item => __jsx(Award, {\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 23\n    }\n  }, __jsx(AwardImg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, \"\\uD83C\\uDFC5\"), __jsx(AwardId, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 25\n    }\n  }, `#${item}`)))) : \"none\") : __jsx(Value, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, \"No wallet setup\") : __jsx(Value, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, \"No active wallet\")), walletIsActive && status && __jsx(React.Fragment, null, __jsx(StyledDivider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }), __jsx(TextGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faSatelliteDish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }), \" Tx Status\"), __jsx(Value, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, status)), transaction && __jsx(React.Fragment, null, __jsx(StyledDivider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }), __jsx(TextGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faBracketsCurly,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }), \" Tx Details\"), __jsx(Value, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }\n  }, __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 21\n    }\n  }, JSON.stringify(transaction, null, 2)))))), walletIsActive && __jsx(React.Fragment, null, __jsx(StyledDivider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }), __jsx(StyledCoralButton, {\n    onClick: fcl.unauthenticate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, \"Disconnect Wallet\"))));\n};\n\nexport default WalletDetails;","map":{"version":3,"sources":["/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/components/wallet-details/index.js"],"names":["React","useEffect","useContext","useState","useRouter","fcl","FontAwesomeIcon","faLink","faPlug","faWallet","faTrophyAlt","faSatelliteDish","faBracketsCurly","WHITE","WalletContext","CoralButton","BASE_TEXT","WEIGHT","AuxiliaryPanelHeader","Divider","Container","display","flexDirection","borderRadius","backgroundColor","boxShadow","padding","Label","fontSize","fontWeight","BOLD","Value","TextGroup","StyledDivider","ctaButtonStyles","height","marginTop","marginBottom","StyledCoralButton","Awards","Award","AwardImg","AwardId","WalletDetails","currentUser","status","transaction","walletConnected","walletNotConnected","setupWallet","setupFCLAuthHandler","walletUser","vaultIsSetup","collectionIsSetup","walletBalance","walletCollection","connectActiveWalletToLyraLabs","authHandlerIsSetup","setAuthHandlerIsSetup","getResourcesComplete","router","route","walletIsLinked","walletAddress","walletIsSetup","walletIsActive","walletIsConfigured","addr","authenticate","Math","round","length","map","item","JSON","stringify","unauthenticate"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport styled from \"@emotion/styled\";\n\nimport * as fcl from \"@onflow/fcl\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faPlug,\n  faWallet,\n  faTrophyAlt,\n  faSatelliteDish,\n  faBracketsCurly,\n} from \"@fortawesome/pro-regular-svg-icons\";\n\nimport { WHITE } from \"@style/colors\";\n\nimport { WalletContext } from \"@enhancers/wallet-provider\";\nimport CoralButton from \"@library/components/buttons/coral\";\n\nimport { BASE_TEXT, WEIGHT } from \"@style/typography\";\n\nimport { AuxiliaryPanelHeader } from \"@library/components/typography/headers/auxiliary-panel\";\n\nimport { Divider } from \"@library/components/layout\";\n\nconst Container = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"column\",\n  borderRadius: 3,\n  backgroundColor: WHITE,\n  boxShadow: \"0 1px 2px 0 rgba(0,0,0,.1)\",\n  padding: \"1rem\",\n});\n\nconst Label = styled(\"div\")({\n  ...BASE_TEXT,\n  fontSize: 12,\n  fontWeight: WEIGHT.BOLD,\n});\n\nconst Value = styled(\"div\")({\n  ...BASE_TEXT,\n});\n\nconst TextGroup = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"column\",\n});\n\nconst StyledDivider = styled(Divider)({\n  marginTop: 5,\n  marginBottom: 5,\n});\n\nconst ctaButtonStyles = {\n  height: 24,\n  marginTop: 5,\n  marginBottom: 5,\n};\n\nconst StyledCoralButton = styled(CoralButton)({\n  ...ctaButtonStyles,\n});\n\nconst Awards = styled(\"div\")({\n  display: \"flex\",\n});\n\nconst Award = styled(\"div\")({\n  marginRight: 10,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n});\n\nconst AwardImg = styled(\"div\")({\n  ...BASE_TEXT,\n  fontSize: 22,\n});\n\nconst AwardId = styled(\"div\")({\n  ...BASE_TEXT,\n});\n\nconst WalletDetails = ({ currentUser }) => {\n  const {\n    status,\n    transaction,\n    walletConnected,\n    walletNotConnected,\n    setupWallet,\n    setupFCLAuthHandler,\n    walletUser,\n    vaultIsSetup,\n    collectionIsSetup,\n    walletBalance,\n    walletCollection,\n    connectActiveWalletToLyraLabs,\n    authHandlerIsSetup,\n    setAuthHandlerIsSetup,\n    getResourcesComplete,\n  } = useContext(WalletContext);\n\n  const router = useRouter();\n  const route = router.route;\n\n  useEffect(() => {\n    if (!authHandlerIsSetup) {\n      setupFCLAuthHandler();\n      setAuthHandlerIsSetup(true);\n    }\n  }, []);\n\n  const walletIsLinked =\n    currentUser && currentUser.walletAddress && currentUser.walletIsSetup;\n\n  const walletIsActive = walletConnected && walletUser;\n\n  const walletIsConfigured = vaultIsSetup && collectionIsSetup;\n\n  return (\n    <>\n      <AuxiliaryPanelHeader>Flow Wallet</AuxiliaryPanelHeader>\n      <Container>\n        <TextGroup>\n          <Label>\n            <FontAwesomeIcon icon={faLink} /> Linked Wallet\n          </Label>\n          {!walletIsActive && <Value>No active wallet</Value>}\n          {walletIsActive && !getResourcesComplete && <Value>Loading...</Value>}\n          {walletIsActive && !walletIsConfigured && getResourcesComplete && (\n            <StyledCoralButton onClick={setupWallet}>\n              Setup Wallet\n            </StyledCoralButton>\n          )}\n          {walletIsActive &&\n            getResourcesComplete &&\n            walletIsConfigured &&\n            (!walletIsLinked ||\n              (walletIsLinked &&\n                walletUser.addr !== currentUser.walletAddress)) && (\n              <StyledCoralButton onClick={connectActiveWalletToLyraLabs}>\n                Link Wallet\n              </StyledCoralButton>\n            )}\n          {walletIsActive &&\n            getResourcesComplete &&\n            walletIsConfigured &&\n            walletIsLinked &&\n            walletUser.addr === currentUser.walletAddress && (\n              <Value>{`0x${currentUser.walletAddress}`}</Value>\n            )}\n        </TextGroup>\n        <StyledDivider />\n        <TextGroup>\n          <Label>\n            <FontAwesomeIcon icon={faPlug} /> Active Wallet\n          </Label>\n          {walletIsActive ? (\n            <Value>{`0x${walletUser.addr}`}</Value>\n          ) : (\n            <StyledCoralButton onClick={fcl.authenticate}>\n              Connect Wallet\n            </StyledCoralButton>\n          )}\n        </TextGroup>\n        <StyledDivider />\n        <TextGroup>\n          <Label>\n            <FontAwesomeIcon icon={faWallet} /> Balance\n          </Label>\n          {walletIsActive ? (\n            walletIsConfigured ? (\n              <Value>{`${Math.round(walletBalance)} LYRA`}</Value>\n            ) : (\n              <Value>No wallet setup</Value>\n            )\n          ) : (\n            <Value>No active wallet</Value>\n          )}\n        </TextGroup>\n        <StyledDivider />\n        <TextGroup>\n          <Label>\n            <FontAwesomeIcon icon={faTrophyAlt} /> Awards\n          </Label>\n          {walletIsActive ? (\n            walletIsConfigured ? (\n              <Value>\n                {walletCollection && walletCollection.length > 0 ? (\n                  <Awards>\n                    {walletCollection.map((item) => (\n                      <Award key={item}>\n                        <AwardImg>🏅</AwardImg>\n                        <AwardId>{`#${item}`}</AwardId>\n                      </Award>\n                    ))}\n                  </Awards>\n                ) : (\n                  \"none\"\n                )}\n              </Value>\n            ) : (\n              <Value>No wallet setup</Value>\n            )\n          ) : (\n            <Value>No active wallet</Value>\n          )}\n        </TextGroup>\n        {walletIsActive && status && (\n          <>\n            <StyledDivider />\n            <TextGroup>\n              <Label>\n                <FontAwesomeIcon icon={faSatelliteDish} /> Tx Status\n              </Label>\n              <Value>{status}</Value>\n            </TextGroup>\n            {transaction && (\n              <>\n                <StyledDivider />\n                <TextGroup>\n                  <Label>\n                    <FontAwesomeIcon icon={faBracketsCurly} /> Tx Details\n                  </Label>\n                  {}\n                  <Value>\n                    <code>{JSON.stringify(transaction, null, 2)}</code>\n                  </Value>\n                </TextGroup>\n              </>\n            )}\n          </>\n        )}\n        {walletIsActive && (\n          <>\n            <StyledDivider />\n            <StyledCoralButton onClick={fcl.unauthenticate}>\n              Disconnect Wallet\n            </StyledCoralButton>\n          </>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default WalletDetails;\n"]},"metadata":{},"sourceType":"module"}