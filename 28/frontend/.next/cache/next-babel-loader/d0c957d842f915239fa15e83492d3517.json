{"ast":null,"code":"import gql from \"graphql-tag\";\nimport { postFields } from \"./fragments\";\nexport const ASSOCIATE_WALLET = gql`\n  mutation associateWallet($address: String) {\n    associateWallet(address: $address) {\n      walletAddress\n      walletIsSetup\n    }\n  }\n`;\nexport const SIGN_UPLOAD = gql`\n  mutation signUpload($fileName: String, $fileType: String) {\n    signUpload(fileName: $fileName, fileType: $fileType) {\n      signedRequest\n      url\n    }\n  }\n`;\nexport const CREATE_POST = gql`\n  mutation createPost($givenUrl: String) {\n    createPost(givenUrl: $givenUrl) {\n      ...postFields\n    }\n  }\n  ${postFields}\n`;\nexport const ARCHIVE_POST = gql`\n  mutation archivePost($postId: String) {\n    archivePost(postId: $postId) {\n      ...postFields\n    }\n  }\n  ${postFields}\n`;\nexport const UNARCHIVE_POST = gql`\n  mutation unarchivePost($postId: String) {\n    unarchivePost(postId: $postId) {\n      ...postFields\n    }\n  }\n  ${postFields}\n`;\nexport const CREATE_COMMENT = gql`\n  mutation createComment($postId: ID, $parentId: ID, $body: String!) {\n    createComment(postId: $postId, parentId: $parentId, body: $body) {\n      id\n      text\n      votesCount\n      author {\n        avatar\n        username\n        name\n      }\n      replies {\n        id\n        text\n        votesCount\n        author {\n          avatar\n          username\n          name\n        }\n      }\n    }\n  }\n`; // export const CREATE_REPLY = gql`\n//   mutation createReply($parentId: ID, $body: String!) {\n//     createReply(parentId: $parentId, body: $body) {\n//       id\n//     }\n//   }\n// `;\n\nexport const UPDATE_FOLLOWED_TOPIC = gql`\n  mutation updateFollowedTopic(\n    $userId: ID!\n    $topicId: ID!\n    $following: Boolean!\n  ) {\n    updateFollowedTopic(\n      userId: $userId\n      topicId: $topicId\n      following: $following\n    ) {\n      id\n    }\n  }\n`;\nexport const VOTE = gql`\n  mutation vote($userId: ID!, $postId: ID!) {\n    vote(userId: $userId, postId: $postId) {\n      id\n    }\n  }\n`;\nexport const COMMENT_VOTE = gql`\n  mutation commentVote($userId: ID!, $commentId: ID!) {\n    commentVote(userId: $userId, commentId: $commentId) {\n      id\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/data/mutations.js"],"names":["gql","postFields","ASSOCIATE_WALLET","SIGN_UPLOAD","CREATE_POST","ARCHIVE_POST","UNARCHIVE_POST","CREATE_COMMENT","UPDATE_FOLLOWED_TOPIC","VOTE","COMMENT_VOTE"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,OAAO,MAAMC,gBAAgB,GAAGF,GAAI;;;;;;;CAA7B;AASP,OAAO,MAAMG,WAAW,GAAGH,GAAI;;;;;;;CAAxB;AASP,OAAO,MAAMI,WAAW,GAAGJ,GAAI;;;;;;IAM3BC,UAAW;CANR;AASP,OAAO,MAAMI,YAAY,GAAGL,GAAI;;;;;;IAM5BC,UAAW;CANR;AASP,OAAO,MAAMK,cAAc,GAAGN,GAAI;;;;;;IAM9BC,UAAW;CANR;AASP,OAAO,MAAMM,cAAc,GAAGP,GAAI;;;;;;;;;;;;;;;;;;;;;;;CAA3B,C,CAyBP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMQ,qBAAqB,GAAGR,GAAI;;;;;;;;;;;;;;CAAlC;AAgBP,OAAO,MAAMS,IAAI,GAAGT,GAAI;;;;;;CAAjB;AAQP,OAAO,MAAMU,YAAY,GAAGV,GAAI;;;;;;CAAzB","sourcesContent":["import gql from \"graphql-tag\";\nimport { postFields } from \"./fragments\";\n\nexport const ASSOCIATE_WALLET = gql`\n  mutation associateWallet($address: String) {\n    associateWallet(address: $address) {\n      walletAddress\n      walletIsSetup\n    }\n  }\n`;\n\nexport const SIGN_UPLOAD = gql`\n  mutation signUpload($fileName: String, $fileType: String) {\n    signUpload(fileName: $fileName, fileType: $fileType) {\n      signedRequest\n      url\n    }\n  }\n`;\n\nexport const CREATE_POST = gql`\n  mutation createPost($givenUrl: String) {\n    createPost(givenUrl: $givenUrl) {\n      ...postFields\n    }\n  }\n  ${postFields}\n`;\n\nexport const ARCHIVE_POST = gql`\n  mutation archivePost($postId: String) {\n    archivePost(postId: $postId) {\n      ...postFields\n    }\n  }\n  ${postFields}\n`;\n\nexport const UNARCHIVE_POST = gql`\n  mutation unarchivePost($postId: String) {\n    unarchivePost(postId: $postId) {\n      ...postFields\n    }\n  }\n  ${postFields}\n`;\n\nexport const CREATE_COMMENT = gql`\n  mutation createComment($postId: ID, $parentId: ID, $body: String!) {\n    createComment(postId: $postId, parentId: $parentId, body: $body) {\n      id\n      text\n      votesCount\n      author {\n        avatar\n        username\n        name\n      }\n      replies {\n        id\n        text\n        votesCount\n        author {\n          avatar\n          username\n          name\n        }\n      }\n    }\n  }\n`;\n\n// export const CREATE_REPLY = gql`\n//   mutation createReply($parentId: ID, $body: String!) {\n//     createReply(parentId: $parentId, body: $body) {\n//       id\n//     }\n//   }\n// `;\n\nexport const UPDATE_FOLLOWED_TOPIC = gql`\n  mutation updateFollowedTopic(\n    $userId: ID!\n    $topicId: ID!\n    $following: Boolean!\n  ) {\n    updateFollowedTopic(\n      userId: $userId\n      topicId: $topicId\n      following: $following\n    ) {\n      id\n    }\n  }\n`;\n\nexport const VOTE = gql`\n  mutation vote($userId: ID!, $postId: ID!) {\n    vote(userId: $userId, postId: $postId) {\n      id\n    }\n  }\n`;\n\nexport const COMMENT_VOTE = gql`\n  mutation commentVote($userId: ID!, $commentId: ID!) {\n    commentVote(userId: $userId, commentId: $commentId) {\n      id\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}