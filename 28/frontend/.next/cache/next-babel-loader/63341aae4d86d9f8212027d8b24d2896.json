{"ast":null,"code":"var _jsxFileName = \"/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/shared/enhancers/wallet-provider.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport * as fcl from \"@onflow/fcl\";\nimport * as sdk from \"@onflow/sdk\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { ASSOCIATE_WALLET } from \"@data/mutations\";\nimport { toast } from \"react-toastify\";\nimport { CURRENT_USER_QUERY } from \"../../data/queries\";\nimport checkReference from \"../../flow/scripts/check-ref.cdc\";\nimport checkCollection from \"../../flow/scripts/check-collection.cdc\";\nimport checkActiveWalletScript from \"../../flow/scripts/check-active-wallet.cdc\";\nimport vaultBalance from \"../../flow/scripts/vault-balance.cdc\";\nimport getCollectionItems from \"../../flow/scripts/get-collection-items.cdc\";\nimport giveNFTAward from \"../../flow/transactions/give-nft-award.cdc\";\nimport setupUserWallet from \"../../flow/transactions/setup-user-wallet.cdc\";\nexport const WalletContext = React.createContext({});\nfcl.config().put(\"challenge.handshake\", \"http://localhost:8701/flow/authenticate\");\n\nconst getAddress = (user, nullPrefix = true) => {\n  return nullPrefix ? `0x${user.addr}` : user.addr;\n};\n\nconst generateCode = async (rawCode, match) => {\n  if (!match) {\n    return rawCode;\n  }\n\n  const {\n    query\n  } = match;\n  return rawCode.replace(query, item => {\n    return match[item];\n  });\n};\n\nexport const withWallet = Component => {\n  const WithWallet = () => {\n    const {\n      0: walletUser,\n      1: setWalletUser\n    } = useState(null);\n    const {\n      0: vaultIsSetup,\n      1: setVaultIsSetup\n    } = useState(false);\n    const {\n      0: collectionIsSetup,\n      1: setCollectionIsSetup\n    } = useState(false);\n    const {\n      0: walletBalance,\n      1: setWalletBalance\n    } = useState(null);\n    const {\n      0: walletCollection,\n      1: setWalletCollection\n    } = useState(null);\n    const {\n      0: authHandlerIsSetup,\n      1: setAuthHandlerIsSetup\n    } = useState(false);\n    const walletConnected = walletUser && walletUser.loggedIn;\n    const walletNotConnected = walletUser === null || walletUser && !walletUser.loggedIn;\n\n    const setupFCLAuthHandler = () => {\n      console.log(\"calling setupFCLAuthHandler\");\n      fcl.currentUser().subscribe(async user => {\n        if (user.loggedIn) {\n          setWalletUser(user); // Check if the wallet is set up yet\n\n          getWalletResources(); // const vaultStatus = await checkUserVaultStatus();\n          // setVaultIsSetup(vaultStatus);\n          // if (vaultStatus) {\n          //   startBalancePoll();\n          // }\n          // const collectionStatus = await checkUserCollectionStatus();\n          // setCollectionIsSetup(collectionStatus);\n          // if (collectionStatus) {\n          //   getUserCollection();\n          // }\n        } else {\n          console.log(\"is not logged in\");\n        }\n      });\n    };\n\n    const getWalletResources = async () => {\n      const vaultStatus = await checkUserVaultStatus();\n      setVaultIsSetup(vaultStatus);\n\n      if (vaultStatus) {\n        startBalancePoll();\n      }\n\n      const collectionStatus = await checkUserCollectionStatus();\n      setCollectionIsSetup(collectionStatus);\n\n      if (collectionStatus) {\n        getUserCollection();\n      }\n    };\n\n    let pollId = null;\n\n    const startBalancePoll = async () => {\n      const balance = await getUserBalance();\n      setWalletBalance(balance);\n      pollId = setTimeout(startBalancePoll, 2000);\n    };\n\n    const startCollectionPoll = async () => {};\n\n    const getUserBalance = async () => {\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      const contractAddress = \"0x01cf0e2f2f715450\";\n      const scriptCode = await generateCode(vaultBalance, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": contractAddress,\n        \"0x02\": address\n      });\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const balance = await fcl.decode(response);\n      return balance;\n    };\n\n    const getUserCollection = async () => {\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot); //   const contractAddress = \"0xf3fcd2c1a78f5eee\";\n\n      const contractAddress = \"0xfd43f9148d4b725d\";\n      const scriptCode = await generateCode(getCollectionItems, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": contractAddress,\n        \"0x02\": address\n      });\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const items = await fcl.decode(response);\n      return items;\n    };\n\n    const checkUserVaultStatus = async () => {\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      const contractAddress = \"0x01cf0e2f2f715450\";\n      const scriptCode = await generateCode(checkReference, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": contractAddress,\n        \"0x02\": address\n      });\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const checkResult = await fcl.decode(response);\n      return checkResult;\n    };\n\n    const checkUserCollectionStatus = async () => {\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot); //   const contractAddress = \"0xf3fcd2c1a78f5eee\";\n\n      const contractAddress = \"0xfd43f9148d4b725d\";\n      const scriptCode = await generateCode(checkCollection, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": contractAddress,\n        \"0x02\": address\n      });\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const checkResult = await fcl.decode(response);\n      return checkResult;\n    };\n\n    const checkActiveWallet = async () => {\n      // Checks if the active wallet is setup\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      const scriptCode = await generateCode(checkActiveWalletScript, {\n        query: /(0x01|0x02|0x03)/g,\n        \"0x01\": `0x${FUNGIBLE_TOKEN_CONTRACT_ADDRESS}`,\n        \"0x02\": `0x${NON_FUNGIBLE_TOKEN_CONTRACT_ADDRESS}`,\n        \"0x03\": address\n      });\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const activeWalletStatus = await fcl.decode(response);\n      return activeWalletStatus;\n    };\n\n    const setupWallet = async () => {\n      // Create a vault and a collection\n      const user = fcl.currentUser();\n      const {\n        authorization\n      } = user;\n      const snapshot = await user.snapshot();\n      const fungibleTokenContractAddress = \"0x01cf0e2f2f715450\";\n      const nonFungibleTokenContractAddress = \"0xfd43f9148d4b725d\";\n      const initCode = await generateCode(setupUserWallet, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": fungibleTokenContractAddress,\n        \"0x02\": nonFungibleTokenContractAddress\n      });\n\n      try {\n        const initResponse = await fcl.send([sdk.transaction`${initCode}`, fcl.proposer(authorization), fcl.payer(authorization), fcl.authorizations([authorization]), fcl.limit(100)], {\n          node: \"http://localhost:8080\"\n        });\n        getWalletResources();\n      } catch (e) {\n        console.log(\"setupNFTCollection caught error\", e);\n      }\n    };\n\n    const giveAward = async ({\n      recipientAddress\n    }) => {\n      console.log(\"giving award to recipientAddress\", recipientAddress); // Create the user vault\n\n      const user = fcl.currentUser();\n      const {\n        authorization\n      } = user;\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot); // const contractAddress = \"0xf3fcd2c1a78f5eee\";\n\n      const fungibleTokenContractAddress = \"0x01cf0e2f2f715450\";\n      const awardContractAddress = \"0xfd43f9148d4b725d\";\n      const initCode = await generateCode(giveNFTAward, {\n        query: /(0x01|0x02|0x03)/g,\n        \"0x01\": awardContractAddress,\n        \"0x02\": fungibleTokenContractAddress,\n        \"0x03\": `0x${recipientAddress}`\n      });\n\n      try {\n        const initResponse = await fcl.send([sdk.transaction`${initCode}`, fcl.proposer(authorization), fcl.payer(authorization), fcl.authorizations([authorization]), fcl.limit(100)], {\n          node: \"http://localhost:8080\"\n        });\n        console.log(\"give award initResponse\", initResponse);\n      } catch (e) {\n        console.log(\"give award caught error\", e);\n      }\n    };\n\n    const [associateWallet, {\n      data,\n      loading,\n      error\n    }] = useMutation(ASSOCIATE_WALLET, {\n      update: (cache, {\n        data\n      }) => {\n        const {\n          me: currentUserData\n        } = cache.readQuery({\n          query: CURRENT_USER_QUERY\n        });\n        cache.writeQuery({\n          query: CURRENT_USER_QUERY,\n          data: {\n            me: _objectSpread(_objectSpread({}, currentUserData), data.associateWallet)\n          }\n        });\n      },\n      onError: () => {\n        toast.error(\"😳 Ekkk! Failed to link wallet.\", {\n          position: \"bottom-left\"\n        });\n      }\n    });\n\n    const connectActiveWalletToLyraLabs = async () => {\n      associateWallet({\n        variables: {\n          address: walletUser.addr\n        }\n      });\n    };\n\n    return __jsx(WalletContext.Provider, {\n      value: {\n        walletConnected,\n        walletNotConnected,\n        setupWallet,\n        setupFCLAuthHandler,\n        walletUser,\n        vaultIsSetup,\n        collectionIsSetup,\n        walletBalance,\n        walletCollection,\n        connectActiveWalletToLyraLabs,\n        giveAward,\n        authHandlerIsSetup,\n        setAuthHandlerIsSetup\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 7\n      }\n    }, __jsx(Component, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return WithWallet;\n};","map":{"version":3,"sources":["/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/shared/enhancers/wallet-provider.js"],"names":["React","useState","fcl","sdk","useMutation","ASSOCIATE_WALLET","toast","CURRENT_USER_QUERY","checkReference","checkCollection","checkActiveWalletScript","vaultBalance","getCollectionItems","giveNFTAward","setupUserWallet","WalletContext","createContext","config","put","getAddress","user","nullPrefix","addr","generateCode","rawCode","match","query","replace","item","withWallet","Component","WithWallet","walletUser","setWalletUser","vaultIsSetup","setVaultIsSetup","collectionIsSetup","setCollectionIsSetup","walletBalance","setWalletBalance","walletCollection","setWalletCollection","authHandlerIsSetup","setAuthHandlerIsSetup","walletConnected","loggedIn","walletNotConnected","setupFCLAuthHandler","console","log","currentUser","subscribe","getWalletResources","vaultStatus","checkUserVaultStatus","startBalancePoll","collectionStatus","checkUserCollectionStatus","getUserCollection","pollId","balance","getUserBalance","setTimeout","startCollectionPoll","snapshot","address","contractAddress","scriptCode","script","response","send","decode","items","checkResult","checkActiveWallet","FUNGIBLE_TOKEN_CONTRACT_ADDRESS","NON_FUNGIBLE_TOKEN_CONTRACT_ADDRESS","activeWalletStatus","setupWallet","authorization","fungibleTokenContractAddress","nonFungibleTokenContractAddress","initCode","initResponse","transaction","proposer","payer","authorizations","limit","node","e","giveAward","recipientAddress","awardContractAddress","associateWallet","data","loading","error","update","cache","me","currentUserData","readQuery","writeQuery","onError","position","connectActiveWalletToLyraLabs","variables"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport * as fcl from \"@onflow/fcl\";\nimport * as sdk from \"@onflow/sdk\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { ASSOCIATE_WALLET } from \"@data/mutations\";\nimport { toast } from \"react-toastify\";\nimport { CURRENT_USER_QUERY } from \"../../data/queries\";\n\nimport checkReference from \"../../flow/scripts/check-ref.cdc\";\nimport checkCollection from \"../../flow/scripts/check-collection.cdc\";\nimport checkActiveWalletScript from \"../../flow/scripts/check-active-wallet.cdc\";\nimport vaultBalance from \"../../flow/scripts/vault-balance.cdc\";\nimport getCollectionItems from \"../../flow/scripts/get-collection-items.cdc\";\nimport giveNFTAward from \"../../flow/transactions/give-nft-award.cdc\";\n\nimport setupUserWallet from \"../../flow/transactions/setup-user-wallet.cdc\";\n\nexport const WalletContext = React.createContext({});\n\nfcl\n  .config()\n  .put(\"challenge.handshake\", \"http://localhost:8701/flow/authenticate\");\n\nconst getAddress = (user, nullPrefix = true) => {\n  return nullPrefix ? `0x${user.addr}` : user.addr;\n};\n\nconst generateCode = async (rawCode, match) => {\n  if (!match) {\n    return rawCode;\n  }\n  const { query } = match;\n  return rawCode.replace(query, (item) => {\n    return match[item];\n  });\n};\n\nexport const withWallet = (Component) => {\n  const WithWallet = () => {\n    const [walletUser, setWalletUser] = useState(null);\n    const [vaultIsSetup, setVaultIsSetup] = useState(false);\n    const [collectionIsSetup, setCollectionIsSetup] = useState(false);\n    const [walletBalance, setWalletBalance] = useState(null);\n    const [walletCollection, setWalletCollection] = useState(null);\n    const [authHandlerIsSetup, setAuthHandlerIsSetup] = useState(false);\n\n    const walletConnected = walletUser && walletUser.loggedIn;\n    const walletNotConnected =\n      walletUser === null || (walletUser && !walletUser.loggedIn);\n\n    const setupFCLAuthHandler = () => {\n      console.log(\"calling setupFCLAuthHandler\");\n      fcl.currentUser().subscribe(async (user) => {\n        if (user.loggedIn) {\n          setWalletUser(user);\n          // Check if the wallet is set up yet\n          getWalletResources();\n          // const vaultStatus = await checkUserVaultStatus();\n          // setVaultIsSetup(vaultStatus);\n          // if (vaultStatus) {\n          //   startBalancePoll();\n          // }\n          // const collectionStatus = await checkUserCollectionStatus();\n          // setCollectionIsSetup(collectionStatus);\n          // if (collectionStatus) {\n          //   getUserCollection();\n          // }\n        } else {\n          console.log(\"is not logged in\");\n        }\n      });\n    };\n\n    const getWalletResources = async () => {\n      const vaultStatus = await checkUserVaultStatus();\n      setVaultIsSetup(vaultStatus);\n      if (vaultStatus) {\n        startBalancePoll();\n      }\n      const collectionStatus = await checkUserCollectionStatus();\n      setCollectionIsSetup(collectionStatus);\n      if (collectionStatus) {\n        getUserCollection();\n      }\n    };\n\n    let pollId = null;\n    const startBalancePoll = async () => {\n      const balance = await getUserBalance();\n      setWalletBalance(balance);\n      pollId = setTimeout(startBalancePoll, 2000);\n    };\n\n    const startCollectionPoll = async () => {};\n\n    const getUserBalance = async () => {\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      const contractAddress = \"0x01cf0e2f2f715450\";\n      const scriptCode = await generateCode(vaultBalance, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": contractAddress,\n        \"0x02\": address,\n      });\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const balance = await fcl.decode(response);\n      return balance;\n    };\n\n    const getUserCollection = async () => {\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      //   const contractAddress = \"0xf3fcd2c1a78f5eee\";\n      const contractAddress = \"0xfd43f9148d4b725d\";\n      const scriptCode = await generateCode(getCollectionItems, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": contractAddress,\n        \"0x02\": address,\n      });\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const items = await fcl.decode(response);\n      return items;\n    };\n\n    const checkUserVaultStatus = async () => {\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      const contractAddress = \"0x01cf0e2f2f715450\";\n      const scriptCode = await generateCode(checkReference, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": contractAddress,\n        \"0x02\": address,\n      });\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const checkResult = await fcl.decode(response);\n      return checkResult;\n    };\n\n    const checkUserCollectionStatus = async () => {\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      //   const contractAddress = \"0xf3fcd2c1a78f5eee\";\n      const contractAddress = \"0xfd43f9148d4b725d\";\n      const scriptCode = await generateCode(checkCollection, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": contractAddress,\n        \"0x02\": address,\n      });\n\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const checkResult = await fcl.decode(response);\n      return checkResult;\n    };\n\n    const checkActiveWallet = async () => {\n      // Checks if the active wallet is setup\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      const scriptCode = await generateCode(checkActiveWalletScript, {\n        query: /(0x01|0x02|0x03)/g,\n        \"0x01\": `0x${FUNGIBLE_TOKEN_CONTRACT_ADDRESS}`,\n        \"0x02\": `0x${NON_FUNGIBLE_TOKEN_CONTRACT_ADDRESS}`,\n        \"0x03\": address,\n      });\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const activeWalletStatus = await fcl.decode(response);\n      return activeWalletStatus;\n    };\n\n    const setupWallet = async () => {\n      // Create a vault and a collection\n      const user = fcl.currentUser();\n      const { authorization } = user;\n      const snapshot = await user.snapshot();\n      const fungibleTokenContractAddress = \"0x01cf0e2f2f715450\";\n      const nonFungibleTokenContractAddress = \"0xfd43f9148d4b725d\";\n      const initCode = await generateCode(setupUserWallet, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": fungibleTokenContractAddress,\n        \"0x02\": nonFungibleTokenContractAddress,\n      });\n      try {\n        const initResponse = await fcl.send(\n          [\n            sdk.transaction`${initCode}`,\n            fcl.proposer(authorization),\n            fcl.payer(authorization),\n            fcl.authorizations([authorization]),\n            fcl.limit(100),\n          ],\n          {\n            node: \"http://localhost:8080\",\n          }\n        );\n        getWalletResources();\n      } catch (e) {\n        console.log(\"setupNFTCollection caught error\", e);\n      }\n    };\n\n    const giveAward = async ({ recipientAddress }) => {\n      console.log(\"giving award to recipientAddress\", recipientAddress);\n      // Create the user vault\n      const user = fcl.currentUser();\n      const { authorization } = user;\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      // const contractAddress = \"0xf3fcd2c1a78f5eee\";\n      const fungibleTokenContractAddress = \"0x01cf0e2f2f715450\";\n      const awardContractAddress = \"0xfd43f9148d4b725d\";\n      const initCode = await generateCode(giveNFTAward, {\n        query: /(0x01|0x02|0x03)/g,\n        \"0x01\": awardContractAddress,\n        \"0x02\": fungibleTokenContractAddress,\n        \"0x03\": `0x${recipientAddress}`,\n      });\n      try {\n        const initResponse = await fcl.send(\n          [\n            sdk.transaction`${initCode}`,\n            fcl.proposer(authorization),\n            fcl.payer(authorization),\n            fcl.authorizations([authorization]),\n            fcl.limit(100),\n          ],\n          {\n            node: \"http://localhost:8080\",\n          }\n        );\n        console.log(\"give award initResponse\", initResponse);\n      } catch (e) {\n        console.log(\"give award caught error\", e);\n      }\n    };\n\n    const [associateWallet, { data, loading, error }] = useMutation(\n      ASSOCIATE_WALLET,\n      {\n        update: (cache, { data }) => {\n          const { me: currentUserData } = cache.readQuery({\n            query: CURRENT_USER_QUERY,\n          });\n          cache.writeQuery({\n            query: CURRENT_USER_QUERY,\n            data: { me: { ...currentUserData, ...data.associateWallet } },\n          });\n        },\n        onError: () => {\n          toast.error(\"😳 Ekkk! Failed to link wallet.\", {\n            position: \"bottom-left\",\n          });\n        },\n      }\n    );\n\n    const connectActiveWalletToLyraLabs = async () => {\n      associateWallet({\n        variables: {\n          address: walletUser.addr,\n        },\n      });\n    };\n\n    return (\n      <WalletContext.Provider\n        value={{\n          walletConnected,\n          walletNotConnected,\n          setupWallet,\n          setupFCLAuthHandler,\n          walletUser,\n          vaultIsSetup,\n          collectionIsSetup,\n          walletBalance,\n          walletCollection,\n          connectActiveWalletToLyraLabs,\n          giveAward,\n          authHandlerIsSetup,\n          setAuthHandlerIsSetup,\n        }}\n      >\n        <Component />\n      </WalletContext.Provider>\n    );\n  };\n  return WithWallet;\n};\n"]},"metadata":{},"sourceType":"module"}