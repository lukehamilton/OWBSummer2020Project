{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/shared/enhancers/private-route.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport Router from \"next/router\"; // const login = \"/login?redirected=true\"; // Define your login route address.\n\nvar login = \"/\"; // Define your login route address.\n\n/**\n * Check user authentication and authorization\n * It depends on you and your auth service provider.\n * @returns {{auth: null}}\n */\n\nvar checkUserAuthentication = function checkUserAuthentication() {\n  return {\n    auth: null\n  }; // change null to { isAdmin: true } for test it.\n};\n\nexport default (function (WrappedComponent) {\n  console.log(\"---------------- in getInitialProps ---------\");\n\n  var hocComponent = function hocComponent(_ref) {\n    var props = _extends({}, _ref);\n\n    return __jsx(WrappedComponent, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n  };\n\n  hocComponent.getInitialProps = function _callee(_ref2) {\n    var res, userAuth, wrappedProps;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            res = _ref2.res;\n            console.log(\"---------------- in getInitialProps ---------\");\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(checkUserAuthentication());\n\n          case 4:\n            userAuth = _context.sent;\n\n            if (userAuth === null || userAuth === void 0 ? void 0 : userAuth.auth) {\n              _context.next = 9;\n              break;\n            }\n\n            // Handle server-side and client-side rendering.\n            if (res) {\n              res === null || res === void 0 ? void 0 : res.writeHead(302, {\n                Location: login\n              });\n              res === null || res === void 0 ? void 0 : res.end();\n            } else {\n              Router.replace(login);\n            }\n\n            _context.next = 14;\n            break;\n\n          case 9:\n            if (!WrappedComponent.getInitialProps) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(WrappedComponent.getInitialProps(userAuth));\n\n          case 12:\n            wrappedProps = _context.sent;\n            return _context.abrupt(\"return\", _objectSpread({}, wrappedProps, {\n              userAuth: userAuth\n            }));\n\n          case 14:\n            return _context.abrupt(\"return\", {\n              userAuth: userAuth\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  return hocComponent;\n});","map":{"version":3,"sources":["/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/shared/enhancers/private-route.js"],"names":["React","Router","login","checkUserAuthentication","auth","WrappedComponent","console","log","hocComponent","props","getInitialProps","res","userAuth","writeHead","Location","end","replace","wrappedProps"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAEA;;AACA,IAAMC,KAAK,GAAG,GAAd,C,CAAmB;;AAEnB;;;;;;AAKA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AACpC,SAAO;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAP,CADoC,CACb;AACxB,CAFD;;AAIA,gBAAe,UAACC,gBAAD,EAAsB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,QAAMC,KAAN;;AAAA,WAAkB,MAAC,gBAAD,eAAsBA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlB;AAAA,GAArB;;AAEAD,EAAAA,YAAY,CAACE,eAAb,GAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,SAASA,GAAT;AAC7BL,YAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ;AAD6B;AAAA,6CAENJ,uBAAuB,EAFjB;;AAAA;AAEvBS,YAAAA,QAFuB;;AAAA,gBAKxBA,QALwB,aAKxBA,QALwB,uBAKxBA,QAAQ,CAAER,IALc;AAAA;AAAA;AAAA;;AAM3B;AACA,gBAAIO,GAAJ,EAAS;AACPA,cAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEE,SAAL,CAAe,GAAf,EAAoB;AAClBC,gBAAAA,QAAQ,EAAEZ;AADQ,eAApB;AAGAS,cAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEI,GAAL;AACD,aALD,MAKO;AACLd,cAAAA,MAAM,CAACe,OAAP,CAAed,KAAf;AACD;;AAd0B;AAAA;;AAAA;AAAA,iBAelBG,gBAAgB,CAACK,eAfC;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAgBAL,gBAAgB,CAACK,eAAjB,CAAiCE,QAAjC,CAhBA;;AAAA;AAgBrBK,YAAAA,YAhBqB;AAAA,+DAiBfA,YAjBe;AAiBDL,cAAAA,QAAQ,EAARA;AAjBC;;AAAA;AAAA,6CAoBtB;AAAEA,cAAAA,QAAQ,EAARA;AAAF,aApBsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAuBA,SAAOJ,YAAP;AACD,CA5BD","sourcesContent":["import React from \"react\";\nimport Router from \"next/router\";\n\n// const login = \"/login?redirected=true\"; // Define your login route address.\nconst login = \"/\"; // Define your login route address.\n\n/**\n * Check user authentication and authorization\n * It depends on you and your auth service provider.\n * @returns {{auth: null}}\n */\nconst checkUserAuthentication = () => {\n  return { auth: null }; // change null to { isAdmin: true } for test it.\n};\n\nexport default (WrappedComponent) => {\n  console.log(\"---------------- in getInitialProps ---------\");\n  const hocComponent = ({ ...props }) => <WrappedComponent {...props} />;\n\n  hocComponent.getInitialProps = async ({ res }) => {\n    console.log(\"---------------- in getInitialProps ---------\");\n    const userAuth = await checkUserAuthentication();\n\n    // Are you an authorized user or not?\n    if (!userAuth?.auth) {\n      // Handle server-side and client-side rendering.\n      if (res) {\n        res?.writeHead(302, {\n          Location: login,\n        });\n        res?.end();\n      } else {\n        Router.replace(login);\n      }\n    } else if (WrappedComponent.getInitialProps) {\n      const wrappedProps = await WrappedComponent.getInitialProps(userAuth);\n      return { ...wrappedProps, userAuth };\n    }\n\n    return { userAuth };\n  };\n\n  return hocComponent;\n};\n"]},"metadata":{},"sourceType":"module"}