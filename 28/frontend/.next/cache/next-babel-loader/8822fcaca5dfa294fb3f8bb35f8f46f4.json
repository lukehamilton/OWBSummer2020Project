{"ast":null,"code":"var _jsxFileName = \"/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/shared/enhancers/private-route.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useContext } from \"react\";\nimport auth0 from \"../../config/auth0\";\nimport { CurrentUserContext } from \"@enhancers/current-user\";\nconst login = \"/login?redirected=true\";\n\nconst checkUserAuthentication = async (req, res) => {\n  //   try {\n  //     const test = await auth0.handleProfile(req, res);\n  //     console.log(\"------- test ------\", test);\n  //   } catch (error) {\n  //     console.error(error);\n  //     // res.status(error.status || 500).end(error.message);\n  //   }\n  //   console.log(\"process.env.NODE_ENV\", process.env.NODE_ENV);\n  const dev = true;\n  const server = dev ? \"http://localhost:3000\" : \"https://lyralabs.io\"; //   console.log(\"------- server -----\", server);\n\n  try {\n    const response = await fetch(`${server}/api/me`, {\n      headers: {\n        cookie: req.headers.cookie\n      }\n    });\n    const profile = await response.json();\n    console.log(\"----- profile ------\", profile);\n\n    if (profile.error) {\n      console.log(\"AAAAA\");\n      return false;\n    } else {\n      console.log(\"BBBBBB\");\n      return true;\n    }\n  } catch (err) {\n    console.log(\"CCCCCC\");\n    console.error(err);\n    return false;\n  } //   return { auth: null }; // change null to { isAdmin: true } for test it.\n  //   return false; // change null to { isAdmin: true } for test it.\n\n};\n\nexport const withPrivateRoute = (Component, options = {}) => {\n  const WithPrivateRoute = props => {\n    return __jsx(Component, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  };\n\n  WithPrivateRoute.getInitialProps = async ctx => {\n    // console.log(\"XXXXX CRYSTAL CLEAR XXX\", ctx.res);\n    // const res = ctx.res;\n    const {\n      req,\n      res\n    } = ctx; // console.log(\"req\")\n\n    const keys = Object.keys(req);\n    const cookie = req.headers.cookie;\n    console.log(\"cookie\", cookie); // console.log(\"---------------\");\n    // console.log(\"keys\", keys);\n    // console.log(\"------------\");\n    // const currentuser = useContext(CurrentUserContext);\n    // console.log(\"---------------\");\n    // console.log(\"currentuser\", currentuser);\n    // console.log(\"------------\");\n\n    const isAuthorized = await checkUserAuthentication(req, res); // console.log(\"XXX userAuth XXX\", userAuth);\n\n    if (!isAuthorized) {\n      // Handle server-side and client-side rendering.\n      if (res) {\n        res === null || res === void 0 ? void 0 : res.writeHead(302, {\n          Location: login\n        });\n        res === null || res === void 0 ? void 0 : res.end();\n      } else {\n        Router.replace(login);\n      }\n    } else {\n      console.log(\"AT THE COOL PART\");\n      let pageProps = {};\n      pageProps = await Component.getInitialProps(ctx);\n      return _objectSpread({}, pageProps);\n    } // else if (Component.getInitialProps) {\n    //   const wrappedProps = await Component.getInitialProps();\n    //   return { ...wrappedProps };\n    // }\n    // res?.writeHead(302, {\n    //   Location: login,\n    // });\n    // res?.end();\n    // const req = ctx.ctx.req;\n    // const md = req ? new MobileDetect(req.headers[\"user-agent\"]) : null;\n    // const isMobile = md ? (md.phone() ? true : false) : false;\n    // let pageProps = {};\n    // pageProps = await Component.getInitialProps(ctx);\n    // return { ...pageProps, isMobile };\n\n  };\n\n  return WithPrivateRoute;\n};","map":{"version":3,"sources":["/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/shared/enhancers/private-route.js"],"names":["React","useContext","auth0","CurrentUserContext","login","checkUserAuthentication","req","res","dev","server","response","fetch","headers","cookie","profile","json","console","log","error","err","withPrivateRoute","Component","options","WithPrivateRoute","props","getInitialProps","ctx","keys","Object","isAuthorized","writeHead","Location","end","Router","replace","pageProps"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport auth0 from \"../../config/auth0\";\nimport { CurrentUserContext } from \"@enhancers/current-user\";\n\nconst login = \"/login?redirected=true\";\n\nconst checkUserAuthentication = async (req, res) => {\n  //   try {\n  //     const test = await auth0.handleProfile(req, res);\n  //     console.log(\"------- test ------\", test);\n  //   } catch (error) {\n  //     console.error(error);\n  //     // res.status(error.status || 500).end(error.message);\n  //   }\n  //   console.log(\"process.env.NODE_ENV\", process.env.NODE_ENV);\n  const dev = process.env.NODE_ENV !== \"production\";\n  const server = dev ? \"http://localhost:3000\" : \"https://lyralabs.io\";\n  //   console.log(\"------- server -----\", server);\n  try {\n    const response = await fetch(`${server}/api/me`, {\n      headers: {\n        cookie: req.headers.cookie,\n      },\n    });\n    const profile = await response.json();\n    console.log(\"----- profile ------\", profile);\n    if (profile.error) {\n      console.log(\"AAAAA\");\n      return false;\n    } else {\n      console.log(\"BBBBBB\");\n      return true;\n    }\n  } catch (err) {\n    console.log(\"CCCCCC\");\n    console.error(err);\n    return false;\n  }\n  //   return { auth: null }; // change null to { isAdmin: true } for test it.\n  //   return false; // change null to { isAdmin: true } for test it.\n};\n\nexport const withPrivateRoute = (Component, options = {}) => {\n  const WithPrivateRoute = (props) => {\n    return <Component {...props} />;\n  };\n  WithPrivateRoute.getInitialProps = async (ctx) => {\n    // console.log(\"XXXXX CRYSTAL CLEAR XXX\", ctx.res);\n    // const res = ctx.res;\n    const { req, res } = ctx;\n\n    // console.log(\"req\")\n    const keys = Object.keys(req);\n    const cookie = req.headers.cookie;\n    console.log(\"cookie\", cookie);\n    // console.log(\"---------------\");\n    // console.log(\"keys\", keys);\n    // console.log(\"------------\");\n\n    // const currentuser = useContext(CurrentUserContext);\n    // console.log(\"---------------\");\n    // console.log(\"currentuser\", currentuser);\n    // console.log(\"------------\");\n\n    const isAuthorized = await checkUserAuthentication(req, res);\n    // console.log(\"XXX userAuth XXX\", userAuth);\n    if (!isAuthorized) {\n      // Handle server-side and client-side rendering.\n      if (res) {\n        res?.writeHead(302, {\n          Location: login,\n        });\n        res?.end();\n      } else {\n        Router.replace(login);\n      }\n    } else {\n      console.log(\"AT THE COOL PART\");\n      let pageProps = {};\n      pageProps = await Component.getInitialProps(ctx);\n      return { ...pageProps };\n    }\n\n    // else if (Component.getInitialProps) {\n    //   const wrappedProps = await Component.getInitialProps();\n    //   return { ...wrappedProps };\n    // }\n    // res?.writeHead(302, {\n    //   Location: login,\n    // });\n    // res?.end();\n    // const req = ctx.ctx.req;\n    // const md = req ? new MobileDetect(req.headers[\"user-agent\"]) : null;\n    // const isMobile = md ? (md.phone() ? true : false) : false;\n    // let pageProps = {};\n    // pageProps = await Component.getInitialProps(ctx);\n    // return { ...pageProps, isMobile };\n  };\n  return WithPrivateRoute;\n};\n"]},"metadata":{},"sourceType":"module"}