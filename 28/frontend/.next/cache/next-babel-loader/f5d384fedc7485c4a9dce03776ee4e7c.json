{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/shared/enhancers/wallet-provider.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport * as fcl from \"@onflow/fcl\";\nimport * as sdk from \"@onflow/sdk\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { ASSOCIATE_WALLET } from \"@data/mutations\";\nimport { toast } from \"react-toastify\";\nimport { CURRENT_USER_QUERY } from \"../../data/queries\";\nimport checkReference from \"../../flow/scripts/check-ref.cdc\";\nimport checkCollection from \"../../flow/scripts/check-collection.cdc\";\nimport checkActiveWalletScript from \"../../flow/scripts/check-active-wallet.cdc\";\nimport vaultBalance from \"../../flow/scripts/vault-balance.cdc\";\nimport getCollectionItems from \"../../flow/scripts/get-collection-items.cdc\";\nimport userVault from \"../../flow/transactions/user-vault.cdc\";\nimport setupNFTCollection from \"../../flow/transactions/setup-nft-collection.cdc\";\nimport giveNFTAward from \"../../flow/transactions/give-nft-award.cdc\";\nexport var WalletContext = React.createContext({});\nfcl.config().put(\"challenge.handshake\", \"http://localhost:8701/flow/authenticate\");\n\nvar getAddress = function getAddress(user) {\n  var nullPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return nullPrefix ? \"0x\".concat(user.addr) : user.addr;\n};\n\nvar generateCode = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(rawCode, match) {\n    var query;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (match) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", rawCode);\n\n          case 2:\n            query = match.query;\n            return _context.abrupt(\"return\", rawCode.replace(query, function (item) {\n              return match[item];\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function generateCode(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport var withWallet = function withWallet(Component) {\n  var _s = $RefreshSig$();\n\n  var WithWallet = function WithWallet() {\n    _s();\n\n    var _useState = useState(null),\n        walletUser = _useState[0],\n        setWalletUser = _useState[1];\n\n    var _useState2 = useState(false),\n        vaultIsSetup = _useState2[0],\n        setVaultIsSetup = _useState2[1];\n\n    var _useState3 = useState(false),\n        collectionIsSetup = _useState3[0],\n        setCollectionIsSetup = _useState3[1];\n\n    var _useState4 = useState(null),\n        walletBalance = _useState4[0],\n        setWalletBalance = _useState4[1];\n\n    var _useState5 = useState(null),\n        walletCollection = _useState5[0],\n        setWalletCollection = _useState5[1];\n\n    var walletConnected = walletUser && walletUser.loggedIn;\n    var walletNotConnected = walletUser === null || walletUser && !walletUser.loggedIn;\n\n    var setupFCLAuthHandler = function setupFCLAuthHandler() {\n      fcl.currentUser().subscribe( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(user) {\n          var vaultStatus, collectionStatus;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!user.loggedIn) {\n                    _context2.next = 14;\n                    break;\n                  }\n\n                  setWalletUser(user); // Check if the wallet is set up yet\n\n                  _context2.next = 4;\n                  return checkUserVaultStatus();\n\n                case 4:\n                  vaultStatus = _context2.sent;\n                  setVaultIsSetup(vaultStatus);\n\n                  if (vaultStatus) {\n                    startBalancePoll();\n                  }\n\n                  _context2.next = 9;\n                  return checkUserCollectionStatus();\n\n                case 9:\n                  collectionStatus = _context2.sent;\n                  setCollectionIsSetup(collectionStatus);\n\n                  if (collectionStatus) {\n                    getUserCollection();\n                  }\n\n                  _context2.next = 15;\n                  break;\n\n                case 14:\n                  console.log(\"is not logged in\");\n\n                case 15:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x3) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    };\n\n    var pollId = null;\n\n    var startBalancePoll = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var balance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return getUserBalance();\n\n              case 2:\n                balance = _context3.sent;\n                setWalletBalance(balance);\n                pollId = setTimeout(startBalancePoll, 2000);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function startBalancePoll() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    var getUserBalance = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var user, snapshot, address, contractAddress, scriptCode, script, response, balance;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                user = fcl.currentUser();\n                _context4.next = 3;\n                return user.snapshot();\n\n              case 3:\n                snapshot = _context4.sent;\n                address = getAddress(snapshot);\n                contractAddress = \"0x01cf0e2f2f715450\";\n                _context4.next = 8;\n                return generateCode(vaultBalance, {\n                  query: /(0x01|0x02)/g,\n                  \"0x01\": contractAddress,\n                  \"0x02\": address\n                });\n\n              case 8:\n                scriptCode = _context4.sent;\n                script = sdk.script(_templateObject(), scriptCode);\n                _context4.next = 12;\n                return fcl.send([script]);\n\n              case 12:\n                response = _context4.sent;\n                _context4.next = 15;\n                return fcl.decode(response);\n\n              case 15:\n                balance = _context4.sent;\n                return _context4.abrupt(\"return\", balance);\n\n              case 17:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function getUserBalance() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    var getUserCollection = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var user, snapshot, address, contractAddress, scriptCode, script, response, items;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                user = fcl.currentUser();\n                _context5.next = 3;\n                return user.snapshot();\n\n              case 3:\n                snapshot = _context5.sent;\n                address = getAddress(snapshot); //   const contractAddress = \"0xf3fcd2c1a78f5eee\";\n\n                contractAddress = \"0xfd43f9148d4b725d\";\n                _context5.next = 8;\n                return generateCode(getCollectionItems, {\n                  query: /(0x01|0x02)/g,\n                  \"0x01\": contractAddress,\n                  \"0x02\": address\n                });\n\n              case 8:\n                scriptCode = _context5.sent;\n                script = sdk.script(_templateObject2(), scriptCode);\n                _context5.next = 12;\n                return fcl.send([script]);\n\n              case 12:\n                response = _context5.sent;\n                _context5.next = 15;\n                return fcl.decode(response);\n\n              case 15:\n                items = _context5.sent;\n                setWalletCollection(items);\n\n              case 17:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function getUserCollection() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    var setupUserVault = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var user, authorization, snapshot, address, contractAddress, initCode, initResponse;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                // Create the user vault\n                user = fcl.currentUser();\n                authorization = user.authorization;\n                _context6.next = 4;\n                return user.snapshot();\n\n              case 4:\n                snapshot = _context6.sent;\n                address = getAddress(snapshot);\n                contractAddress = \"0x01cf0e2f2f715450\";\n                _context6.next = 9;\n                return generateCode(userVault, {\n                  query: /(0x01)/g,\n                  \"0x01\": contractAddress\n                });\n\n              case 9:\n                initCode = _context6.sent;\n                _context6.prev = 10;\n                _context6.next = 13;\n                return fcl.send([sdk.transaction(_templateObject3(), initCode), fcl.proposer(authorization), fcl.payer(authorization), fcl.authorizations([authorization]), fcl.limit(100)], {\n                  node: \"http://localhost:8080\"\n                });\n\n              case 13:\n                initResponse = _context6.sent;\n                _context6.next = 19;\n                break;\n\n              case 16:\n                _context6.prev = 16;\n                _context6.t0 = _context6[\"catch\"](10);\n                console.log(\"setupUserVault caught error\", _context6.t0);\n\n              case 19:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[10, 16]]);\n      }));\n\n      return function setupUserVault() {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    var checkUserVaultStatus = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var user, snapshot, address, contractAddress, scriptCode, script, response, checkResult;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                user = fcl.currentUser();\n                _context7.next = 3;\n                return user.snapshot();\n\n              case 3:\n                snapshot = _context7.sent;\n                address = getAddress(snapshot);\n                contractAddress = \"0x01cf0e2f2f715450\";\n                _context7.next = 8;\n                return generateCode(checkReference, {\n                  query: /(0x01|0x02)/g,\n                  \"0x01\": contractAddress,\n                  \"0x02\": address\n                });\n\n              case 8:\n                scriptCode = _context7.sent;\n                script = sdk.script(_templateObject4(), scriptCode);\n                _context7.next = 12;\n                return fcl.send([script]);\n\n              case 12:\n                response = _context7.sent;\n                _context7.next = 15;\n                return fcl.decode(response);\n\n              case 15:\n                checkResult = _context7.sent;\n                return _context7.abrupt(\"return\", checkResult);\n\n              case 17:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function checkUserVaultStatus() {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    var checkUserCollectionStatus = /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var user, snapshot, address, contractAddress, scriptCode, script, response, checkResult;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                user = fcl.currentUser();\n                _context8.next = 3;\n                return user.snapshot();\n\n              case 3:\n                snapshot = _context8.sent;\n                address = getAddress(snapshot); //   const contractAddress = \"0xf3fcd2c1a78f5eee\";\n\n                contractAddress = \"0xfd43f9148d4b725d\";\n                _context8.next = 8;\n                return generateCode(checkCollection, {\n                  query: /(0x01|0x02)/g,\n                  \"0x01\": contractAddress,\n                  \"0x02\": address\n                });\n\n              case 8:\n                scriptCode = _context8.sent;\n                script = sdk.script(_templateObject5(), scriptCode);\n                _context8.next = 12;\n                return fcl.send([script]);\n\n              case 12:\n                response = _context8.sent;\n                _context8.next = 15;\n                return fcl.decode(response);\n\n              case 15:\n                checkResult = _context8.sent;\n                return _context8.abrupt(\"return\", checkResult);\n\n              case 17:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function checkUserCollectionStatus() {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n\n    var setupUserCollection = /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var user, authorization, snapshot, address, contractAddress, initCode, initResponse;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                // Create the user vault\n                user = fcl.currentUser();\n                authorization = user.authorization;\n                _context9.next = 4;\n                return user.snapshot();\n\n              case 4:\n                snapshot = _context9.sent;\n                address = getAddress(snapshot); // const contractAddress = \"0xf3fcd2c1a78f5eee\";\n\n                contractAddress = \"0xfd43f9148d4b725d\";\n                _context9.next = 9;\n                return generateCode(setupNFTCollection, {\n                  query: /(0x01)/g,\n                  \"0x01\": contractAddress\n                });\n\n              case 9:\n                initCode = _context9.sent;\n                _context9.prev = 10;\n                _context9.next = 13;\n                return fcl.send([sdk.transaction(_templateObject6(), initCode), fcl.proposer(authorization), fcl.payer(authorization), fcl.authorizations([authorization]), fcl.limit(100)], {\n                  node: \"http://localhost:8080\"\n                });\n\n              case 13:\n                initResponse = _context9.sent;\n                _context9.next = 19;\n                break;\n\n              case 16:\n                _context9.prev = 16;\n                _context9.t0 = _context9[\"catch\"](10);\n                console.log(\"setupNFTCollection caught error\", _context9.t0);\n\n              case 19:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, null, [[10, 16]]);\n      }));\n\n      return function setupUserCollection() {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n\n    var checkActiveWallet = /*#__PURE__*/function () {\n      var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        var user, snapshot, address, scriptCode, script, response, activeWalletStatus;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                // Checks if the active wallet is setup\n                user = fcl.currentUser();\n                _context10.next = 3;\n                return user.snapshot();\n\n              case 3:\n                snapshot = _context10.sent;\n                address = getAddress(snapshot);\n                _context10.next = 7;\n                return generateCode(checkActiveWalletScript, {\n                  query: /(0x01|0x02|0x03)/g,\n                  \"0x01\": \"0x\".concat(FUNGIBLE_TOKEN_CONTRACT_ADDRESS),\n                  \"0x02\": \"0x\".concat(NON_FUNGIBLE_TOKEN_CONTRACT_ADDRESS),\n                  \"0x03\": address\n                });\n\n              case 7:\n                scriptCode = _context10.sent;\n                script = sdk.script(_templateObject7(), scriptCode);\n                _context10.next = 11;\n                return fcl.send([script]);\n\n              case 11:\n                response = _context10.sent;\n                _context10.next = 14;\n                return fcl.decode(response);\n\n              case 14:\n                activeWalletStatus = _context10.sent;\n                return _context10.abrupt(\"return\", activeWalletStatus);\n\n              case 16:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      return function checkActiveWallet() {\n        return _ref10.apply(this, arguments);\n      };\n    }();\n\n    var setupActiveWallet = /*#__PURE__*/function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11);\n      }));\n\n      return function setupActiveWallet() {\n        return _ref11.apply(this, arguments);\n      };\n    }();\n\n    var giveAward = /*#__PURE__*/function () {\n      var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(_ref12) {\n        var recipientAddress, user, authorization, snapshot, address, fungibleTokenContractAddress, awardContractAddress, initCode, initResponse;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                recipientAddress = _ref12.recipientAddress;\n                console.log(\"giving award to recipientAddress\", recipientAddress); // Create the user vault\n\n                user = fcl.currentUser();\n                authorization = user.authorization;\n                _context12.next = 6;\n                return user.snapshot();\n\n              case 6:\n                snapshot = _context12.sent;\n                address = getAddress(snapshot); // const contractAddress = \"0xf3fcd2c1a78f5eee\";\n\n                fungibleTokenContractAddress = \"0x01cf0e2f2f715450\";\n                awardContractAddress = \"0xfd43f9148d4b725d\";\n                _context12.next = 12;\n                return generateCode(giveNFTAward, {\n                  query: /(0x01|0x02|0x03)/g,\n                  \"0x01\": awardContractAddress,\n                  \"0x02\": fungibleTokenContractAddress,\n                  \"0x03\": \"0x\".concat(recipientAddress)\n                });\n\n              case 12:\n                initCode = _context12.sent;\n                _context12.prev = 13;\n                _context12.next = 16;\n                return fcl.send([sdk.transaction(_templateObject8(), initCode), fcl.proposer(authorization), fcl.payer(authorization), fcl.authorizations([authorization]), fcl.limit(100)], {\n                  node: \"http://localhost:8080\"\n                });\n\n              case 16:\n                initResponse = _context12.sent;\n                _context12.next = 22;\n                break;\n\n              case 19:\n                _context12.prev = 19;\n                _context12.t0 = _context12[\"catch\"](13);\n                console.log(\"setupNFTCollection caught error\", _context12.t0);\n\n              case 22:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, null, [[13, 19]]);\n      }));\n\n      return function giveAward(_x4) {\n        return _ref13.apply(this, arguments);\n      };\n    }();\n\n    var _useMutation = useMutation(ASSOCIATE_WALLET, {\n      update: function update(cache, _ref14) {\n        var data = _ref14.data;\n\n        var _cache$readQuery = cache.readQuery({\n          query: CURRENT_USER_QUERY\n        }),\n            currentUserData = _cache$readQuery.me;\n\n        cache.writeQuery({\n          query: CURRENT_USER_QUERY,\n          data: {\n            me: _objectSpread(_objectSpread({}, currentUserData), data.associateWallet)\n          }\n        });\n      },\n      onError: function onError() {\n        toast.error(\"😳Ekkk! Failed to associate wallet.\", {\n          position: \"bottom-left\"\n        });\n      }\n    }),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        associateWallet = _useMutation2[0],\n        _useMutation2$ = _useMutation2[1],\n        data = _useMutation2$.data,\n        loading = _useMutation2$.loading,\n        error = _useMutation2$.error;\n\n    var connectActiveWalletToLyraLabs = /*#__PURE__*/function () {\n      var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                associateWallet({\n                  variables: {\n                    address: walletUser.addr\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13);\n      }));\n\n      return function connectActiveWalletToLyraLabs() {\n        return _ref15.apply(this, arguments);\n      };\n    }();\n\n    return __jsx(WalletContext.Provider, {\n      value: {\n        walletConnected: walletConnected,\n        walletNotConnected: walletNotConnected,\n        setupFCLAuthHandler: setupFCLAuthHandler,\n        walletUser: walletUser,\n        setupUserVault: setupUserVault,\n        vaultIsSetup: vaultIsSetup,\n        setupUserCollection: setupUserCollection,\n        collectionIsSetup: collectionIsSetup,\n        walletBalance: walletBalance,\n        walletCollection: walletCollection,\n        connectActiveWalletToLyraLabs: connectActiveWalletToLyraLabs,\n        giveAward: giveAward\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 7\n      }\n    }, __jsx(Component, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  _s(WithWallet, \"WcXcOJRTD5U/yndNs291ehr4b/Y=\", false, function () {\n    return [useMutation];\n  });\n\n  return WithWallet;\n};","map":{"version":3,"sources":["/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/shared/enhancers/wallet-provider.js"],"names":["React","useState","fcl","sdk","useMutation","ASSOCIATE_WALLET","toast","CURRENT_USER_QUERY","checkReference","checkCollection","checkActiveWalletScript","vaultBalance","getCollectionItems","userVault","setupNFTCollection","giveNFTAward","WalletContext","createContext","config","put","getAddress","user","nullPrefix","addr","generateCode","rawCode","match","query","replace","item","withWallet","Component","WithWallet","walletUser","setWalletUser","vaultIsSetup","setVaultIsSetup","collectionIsSetup","setCollectionIsSetup","walletBalance","setWalletBalance","walletCollection","setWalletCollection","walletConnected","loggedIn","walletNotConnected","setupFCLAuthHandler","currentUser","subscribe","checkUserVaultStatus","vaultStatus","startBalancePoll","checkUserCollectionStatus","collectionStatus","getUserCollection","console","log","pollId","getUserBalance","balance","setTimeout","snapshot","address","contractAddress","scriptCode","script","send","response","decode","items","setupUserVault","authorization","initCode","transaction","proposer","payer","authorizations","limit","node","initResponse","checkResult","setupUserCollection","checkActiveWallet","FUNGIBLE_TOKEN_CONTRACT_ADDRESS","NON_FUNGIBLE_TOKEN_CONTRACT_ADDRESS","activeWalletStatus","setupActiveWallet","giveAward","recipientAddress","fungibleTokenContractAddress","awardContractAddress","update","cache","data","readQuery","currentUserData","me","writeQuery","associateWallet","onError","error","position","loading","connectActiveWalletToLyraLabs","variables"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport * as fcl from \"@onflow/fcl\";\nimport * as sdk from \"@onflow/sdk\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { ASSOCIATE_WALLET } from \"@data/mutations\";\nimport { toast } from \"react-toastify\";\nimport { CURRENT_USER_QUERY } from \"../../data/queries\";\n\nimport checkReference from \"../../flow/scripts/check-ref.cdc\";\nimport checkCollection from \"../../flow/scripts/check-collection.cdc\";\nimport checkActiveWalletScript from \"../../flow/scripts/check-active-wallet.cdc\";\nimport vaultBalance from \"../../flow/scripts/vault-balance.cdc\";\nimport getCollectionItems from \"../../flow/scripts/get-collection-items.cdc\";\nimport userVault from \"../../flow/transactions/user-vault.cdc\";\nimport setupNFTCollection from \"../../flow/transactions/setup-nft-collection.cdc\";\nimport giveNFTAward from \"../../flow/transactions/give-nft-award.cdc\";\n\nexport const WalletContext = React.createContext({});\n\nfcl\n  .config()\n  .put(\"challenge.handshake\", \"http://localhost:8701/flow/authenticate\");\n\nconst getAddress = (user, nullPrefix = true) => {\n  return nullPrefix ? `0x${user.addr}` : user.addr;\n};\n\nconst generateCode = async (rawCode, match) => {\n  if (!match) {\n    return rawCode;\n  }\n  const { query } = match;\n  return rawCode.replace(query, (item) => {\n    return match[item];\n  });\n};\n\nexport const withWallet = (Component) => {\n  const WithWallet = () => {\n    const [walletUser, setWalletUser] = useState(null);\n    const [vaultIsSetup, setVaultIsSetup] = useState(false);\n    const [collectionIsSetup, setCollectionIsSetup] = useState(false);\n    const [walletBalance, setWalletBalance] = useState(null);\n    const [walletCollection, setWalletCollection] = useState(null);\n\n    const walletConnected = walletUser && walletUser.loggedIn;\n    const walletNotConnected =\n      walletUser === null || (walletUser && !walletUser.loggedIn);\n\n    const setupFCLAuthHandler = () => {\n      fcl.currentUser().subscribe(async (user) => {\n        if (user.loggedIn) {\n          setWalletUser(user);\n          // Check if the wallet is set up yet\n          const vaultStatus = await checkUserVaultStatus();\n          setVaultIsSetup(vaultStatus);\n          if (vaultStatus) {\n            startBalancePoll();\n          }\n          const collectionStatus = await checkUserCollectionStatus();\n          setCollectionIsSetup(collectionStatus);\n          if (collectionStatus) {\n            getUserCollection();\n          }\n        } else {\n          console.log(\"is not logged in\");\n        }\n      });\n    };\n\n    let pollId = null;\n    const startBalancePoll = async () => {\n      const balance = await getUserBalance();\n      setWalletBalance(balance);\n      pollId = setTimeout(startBalancePoll, 2000);\n    };\n\n    const getUserBalance = async () => {\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      const contractAddress = \"0x01cf0e2f2f715450\";\n      const scriptCode = await generateCode(vaultBalance, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": contractAddress,\n        \"0x02\": address,\n      });\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const balance = await fcl.decode(response);\n      return balance;\n    };\n\n    const getUserCollection = async () => {\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      //   const contractAddress = \"0xf3fcd2c1a78f5eee\";\n      const contractAddress = \"0xfd43f9148d4b725d\";\n      const scriptCode = await generateCode(getCollectionItems, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": contractAddress,\n        \"0x02\": address,\n      });\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const items = await fcl.decode(response);\n      setWalletCollection(items);\n    };\n\n    const setupUserVault = async () => {\n      // Create the user vault\n      const user = fcl.currentUser();\n      const { authorization } = user;\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      const contractAddress = \"0x01cf0e2f2f715450\";\n      const initCode = await generateCode(userVault, {\n        query: /(0x01)/g,\n        \"0x01\": contractAddress,\n      });\n      try {\n        const initResponse = await fcl.send(\n          [\n            sdk.transaction`${initCode}`,\n            fcl.proposer(authorization),\n            fcl.payer(authorization),\n            fcl.authorizations([authorization]),\n            fcl.limit(100),\n          ],\n          {\n            node: \"http://localhost:8080\",\n          }\n        );\n      } catch (e) {\n        console.log(\"setupUserVault caught error\", e);\n      }\n    };\n\n    const checkUserVaultStatus = async () => {\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      const contractAddress = \"0x01cf0e2f2f715450\";\n      const scriptCode = await generateCode(checkReference, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": contractAddress,\n        \"0x02\": address,\n      });\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const checkResult = await fcl.decode(response);\n      return checkResult;\n    };\n\n    const checkUserCollectionStatus = async () => {\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      //   const contractAddress = \"0xf3fcd2c1a78f5eee\";\n      const contractAddress = \"0xfd43f9148d4b725d\";\n      const scriptCode = await generateCode(checkCollection, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": contractAddress,\n        \"0x02\": address,\n      });\n\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const checkResult = await fcl.decode(response);\n      return checkResult;\n    };\n\n    const setupUserCollection = async () => {\n      // Create the user vault\n      const user = fcl.currentUser();\n      const { authorization } = user;\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      // const contractAddress = \"0xf3fcd2c1a78f5eee\";\n      const contractAddress = \"0xfd43f9148d4b725d\";\n      const initCode = await generateCode(setupNFTCollection, {\n        query: /(0x01)/g,\n        \"0x01\": contractAddress,\n      });\n      try {\n        const initResponse = await fcl.send(\n          [\n            sdk.transaction`${initCode}`,\n            fcl.proposer(authorization),\n            fcl.payer(authorization),\n            fcl.authorizations([authorization]),\n            fcl.limit(100),\n          ],\n          {\n            node: \"http://localhost:8080\",\n          }\n        );\n      } catch (e) {\n        console.log(\"setupNFTCollection caught error\", e);\n      }\n    };\n\n    const checkActiveWallet = async () => {\n      // Checks if the active wallet is setup\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      const scriptCode = await generateCode(checkActiveWalletScript, {\n        query: /(0x01|0x02|0x03)/g,\n        \"0x01\": `0x${FUNGIBLE_TOKEN_CONTRACT_ADDRESS}`,\n        \"0x02\": `0x${NON_FUNGIBLE_TOKEN_CONTRACT_ADDRESS}`,\n        \"0x03\": address,\n      });\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const activeWalletStatus = await fcl.decode(response);\n      return activeWalletStatus;\n    };\n\n    const setupActiveWallet = async () => {\n      // Creates a vault and collection in the active wallet\n    };\n\n    const giveAward = async ({ recipientAddress }) => {\n      console.log(\"giving award to recipientAddress\", recipientAddress);\n      // Create the user vault\n      const user = fcl.currentUser();\n      const { authorization } = user;\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      // const contractAddress = \"0xf3fcd2c1a78f5eee\";\n      const fungibleTokenContractAddress = \"0x01cf0e2f2f715450\";\n      const awardContractAddress = \"0xfd43f9148d4b725d\";\n      const initCode = await generateCode(giveNFTAward, {\n        query: /(0x01|0x02|0x03)/g,\n        \"0x01\": awardContractAddress,\n        \"0x02\": fungibleTokenContractAddress,\n        \"0x03\": `0x${recipientAddress}`,\n      });\n      try {\n        const initResponse = await fcl.send(\n          [\n            sdk.transaction`${initCode}`,\n            fcl.proposer(authorization),\n            fcl.payer(authorization),\n            fcl.authorizations([authorization]),\n            fcl.limit(100),\n          ],\n          {\n            node: \"http://localhost:8080\",\n          }\n        );\n      } catch (e) {\n        console.log(\"setupNFTCollection caught error\", e);\n      }\n    };\n\n    const [associateWallet, { data, loading, error }] = useMutation(\n      ASSOCIATE_WALLET,\n      {\n        update: (cache, { data }) => {\n          const { me: currentUserData } = cache.readQuery({\n            query: CURRENT_USER_QUERY,\n          });\n          cache.writeQuery({\n            query: CURRENT_USER_QUERY,\n            data: { me: { ...currentUserData, ...data.associateWallet } },\n          });\n        },\n        onError: () => {\n          toast.error(\"😳Ekkk! Failed to associate wallet.\", {\n            position: \"bottom-left\",\n          });\n        },\n      }\n    );\n\n    const connectActiveWalletToLyraLabs = async () => {\n      associateWallet({\n        variables: {\n          address: walletUser.addr,\n        },\n      });\n    };\n\n    return (\n      <WalletContext.Provider\n        value={{\n          walletConnected,\n          walletNotConnected,\n          setupFCLAuthHandler,\n          walletUser,\n          setupUserVault,\n          vaultIsSetup,\n          setupUserCollection,\n          collectionIsSetup,\n          walletBalance,\n          walletCollection,\n          connectActiveWalletToLyraLabs,\n          giveAward,\n        }}\n      >\n        <Component />\n      </WalletContext.Provider>\n    );\n  };\n  return WithWallet;\n};\n"]},"metadata":{},"sourceType":"module"}