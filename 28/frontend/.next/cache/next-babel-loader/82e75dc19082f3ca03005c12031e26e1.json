{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/shared/enhancers/wallet-provider.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport * as fcl from \"@onflow/fcl\";\nimport * as sdk from \"@onflow/sdk\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { ASSOCIATE_WALLET } from \"@data/mutations\";\nimport { toast } from \"react-toastify\";\nimport { CURRENT_USER_QUERY } from \"../../data/queries\";\nimport checkReference from \"../../flow/scripts/check-ref.cdc\";\nimport checkCollection from \"../../flow/scripts/check-collection.cdc\";\nimport checkActiveWalletScript from \"../../flow/scripts/check-active-wallet.cdc\";\nimport vaultBalance from \"../../flow/scripts/vault-balance.cdc\";\nimport getCollectionItems from \"../../flow/scripts/get-collection-items.cdc\";\nimport giveNFTAward from \"../../flow/transactions/give-nft-award.cdc\";\nimport setupUserWallet from \"../../flow/transactions/setup-user-wallet.cdc\";\nexport var WalletContext = React.createContext({}); // fcl\n//   .config()\n//   .put(\"challenge.handshake\", \"http://localhost:8701/flow/authenticate\");\n// access-001.devnet12.nodes.onflow.org:9000\n\nvar LOCAL_TOKEN_CONTRACT_ADDRESS = \"0x0x01cf0e2f2f715450\";\nvar TESTNET_TOKEN_CONTRACT_ADDRESS = \"0x4f7d7bb81563b36a\";\nvar LOCAL_AWARD_CONTRACT_ADDRESS = \"0xfd43f9148d4b725d\";\nvar TESTNET_AWARD_CONTRACT_ADDRESS = \"0xab1ac2650499b3b5\";\nfcl.config().put(\"accessNode.api\", \"https://access-testnet.onflow.org\") // connect to Flow testnet\n.put(\"challenge.handshake\", \"https://flow-wallet-testnet.blocto.app/authn\"); // use Blocto testnet wallet\n\nvar getAddress = function getAddress(user) {\n  var nullPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return nullPrefix ? \"0x\".concat(user.addr) : user.addr;\n};\n\nvar generateCode = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(rawCode, match) {\n    var query;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (match) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", rawCode);\n\n          case 2:\n            query = match.query;\n            return _context.abrupt(\"return\", rawCode.replace(query, function (item) {\n              return match[item];\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function generateCode(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport var withWallet = function withWallet(Component) {\n  var _s = $RefreshSig$();\n\n  var WithWallet = function WithWallet() {\n    _s();\n\n    var _useState = useState(null),\n        walletUser = _useState[0],\n        setWalletUser = _useState[1];\n\n    var _useState2 = useState(false),\n        vaultIsSetup = _useState2[0],\n        setVaultIsSetup = _useState2[1];\n\n    var _useState3 = useState(false),\n        collectionIsSetup = _useState3[0],\n        setCollectionIsSetup = _useState3[1];\n\n    var _useState4 = useState(null),\n        walletBalance = _useState4[0],\n        setWalletBalance = _useState4[1];\n\n    var _useState5 = useState(null),\n        walletCollection = _useState5[0],\n        setWalletCollection = _useState5[1];\n\n    var _useState6 = useState(false),\n        authHandlerIsSetup = _useState6[0],\n        setAuthHandlerIsSetup = _useState6[1];\n\n    var walletConnected = walletUser && walletUser.loggedIn;\n    var walletNotConnected = walletUser === null || walletUser && !walletUser.loggedIn;\n\n    var setupFCLAuthHandler = function setupFCLAuthHandler() {\n      console.log(\"calling setupFCLAuthHandler\");\n      fcl.currentUser().subscribe( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(user) {\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (user.loggedIn) {\n                    setWalletUser(user); // Check if the wallet is set up yet\n\n                    getWalletResources(); // const vaultStatus = await checkUserVaultStatus();\n                    // setVaultIsSetup(vaultStatus);\n                    // if (vaultStatus) {\n                    //   startBalancePoll();\n                    // }\n                    // const collectionStatus = await checkUserCollectionStatus();\n                    // setCollectionIsSetup(collectionStatus);\n                    // if (collectionStatus) {\n                    //   getUserCollection();\n                    // }\n                  } else {\n                    console.log(\"is not logged in\");\n                  }\n\n                case 1:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x3) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    };\n\n    var getWalletResources = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var vaultStatus, collectionStatus;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return checkUserVaultStatus();\n\n              case 2:\n                vaultStatus = _context3.sent;\n                setVaultIsSetup(vaultStatus);\n\n                if (vaultStatus) {\n                  startBalancePoll();\n                }\n\n                _context3.next = 7;\n                return checkUserCollectionStatus();\n\n              case 7:\n                collectionStatus = _context3.sent;\n                setCollectionIsSetup(collectionStatus);\n\n                if (collectionStatus) {\n                  startCollectionPoll();\n                }\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function getWalletResources() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    var balancePollId = null;\n\n    var startBalancePoll = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var balance;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return getUserBalance();\n\n              case 2:\n                balance = _context4.sent;\n                setWalletBalance(balance);\n                balancePollId = setTimeout(startBalancePoll, 2000);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function startBalancePoll() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    var collectionPollId = null;\n\n    var startCollectionPoll = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var items;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return getUserCollection();\n\n              case 2:\n                items = _context5.sent;\n                setWalletCollection(items);\n                collectionPollId = setTimeout(startCollectionPoll, 2000);\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function startCollectionPoll() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    var getUserBalance = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var user, snapshot, address, contractAddress, scriptCode, script, response, balance;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                user = fcl.currentUser();\n                _context6.next = 3;\n                return user.snapshot();\n\n              case 3:\n                snapshot = _context6.sent;\n                address = getAddress(snapshot); // const contractAddress = LOCAL_TOKEN_CONTRACT_ADDRESS;\n\n                contractAddress = TESTNET_TOKEN_CONTRACT_ADDRESS;\n                _context6.next = 8;\n                return generateCode(vaultBalance, {\n                  query: /(0x01|0x02)/g,\n                  \"0x01\": contractAddress,\n                  \"0x02\": address\n                });\n\n              case 8:\n                scriptCode = _context6.sent;\n                script = sdk.script(_templateObject(), scriptCode);\n                _context6.next = 12;\n                return fcl.send([script]);\n\n              case 12:\n                response = _context6.sent;\n                _context6.next = 15;\n                return fcl.decode(response);\n\n              case 15:\n                balance = _context6.sent;\n                return _context6.abrupt(\"return\", balance);\n\n              case 17:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function getUserBalance() {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    var getUserCollection = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var user, snapshot, address, contractAddress, scriptCode, script, response, items;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                user = fcl.currentUser();\n                _context7.next = 3;\n                return user.snapshot();\n\n              case 3:\n                snapshot = _context7.sent;\n                address = getAddress(snapshot); // This is the local address - Regular NonFungibleToken contract\n                // const contractAddress = \"0xf3fcd2c1a78f5eee\";\n                // This is the local address - NonFungibleTokenAward contract\n                // const contractAddress = LOCAL_AWARD_CONTRACT_ADDRESS;\n                // This is the testnet address - NonFungibleTokenAward contract\n\n                contractAddress = TESTNET_AWARD_CONTRACT_ADDRESS;\n                _context7.next = 8;\n                return generateCode(getCollectionItems, {\n                  query: /(0x01|0x02)/g,\n                  \"0x01\": contractAddress,\n                  \"0x02\": address\n                });\n\n              case 8:\n                scriptCode = _context7.sent;\n                script = sdk.script(_templateObject2(), scriptCode);\n                _context7.next = 12;\n                return fcl.send([script]);\n\n              case 12:\n                response = _context7.sent;\n                _context7.next = 15;\n                return fcl.decode(response);\n\n              case 15:\n                items = _context7.sent;\n                return _context7.abrupt(\"return\", items);\n\n              case 17:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function getUserCollection() {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    var checkUserVaultStatus = /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var user, snapshot, address, contractAddress, scriptCode, script, response, checkResult;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                user = fcl.currentUser();\n                _context8.next = 3;\n                return user.snapshot();\n\n              case 3:\n                snapshot = _context8.sent;\n                address = getAddress(snapshot); // const contractAddress = LOCAL_TOKEN_CONTRACT_ADDRESS;\n\n                contractAddress = TESTNET_TOKEN_CONTRACT_ADDRESS;\n                _context8.next = 8;\n                return generateCode(checkReference, {\n                  query: /(0x01|0x02)/g,\n                  \"0x01\": contractAddress,\n                  \"0x02\": address\n                });\n\n              case 8:\n                scriptCode = _context8.sent;\n                script = sdk.script(_templateObject3(), scriptCode);\n                _context8.next = 12;\n                return fcl.send([script]);\n\n              case 12:\n                response = _context8.sent;\n                _context8.next = 15;\n                return fcl.decode(response);\n\n              case 15:\n                checkResult = _context8.sent;\n                return _context8.abrupt(\"return\", checkResult);\n\n              case 17:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function checkUserVaultStatus() {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n\n    var checkUserCollectionStatus = /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var user, snapshot, address, contractAddress, scriptCode, script, response, checkResult;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                user = fcl.currentUser();\n                _context9.next = 3;\n                return user.snapshot();\n\n              case 3:\n                snapshot = _context9.sent;\n                address = getAddress(snapshot); // const contractAddress = LOCAL_AWARD_CONTRACT_ADDRESS;\n\n                contractAddress = TESTNET_AWARD_CONTRACT_ADDRESS;\n                _context9.next = 8;\n                return generateCode(checkCollection, {\n                  query: /(0x01|0x02)/g,\n                  \"0x01\": contractAddress,\n                  \"0x02\": address\n                });\n\n              case 8:\n                scriptCode = _context9.sent;\n                script = sdk.script(_templateObject4(), scriptCode);\n                _context9.next = 12;\n                return fcl.send([script]);\n\n              case 12:\n                response = _context9.sent;\n                _context9.next = 15;\n                return fcl.decode(response);\n\n              case 15:\n                checkResult = _context9.sent;\n                return _context9.abrupt(\"return\", checkResult);\n\n              case 17:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      return function checkUserCollectionStatus() {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n\n    var checkActiveWallet = /*#__PURE__*/function () {\n      var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        var user, snapshot, address, scriptCode, script, response, activeWalletStatus;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                // Checks if the active wallet is setup\n                user = fcl.currentUser();\n                _context10.next = 3;\n                return user.snapshot();\n\n              case 3:\n                snapshot = _context10.sent;\n                address = getAddress(snapshot);\n                _context10.next = 7;\n                return generateCode(checkActiveWalletScript, {\n                  query: /(0x01|0x02|0x03)/g,\n                  \"0x01\": \"0x\".concat(FUNGIBLE_TOKEN_CONTRACT_ADDRESS),\n                  \"0x02\": \"0x\".concat(NON_FUNGIBLE_TOKEN_CONTRACT_ADDRESS),\n                  \"0x03\": address\n                });\n\n              case 7:\n                scriptCode = _context10.sent;\n                script = sdk.script(_templateObject5(), scriptCode);\n                _context10.next = 11;\n                return fcl.send([script]);\n\n              case 11:\n                response = _context10.sent;\n                _context10.next = 14;\n                return fcl.decode(response);\n\n              case 14:\n                activeWalletStatus = _context10.sent;\n                return _context10.abrupt(\"return\", activeWalletStatus);\n\n              case 16:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10);\n      }));\n\n      return function checkActiveWallet() {\n        return _ref10.apply(this, arguments);\n      };\n    }();\n\n    var setupWallet = /*#__PURE__*/function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        var user, authorization, snapshot, fungibleTokenContractAddress, nonFungibleTokenContractAddress, initCode, initResponse;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                // Create a vault and a collection\n                user = fcl.currentUser();\n                authorization = user.authorization;\n                _context11.next = 4;\n                return user.snapshot();\n\n              case 4:\n                snapshot = _context11.sent;\n                // const fungibleTokenContractAddress = LOCAL_TOKEN_CONTRACT_ADDRESS;\n                fungibleTokenContractAddress = TESTNET_TOKEN_CONTRACT_ADDRESS; // const nonFungibleTokenContractAddress = LOCAL_AWARD_CONTRACT_ADDRESS;\n\n                nonFungibleTokenContractAddress = TESTNET_AWARD_CONTRACT_ADDRESS;\n                _context11.next = 9;\n                return generateCode(setupUserWallet, {\n                  query: /(0x01|0x02)/g,\n                  \"0x01\": fungibleTokenContractAddress,\n                  \"0x02\": nonFungibleTokenContractAddress\n                });\n\n              case 9:\n                initCode = _context11.sent;\n                _context11.prev = 10;\n                _context11.next = 13;\n                return fcl.send([sdk.transaction(_templateObject6(), initCode), fcl.proposer(authorization), fcl.payer(authorization), fcl.authorizations([authorization]), fcl.limit(100)], {\n                  node: \"http://localhost:8080\"\n                });\n\n              case 13:\n                initResponse = _context11.sent;\n                getWalletResources();\n                _context11.next = 20;\n                break;\n\n              case 17:\n                _context11.prev = 17;\n                _context11.t0 = _context11[\"catch\"](10);\n                console.log(\"setupNFTCollection caught error\", _context11.t0);\n\n              case 20:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, null, [[10, 17]]);\n      }));\n\n      return function setupWallet() {\n        return _ref11.apply(this, arguments);\n      };\n    }();\n\n    var giveAward = /*#__PURE__*/function () {\n      var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(_ref12) {\n        var recipientAddress, user, authorization, snapshot, address, fungibleTokenContractAddress, awardContractAddress, initCode, initResponse;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                recipientAddress = _ref12.recipientAddress;\n                console.log(\"giving award to recipientAddress\", recipientAddress); // Create the user vault\n\n                user = fcl.currentUser();\n                authorization = user.authorization;\n                _context12.next = 6;\n                return user.snapshot();\n\n              case 6:\n                snapshot = _context12.sent;\n                address = getAddress(snapshot); // const contractAddress = \"0xf3fcd2c1a78f5eee\";\n\n                fungibleTokenContractAddress = \"0x01cf0e2f2f715450\";\n                awardContractAddress = \"0xfd43f9148d4b725d\";\n                _context12.next = 12;\n                return generateCode(giveNFTAward, {\n                  query: /(0x01|0x02|0x03)/g,\n                  \"0x01\": awardContractAddress,\n                  \"0x02\": fungibleTokenContractAddress,\n                  \"0x03\": \"0x\".concat(recipientAddress)\n                });\n\n              case 12:\n                initCode = _context12.sent;\n                _context12.prev = 13;\n                _context12.next = 16;\n                return fcl.send([sdk.transaction(_templateObject7(), initCode), fcl.proposer(authorization), fcl.payer(authorization), fcl.authorizations([authorization]), fcl.limit(100)], {\n                  node: \"http://localhost:8080\"\n                });\n\n              case 16:\n                initResponse = _context12.sent;\n                console.log(\"give award initResponse\", initResponse);\n                _context12.next = 23;\n                break;\n\n              case 20:\n                _context12.prev = 20;\n                _context12.t0 = _context12[\"catch\"](13);\n                console.log(\"give award caught error\", _context12.t0);\n\n              case 23:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, null, [[13, 20]]);\n      }));\n\n      return function giveAward(_x4) {\n        return _ref13.apply(this, arguments);\n      };\n    }();\n\n    var _useMutation = useMutation(ASSOCIATE_WALLET, {\n      update: function update(cache, _ref14) {\n        var data = _ref14.data;\n\n        var _cache$readQuery = cache.readQuery({\n          query: CURRENT_USER_QUERY\n        }),\n            currentUserData = _cache$readQuery.me;\n\n        cache.writeQuery({\n          query: CURRENT_USER_QUERY,\n          data: {\n            me: _objectSpread(_objectSpread({}, currentUserData), data.associateWallet)\n          }\n        });\n      },\n      onError: function onError() {\n        toast.error(\"😳 Ekkk! Failed to link wallet.\", {\n          position: \"bottom-left\"\n        });\n      }\n    }),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        associateWallet = _useMutation2[0],\n        _useMutation2$ = _useMutation2[1],\n        data = _useMutation2$.data,\n        loading = _useMutation2$.loading,\n        error = _useMutation2$.error;\n\n    var connectActiveWalletToLyraLabs = /*#__PURE__*/function () {\n      var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                associateWallet({\n                  variables: {\n                    address: walletUser.addr\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13);\n      }));\n\n      return function connectActiveWalletToLyraLabs() {\n        return _ref15.apply(this, arguments);\n      };\n    }();\n\n    return __jsx(WalletContext.Provider, {\n      value: {\n        walletConnected: walletConnected,\n        walletNotConnected: walletNotConnected,\n        setupWallet: setupWallet,\n        setupFCLAuthHandler: setupFCLAuthHandler,\n        walletUser: walletUser,\n        vaultIsSetup: vaultIsSetup,\n        collectionIsSetup: collectionIsSetup,\n        walletBalance: walletBalance,\n        walletCollection: walletCollection,\n        connectActiveWalletToLyraLabs: connectActiveWalletToLyraLabs,\n        giveAward: giveAward,\n        authHandlerIsSetup: authHandlerIsSetup,\n        setAuthHandlerIsSetup: setAuthHandlerIsSetup\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 7\n      }\n    }, __jsx(Component, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  _s(WithWallet, \"jjyoSY3vlXSmBUGiRVrmk43u1xg=\", false, function () {\n    return [useMutation];\n  });\n\n  return WithWallet;\n};","map":{"version":3,"sources":["/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/shared/enhancers/wallet-provider.js"],"names":["React","useState","fcl","sdk","useMutation","ASSOCIATE_WALLET","toast","CURRENT_USER_QUERY","checkReference","checkCollection","checkActiveWalletScript","vaultBalance","getCollectionItems","giveNFTAward","setupUserWallet","WalletContext","createContext","LOCAL_TOKEN_CONTRACT_ADDRESS","TESTNET_TOKEN_CONTRACT_ADDRESS","LOCAL_AWARD_CONTRACT_ADDRESS","TESTNET_AWARD_CONTRACT_ADDRESS","config","put","getAddress","user","nullPrefix","addr","generateCode","rawCode","match","query","replace","item","withWallet","Component","WithWallet","walletUser","setWalletUser","vaultIsSetup","setVaultIsSetup","collectionIsSetup","setCollectionIsSetup","walletBalance","setWalletBalance","walletCollection","setWalletCollection","authHandlerIsSetup","setAuthHandlerIsSetup","walletConnected","loggedIn","walletNotConnected","setupFCLAuthHandler","console","log","currentUser","subscribe","getWalletResources","checkUserVaultStatus","vaultStatus","startBalancePoll","checkUserCollectionStatus","collectionStatus","startCollectionPoll","balancePollId","getUserBalance","balance","setTimeout","collectionPollId","getUserCollection","items","snapshot","address","contractAddress","scriptCode","script","send","response","decode","checkResult","checkActiveWallet","FUNGIBLE_TOKEN_CONTRACT_ADDRESS","NON_FUNGIBLE_TOKEN_CONTRACT_ADDRESS","activeWalletStatus","setupWallet","authorization","fungibleTokenContractAddress","nonFungibleTokenContractAddress","initCode","transaction","proposer","payer","authorizations","limit","node","initResponse","giveAward","recipientAddress","awardContractAddress","update","cache","data","readQuery","currentUserData","me","writeQuery","associateWallet","onError","error","position","loading","connectActiveWalletToLyraLabs","variables"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport * as fcl from \"@onflow/fcl\";\nimport * as sdk from \"@onflow/sdk\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { ASSOCIATE_WALLET } from \"@data/mutations\";\nimport { toast } from \"react-toastify\";\nimport { CURRENT_USER_QUERY } from \"../../data/queries\";\n\nimport checkReference from \"../../flow/scripts/check-ref.cdc\";\nimport checkCollection from \"../../flow/scripts/check-collection.cdc\";\nimport checkActiveWalletScript from \"../../flow/scripts/check-active-wallet.cdc\";\nimport vaultBalance from \"../../flow/scripts/vault-balance.cdc\";\nimport getCollectionItems from \"../../flow/scripts/get-collection-items.cdc\";\nimport giveNFTAward from \"../../flow/transactions/give-nft-award.cdc\";\n\nimport setupUserWallet from \"../../flow/transactions/setup-user-wallet.cdc\";\n\nexport const WalletContext = React.createContext({});\n\n// fcl\n//   .config()\n//   .put(\"challenge.handshake\", \"http://localhost:8701/flow/authenticate\");\n\n// access-001.devnet12.nodes.onflow.org:9000\n\nconst LOCAL_TOKEN_CONTRACT_ADDRESS = \"0x0x01cf0e2f2f715450\";\nconst TESTNET_TOKEN_CONTRACT_ADDRESS = \"0x4f7d7bb81563b36a\";\n\nconst LOCAL_AWARD_CONTRACT_ADDRESS = \"0xfd43f9148d4b725d\";\nconst TESTNET_AWARD_CONTRACT_ADDRESS = \"0xab1ac2650499b3b5\";\n\nfcl\n  .config()\n  .put(\"accessNode.api\", \"https://access-testnet.onflow.org\") // connect to Flow testnet\n  .put(\"challenge.handshake\", \"https://flow-wallet-testnet.blocto.app/authn\"); // use Blocto testnet wallet\n\nconst getAddress = (user, nullPrefix = true) => {\n  return nullPrefix ? `0x${user.addr}` : user.addr;\n};\n\nconst generateCode = async (rawCode, match) => {\n  if (!match) {\n    return rawCode;\n  }\n  const { query } = match;\n  return rawCode.replace(query, (item) => {\n    return match[item];\n  });\n};\n\nexport const withWallet = (Component) => {\n  const WithWallet = () => {\n    const [walletUser, setWalletUser] = useState(null);\n    const [vaultIsSetup, setVaultIsSetup] = useState(false);\n    const [collectionIsSetup, setCollectionIsSetup] = useState(false);\n    const [walletBalance, setWalletBalance] = useState(null);\n    const [walletCollection, setWalletCollection] = useState(null);\n    const [authHandlerIsSetup, setAuthHandlerIsSetup] = useState(false);\n\n    const walletConnected = walletUser && walletUser.loggedIn;\n    const walletNotConnected =\n      walletUser === null || (walletUser && !walletUser.loggedIn);\n\n    const setupFCLAuthHandler = () => {\n      console.log(\"calling setupFCLAuthHandler\");\n      fcl.currentUser().subscribe(async (user) => {\n        if (user.loggedIn) {\n          setWalletUser(user);\n          // Check if the wallet is set up yet\n          getWalletResources();\n          // const vaultStatus = await checkUserVaultStatus();\n          // setVaultIsSetup(vaultStatus);\n          // if (vaultStatus) {\n          //   startBalancePoll();\n          // }\n          // const collectionStatus = await checkUserCollectionStatus();\n          // setCollectionIsSetup(collectionStatus);\n          // if (collectionStatus) {\n          //   getUserCollection();\n          // }\n        } else {\n          console.log(\"is not logged in\");\n        }\n      });\n    };\n\n    const getWalletResources = async () => {\n      const vaultStatus = await checkUserVaultStatus();\n      setVaultIsSetup(vaultStatus);\n      if (vaultStatus) {\n        startBalancePoll();\n      }\n      const collectionStatus = await checkUserCollectionStatus();\n      setCollectionIsSetup(collectionStatus);\n      if (collectionStatus) {\n        startCollectionPoll();\n      }\n    };\n\n    let balancePollId = null;\n    const startBalancePoll = async () => {\n      const balance = await getUserBalance();\n      setWalletBalance(balance);\n      balancePollId = setTimeout(startBalancePoll, 2000);\n    };\n\n    let collectionPollId = null;\n    const startCollectionPoll = async () => {\n      const items = await getUserCollection();\n      setWalletCollection(items);\n      collectionPollId = setTimeout(startCollectionPoll, 2000);\n    };\n\n    const getUserBalance = async () => {\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      // const contractAddress = LOCAL_TOKEN_CONTRACT_ADDRESS;\n      const contractAddress = TESTNET_TOKEN_CONTRACT_ADDRESS;\n      const scriptCode = await generateCode(vaultBalance, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": contractAddress,\n        \"0x02\": address,\n      });\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const balance = await fcl.decode(response);\n      return balance;\n    };\n\n    const getUserCollection = async () => {\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      // This is the local address - Regular NonFungibleToken contract\n      // const contractAddress = \"0xf3fcd2c1a78f5eee\";\n      // This is the local address - NonFungibleTokenAward contract\n      // const contractAddress = LOCAL_AWARD_CONTRACT_ADDRESS;\n      // This is the testnet address - NonFungibleTokenAward contract\n      const contractAddress = TESTNET_AWARD_CONTRACT_ADDRESS;\n      const scriptCode = await generateCode(getCollectionItems, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": contractAddress,\n        \"0x02\": address,\n      });\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const items = await fcl.decode(response);\n      return items;\n    };\n\n    const checkUserVaultStatus = async () => {\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      // const contractAddress = LOCAL_TOKEN_CONTRACT_ADDRESS;\n      const contractAddress = TESTNET_TOKEN_CONTRACT_ADDRESS;\n      const scriptCode = await generateCode(checkReference, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": contractAddress,\n        \"0x02\": address,\n      });\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const checkResult = await fcl.decode(response);\n      return checkResult;\n    };\n\n    const checkUserCollectionStatus = async () => {\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      // const contractAddress = LOCAL_AWARD_CONTRACT_ADDRESS;\n      const contractAddress = TESTNET_AWARD_CONTRACT_ADDRESS;\n\n      const scriptCode = await generateCode(checkCollection, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": contractAddress,\n        \"0x02\": address,\n      });\n\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const checkResult = await fcl.decode(response);\n      return checkResult;\n    };\n\n    const checkActiveWallet = async () => {\n      // Checks if the active wallet is setup\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      const scriptCode = await generateCode(checkActiveWalletScript, {\n        query: /(0x01|0x02|0x03)/g,\n        \"0x01\": `0x${FUNGIBLE_TOKEN_CONTRACT_ADDRESS}`,\n        \"0x02\": `0x${NON_FUNGIBLE_TOKEN_CONTRACT_ADDRESS}`,\n        \"0x03\": address,\n      });\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const activeWalletStatus = await fcl.decode(response);\n      return activeWalletStatus;\n    };\n\n    const setupWallet = async () => {\n      // Create a vault and a collection\n      const user = fcl.currentUser();\n      const { authorization } = user;\n      const snapshot = await user.snapshot();\n      // const fungibleTokenContractAddress = LOCAL_TOKEN_CONTRACT_ADDRESS;\n      const fungibleTokenContractAddress = TESTNET_TOKEN_CONTRACT_ADDRESS;\n      // const nonFungibleTokenContractAddress = LOCAL_AWARD_CONTRACT_ADDRESS;\n      const nonFungibleTokenContractAddress = TESTNET_AWARD_CONTRACT_ADDRESS;\n      const initCode = await generateCode(setupUserWallet, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": fungibleTokenContractAddress,\n        \"0x02\": nonFungibleTokenContractAddress,\n      });\n      try {\n        const initResponse = await fcl.send(\n          [\n            sdk.transaction`${initCode}`,\n            fcl.proposer(authorization),\n            fcl.payer(authorization),\n            fcl.authorizations([authorization]),\n            fcl.limit(100),\n          ],\n          {\n            node: \"http://localhost:8080\",\n          }\n        );\n        getWalletResources();\n      } catch (e) {\n        console.log(\"setupNFTCollection caught error\", e);\n      }\n    };\n\n    const giveAward = async ({ recipientAddress }) => {\n      console.log(\"giving award to recipientAddress\", recipientAddress);\n      // Create the user vault\n      const user = fcl.currentUser();\n      const { authorization } = user;\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      // const contractAddress = \"0xf3fcd2c1a78f5eee\";\n      const fungibleTokenContractAddress = \"0x01cf0e2f2f715450\";\n      const awardContractAddress = \"0xfd43f9148d4b725d\";\n      const initCode = await generateCode(giveNFTAward, {\n        query: /(0x01|0x02|0x03)/g,\n        \"0x01\": awardContractAddress,\n        \"0x02\": fungibleTokenContractAddress,\n        \"0x03\": `0x${recipientAddress}`,\n      });\n      try {\n        const initResponse = await fcl.send(\n          [\n            sdk.transaction`${initCode}`,\n            fcl.proposer(authorization),\n            fcl.payer(authorization),\n            fcl.authorizations([authorization]),\n            fcl.limit(100),\n          ],\n          {\n            node: \"http://localhost:8080\",\n          }\n        );\n        console.log(\"give award initResponse\", initResponse);\n      } catch (e) {\n        console.log(\"give award caught error\", e);\n      }\n    };\n\n    const [associateWallet, { data, loading, error }] = useMutation(\n      ASSOCIATE_WALLET,\n      {\n        update: (cache, { data }) => {\n          const { me: currentUserData } = cache.readQuery({\n            query: CURRENT_USER_QUERY,\n          });\n          cache.writeQuery({\n            query: CURRENT_USER_QUERY,\n            data: { me: { ...currentUserData, ...data.associateWallet } },\n          });\n        },\n        onError: () => {\n          toast.error(\"😳 Ekkk! Failed to link wallet.\", {\n            position: \"bottom-left\",\n          });\n        },\n      }\n    );\n\n    const connectActiveWalletToLyraLabs = async () => {\n      associateWallet({\n        variables: {\n          address: walletUser.addr,\n        },\n      });\n    };\n\n    return (\n      <WalletContext.Provider\n        value={{\n          walletConnected,\n          walletNotConnected,\n          setupWallet,\n          setupFCLAuthHandler,\n          walletUser,\n          vaultIsSetup,\n          collectionIsSetup,\n          walletBalance,\n          walletCollection,\n          connectActiveWalletToLyraLabs,\n          giveAward,\n          authHandlerIsSetup,\n          setAuthHandlerIsSetup,\n        }}\n      >\n        <Component />\n      </WalletContext.Provider>\n    );\n  };\n  return WithWallet;\n};\n"]},"metadata":{},"sourceType":"module"}