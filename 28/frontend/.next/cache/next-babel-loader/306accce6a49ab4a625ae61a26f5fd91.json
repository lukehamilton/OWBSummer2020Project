{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/pages/settings/index.js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        pub fun main(a: Int, b: Int):Int {\\n          return a + b\\n        }\\n      \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from \"react\";\nimport Page from \"@components/page\";\nimport PostList from \"@components/post-list\";\nimport { USER_POSTS_INBOX } from \"@data/queries\";\nimport { CurrentUserContext } from \"@enhancers/current-user\";\nimport { withCurrentUser } from \"@enhancers/current-user\";\nimport { withLoginModal } from \"@enhancers/login-modal\";\nimport { withPrivateRoute } from \"@enhancers/private-route\";\nimport { flowRight as compose } from \"lodash\";\nimport * as fcl from \"@onflow/fcl\";\nfcl.config().put(\"challenge.handshake\", \"http://localhost:8701/flow/authenticate\");\n\nvar executeSimpleScript = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(a, b) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fcl.send([sdk.script(_templateObject()), sdk.args([sdk.arg(a, types.Int), sdk.arg(b, types.Int)])]);\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", fcl.decode(response));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function executeSimpleScript(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar SettingsPage = function SettingsPage(_ref2) {\n  var user = _ref2.user;\n  fcl.currentUser().subscribe(function (user) {\n    console.log(\"---------- user change -----------\");\n    console.log(user);\n    console.log(\"--------------------------\");\n  }); // const currentUser = useContext(CurrentUserContext);\n\n  return __jsx(Page, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      return fcl.authenticate();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Connect Wallet\"), __jsx(\"button\", {\n    onClick: simpleTransaction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Submit Tx\"), __jsx(\"button\", {\n    onClick: deployHelloCadence,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Deploy Hello Contract\"), __jsx(\"button\", {\n    onClick: pingAccount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Ping for Hello\"));\n};\n\n_c = SettingsPage;\nvar enhance = compose(withPrivateRoute, withCurrentUser, withLoginModal, withPrivateRoute);\nexport default _c2 = enhance(SettingsPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SettingsPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/pages/settings/index.js"],"names":["React","useContext","Page","PostList","USER_POSTS_INBOX","CurrentUserContext","withCurrentUser","withLoginModal","withPrivateRoute","flowRight","compose","fcl","config","put","executeSimpleScript","a","b","send","sdk","script","args","arg","types","Int","response","decode","SettingsPage","user","currentUser","subscribe","console","log","authenticate","simpleTransaction","deployHelloCadence","pingAccount","enhance"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,SAAS,IAAIC,OAAtB,QAAqC,QAArC;AACA,OAAO,KAAKC,GAAZ,MAAqB,aAArB;AAEAA,GAAG,CACAC,MADH,GAEGC,GAFH,CAEO,qBAFP,EAE8B,yCAF9B;;AAIA,IAAMC,mBAAmB;AAAA,sEAAG,iBAAOC,CAAP,EAAUC,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHL,GAAG,CAACM,IAAJ,CAAS,CAC9BC,GAAG,CAACC,MAD0B,qBAM9BD,GAAG,CAACE,IAAJ,CAAS,CAACF,GAAG,CAACG,GAAJ,CAAQN,CAAR,EAAWO,KAAK,CAACC,GAAjB,CAAD,EAAwBL,GAAG,CAACG,GAAJ,CAAQL,CAAR,EAAWM,KAAK,CAACC,GAAjB,CAAxB,CAAT,CAN8B,CAAT,CADG;;AAAA;AACpBC,YAAAA,QADoB;AAAA,6CAUnBb,GAAG,CAACc,MAAJ,CAAWD,QAAX,CAVmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAnBV,mBAAmB;AAAA;AAAA;AAAA,GAAzB;;AAaA,IAAMY,YAAY,GAAG,SAAfA,YAAe,QAAc;AAAA,MAAXC,IAAW,SAAXA,IAAW;AACjChB,EAAAA,GAAG,CAACiB,WAAJ,GAAkBC,SAAlB,CAA4B,UAACF,IAAD,EAAU;AACpCG,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,GAJD,EADiC,CAMjC;;AAEA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMpB,GAAG,CAACqB,YAAJ,EAAN;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAQ,IAAA,OAAO,EAAEC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AAAQ,IAAA,OAAO,EAAEC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHF,EAIE;AAAQ,IAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,CADF;AASD,CAjBD;;KAAMT,Y;AAmBN,IAAMU,OAAO,GAAG1B,OAAO,CACrBF,gBADqB,EAErBF,eAFqB,EAGrBC,cAHqB,EAIrBC,gBAJqB,CAAvB;AAMA,qBAAe4B,OAAO,CAACV,YAAD,CAAtB","sourcesContent":["import React, { useContext } from \"react\";\nimport Page from \"@components/page\";\nimport PostList from \"@components/post-list\";\nimport { USER_POSTS_INBOX } from \"@data/queries\";\nimport { CurrentUserContext } from \"@enhancers/current-user\";\nimport { withCurrentUser } from \"@enhancers/current-user\";\nimport { withLoginModal } from \"@enhancers/login-modal\";\nimport { withPrivateRoute } from \"@enhancers/private-route\";\nimport { flowRight as compose } from \"lodash\";\nimport * as fcl from \"@onflow/fcl\";\n\nfcl\n  .config()\n  .put(\"challenge.handshake\", \"http://localhost:8701/flow/authenticate\");\n\nconst executeSimpleScript = async (a, b) => {\n  const response = await fcl.send([\n    sdk.script`\n        pub fun main(a: Int, b: Int):Int {\n          return a + b\n        }\n      `,\n    sdk.args([sdk.arg(a, types.Int), sdk.arg(b, types.Int)]),\n  ]);\n\n  return fcl.decode(response);\n};\n\nconst SettingsPage = ({ user }) => {\n  fcl.currentUser().subscribe((user) => {\n    console.log(\"---------- user change -----------\");\n    console.log(user);\n    console.log(\"--------------------------\");\n  });\n  // const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <Page>\n      <button onClick={() => fcl.authenticate()}>Connect Wallet</button>\n      <button onClick={simpleTransaction}>Submit Tx</button>\n      <button onClick={deployHelloCadence}>Deploy Hello Contract</button>\n      <button onClick={pingAccount}>Ping for Hello</button>\n      {/* <button>Deploy Con</button> */}\n    </Page>\n  );\n};\n\nconst enhance = compose(\n  withPrivateRoute,\n  withCurrentUser,\n  withLoginModal,\n  withPrivateRoute\n);\nexport default enhance(SettingsPage);\n"]},"metadata":{},"sourceType":"module"}