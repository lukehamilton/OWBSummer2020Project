{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _styled from \"@emotion/styled-base\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/components/wallet-details/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport * as fcl from \"@onflow/fcl\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLink, faPlug, faWallet, faTrophyAlt, faSatelliteDish, faBracketsCurly } from \"@fortawesome/pro-regular-svg-icons\";\nimport { WHITE } from \"@style/colors\";\nimport { WalletContext } from \"@enhancers/wallet-provider\";\nimport CoralButton from \"@library/components/buttons/coral\";\nimport { BASE_TEXT, WEIGHT } from \"@style/typography\";\nimport { AuxiliaryPanelHeader } from \"@library/components/typography/headers/auxiliary-panel\";\nimport { Divider } from \"@library/components/layout\";\n\nvar Container = /*#__PURE__*/_styled(\"div\", {\n  target: \"e1tp03sa0\",\n  label: \"Container\"\n})({\n  display: \"flex\",\n  flexDirection: \"column\",\n  borderRadius: 3,\n  backgroundColor: WHITE,\n  boxShadow: \"0 1px 2px 0 rgba(0,0,0,.1)\",\n  padding: \"1rem\"\n}, false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n\nvar Label = /*#__PURE__*/_styled(\"div\", {\n  target: \"e1tp03sa1\",\n  label: \"Label\"\n})(_objectSpread(_objectSpread({}, BASE_TEXT), {}, {\n  fontSize: 12,\n  fontWeight: WEIGHT.BOLD\n}), false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n\nvar Value = /*#__PURE__*/_styled(\"div\", {\n  target: \"e1tp03sa2\",\n  label: \"Value\"\n})(_objectSpread({}, BASE_TEXT), false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n\nvar TextGroup = /*#__PURE__*/_styled(\"div\", {\n  target: \"e1tp03sa3\",\n  label: \"TextGroup\"\n})(false ? {\n  name: \"j7qwjs\",\n  styles: \"display:flex;flex-direction:column;\"\n} : {\n  name: \"j7qwjs\",\n  styles: \"display:flex;flex-direction:column;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nvar StyledDivider = /*#__PURE__*/_styled(Divider, {\n  target: \"e1tp03sa4\",\n  label: \"StyledDivider\"\n})(false ? {\n  name: \"s98few\",\n  styles: \"margin-top:5px;margin-bottom:5px;\"\n} : {\n  name: \"s98few\",\n  styles: \"margin-top:5px;margin-bottom:5px;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nvar ctaButtonStyles = {\n  height: 24,\n  marginTop: 5,\n  marginBottom: 5\n};\n\nvar StyledCoralButton = /*#__PURE__*/_styled(CoralButton, {\n  target: \"e1tp03sa5\",\n  label: \"StyledCoralButton\"\n})(_objectSpread({}, ctaButtonStyles), false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n\nvar Awards = /*#__PURE__*/_styled(\"div\", {\n  target: \"e1tp03sa6\",\n  label: \"Awards\"\n})(false ? {\n  name: \"k008qs\",\n  styles: \"display:flex;\"\n} : {\n  name: \"k008qs\",\n  styles: \"display:flex;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nvar Award = /*#__PURE__*/_styled(\"div\", {\n  target: \"e1tp03sa7\",\n  label: \"Award\"\n})(false ? {\n  name: \"1t7rc33\",\n  styles: \"margin-right:10px;display:flex;flex-direction:column;align-items:center;\"\n} : {\n  name: \"1t7rc33\",\n  styles: \"margin-right:10px;display:flex;flex-direction:column;align-items:center;\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nvar AwardImg = /*#__PURE__*/_styled(\"div\", {\n  target: \"e1tp03sa8\",\n  label: \"AwardImg\"\n})(_objectSpread(_objectSpread({}, BASE_TEXT), {}, {\n  fontSize: 22\n}), false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n\nvar AwardId = /*#__PURE__*/_styled(\"div\", {\n  target: \"e1tp03sa9\",\n  label: \"AwardId\"\n})(_objectSpread({}, BASE_TEXT), false ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");\n\nvar WalletDetails = function WalletDetails(_ref) {\n  _s();\n\n  var currentUser = _ref.currentUser;\n\n  var _useContext = useContext(WalletContext),\n      status = _useContext.status,\n      transaction = _useContext.transaction,\n      walletConnected = _useContext.walletConnected,\n      walletNotConnected = _useContext.walletNotConnected,\n      setupWallet = _useContext.setupWallet,\n      setupFCLAuthHandler = _useContext.setupFCLAuthHandler,\n      walletUser = _useContext.walletUser,\n      vaultIsSetup = _useContext.vaultIsSetup,\n      collectionIsSetup = _useContext.collectionIsSetup,\n      walletBalance = _useContext.walletBalance,\n      walletCollection = _useContext.walletCollection,\n      connectActiveWalletToLyraLabs = _useContext.connectActiveWalletToLyraLabs,\n      authHandlerIsSetup = _useContext.authHandlerIsSetup,\n      setAuthHandlerIsSetup = _useContext.setAuthHandlerIsSetup;\n\n  var router = useRouter();\n  var route = router.route;\n  useEffect(function () {\n    if (!authHandlerIsSetup) {\n      setupFCLAuthHandler();\n      setAuthHandlerIsSetup(true);\n    }\n  }, []); // console.log(\"route\", route);\n\n  var walletIsLinked = currentUser && currentUser.walletAddress && currentUser.walletIsSetup;\n  var walletIsActive = walletConnected && walletUser; // const walletHasBalance = walletConnected && vaultIsSetup && walletBalance;\n  // const walletHasAwards =\n  //   walletConnected && collectionIsSetup && walletCollection;\n\n  var walletIsConfigured = vaultIsSetup && collectionIsSetup; // const [status, setStatus] = useState(\"Not started\");\n  // const [transaction, setTransaction] = useState(null);\n\n  return __jsx(React.Fragment, null, __jsx(StyledCoralButton, {\n    onClick: setupWallet,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, \"Setup Wallet\"), __jsx(AuxiliaryPanelHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, \"Flow Wallet\"), transaction && __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 23\n    }\n  }, JSON.stringify(transaction, null, 2)), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, __jsx(TextGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, __jsx(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faLink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }), \" Linked Wallet\"), walletIsLinked ? __jsx(Value, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"0x\".concat(currentUser.walletAddress)) : walletIsActive ? walletIsConfigured ? __jsx(StyledCoralButton, {\n    onClick: connectActiveWalletToLyraLabs,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, \"Link Wallet\") : __jsx(StyledCoralButton, {\n    onClick: setupWallet,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, \"Setup Wallet\") : __jsx(Value, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, \"None\")), __jsx(StyledDivider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }), __jsx(TextGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, __jsx(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faPlug,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }), \" Active Wallet\"), walletIsActive ? __jsx(Value, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, \"0x\".concat(walletUser.addr)) : __jsx(StyledCoralButton, {\n    onClick: fcl.authenticate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, \"Connect Wallet\")), __jsx(StyledDivider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }), __jsx(TextGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, __jsx(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faWallet,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }), \" Balance\"), walletIsActive ? walletIsConfigured ? __jsx(Value, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, \"\".concat(Math.round(walletBalance), \" LYRA\")) : __jsx(Value, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, \"No wallet setup\") : __jsx(Value, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, \"No active wallet\")), __jsx(StyledDivider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }), __jsx(TextGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, __jsx(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faTrophyAlt,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }), \" Awards\"), walletIsActive ? walletIsConfigured ? __jsx(Value, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, walletCollection && walletCollection.length > 0 ? __jsx(Awards, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }, walletCollection.map(function (item) {\n    return __jsx(Award, {\n      key: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 23\n      }\n    }, __jsx(AwardImg, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }\n    }, \"\\uD83C\\uDFC5\"), __jsx(AwardId, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }, \"#\".concat(item)));\n  })) : \"none\") : __jsx(Value, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, \"No wallet setup\") : __jsx(Value, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, \"No active wallet\")), walletIsActive && __jsx(React.Fragment, null, __jsx(StyledDivider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }), __jsx(TextGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, __jsx(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faSatelliteDish,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }), \" Tx Status\"), __jsx(Value, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }, status)), transaction && __jsx(React.Fragment, null, __jsx(StyledDivider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }), __jsx(TextGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, __jsx(Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 19\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faBracketsCurly,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  }), \" Tx Details\"), __jsx(Value, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }\n  }, __jsx(\"code\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, JSON.stringify(transaction, null, 2))))))));\n};\n\n_s(WalletDetails, \"e4NCmgNnq24xKlVr1Le45q+RdXw=\", false, function () {\n  return [useRouter];\n});\n\n_c = WalletDetails;\nexport default WalletDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletDetails\");","map":{"version":3,"sources":["/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/components/wallet-details/index.js"],"names":["React","useEffect","useContext","useState","useRouter","fcl","FontAwesomeIcon","faLink","faPlug","faWallet","faTrophyAlt","faSatelliteDish","faBracketsCurly","WHITE","WalletContext","CoralButton","BASE_TEXT","WEIGHT","AuxiliaryPanelHeader","Divider","Container","display","flexDirection","borderRadius","backgroundColor","boxShadow","padding","Label","fontSize","fontWeight","BOLD","Value","TextGroup","StyledDivider","ctaButtonStyles","height","marginTop","marginBottom","StyledCoralButton","Awards","Award","AwardImg","AwardId","WalletDetails","currentUser","status","transaction","walletConnected","walletNotConnected","setupWallet","setupFCLAuthHandler","walletUser","vaultIsSetup","collectionIsSetup","walletBalance","walletCollection","connectActiveWalletToLyraLabs","authHandlerIsSetup","setAuthHandlerIsSetup","router","route","walletIsLinked","walletAddress","walletIsSetup","walletIsActive","walletIsConfigured","JSON","stringify","addr","authenticate","Math","round","length","map","item"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,aAA1B;AAGA,OAAO,KAAKC,GAAZ,MAAqB,aAArB;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACEC,MADF,EAEEC,MAFF,EAGEC,QAHF,EAIEC,WAJF,EAKEC,eALF,EAMEC,eANF,QAOO,oCAPP;AASA,SAASC,KAAT,QAAsB,eAAtB;AAEA,SAASC,aAAT,QAA8B,4BAA9B;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AAEA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,mBAAlC;AAEA,SAASC,oBAAT,QAAqC,wDAArC;AAEA,SAASC,OAAT,QAAwB,4BAAxB;;AAEA,IAAMC,SAAS,GAAG,qBAAO,KAAP;AAAA;AAAA;AAAA,GAAc;AAC9BC,EAAAA,OAAO,EAAE,MADqB;AAE9BC,EAAAA,aAAa,EAAE,QAFe;AAG9BC,EAAAA,YAAY,EAAE,CAHgB;AAI9BC,EAAAA,eAAe,EAAEX,KAJa;AAK9BY,EAAAA,SAAS,EAAE,4BALmB;AAM9BC,EAAAA,OAAO,EAAE;AANqB,CAAd,yhSAAlB;;AASA,IAAMC,KAAK,GAAG,qBAAO,KAAP;AAAA;AAAA;AAAA,mCACTX,SADS;AAEZY,EAAAA,QAAQ,EAAE,EAFE;AAGZC,EAAAA,UAAU,EAAEZ,MAAM,CAACa;AAHP,uhSAAd;;AAMA,IAAMC,KAAK,GAAG,qBAAO,KAAP;AAAA;AAAA;AAAA,qBACTf,SADS,shSAAd;;AAIA,IAAMgB,SAAS,GAAG,qBAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAlB;;AAKA,IAAMC,aAAa,GAAG,qBAAOd,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAtB;;AAKA,IAAMe,eAAe,GAAG;AACtBC,EAAAA,MAAM,EAAE,EADc;AAEtBC,EAAAA,SAAS,EAAE,CAFW;AAGtBC,EAAAA,YAAY,EAAE;AAHQ,CAAxB;;AAMA,IAAMC,iBAAiB,GAAG,qBAAOvB,WAAP;AAAA;AAAA;AAAA,qBACrBmB,eADqB,0hSAA1B;;AAIA,IAAMK,MAAM,GAAG,qBAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAf;;AAIA,IAAMC,KAAK,GAAG,qBAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAd;;AAOA,IAAMC,QAAQ,GAAG,qBAAO,KAAP;AAAA;AAAA;AAAA,mCACZzB,SADY;AAEfY,EAAAA,QAAQ,EAAE;AAFK,2hSAAjB;;AAKA,IAAMc,OAAO,GAAG,qBAAO,KAAP;AAAA;AAAA;AAAA,qBACX1B,SADW,0hSAAhB;;AAIA,IAAM2B,aAAa,GAAG,SAAhBA,aAAgB,OAAqB;AAAA;;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAAA,oBAgBrC1C,UAAU,CAACY,aAAD,CAhB2B;AAAA,MAEvC+B,MAFuC,eAEvCA,MAFuC;AAAA,MAGvCC,WAHuC,eAGvCA,WAHuC;AAAA,MAIvCC,eAJuC,eAIvCA,eAJuC;AAAA,MAKvCC,kBALuC,eAKvCA,kBALuC;AAAA,MAMvCC,WANuC,eAMvCA,WANuC;AAAA,MAOvCC,mBAPuC,eAOvCA,mBAPuC;AAAA,MAQvCC,UARuC,eAQvCA,UARuC;AAAA,MASvCC,YATuC,eASvCA,YATuC;AAAA,MAUvCC,iBAVuC,eAUvCA,iBAVuC;AAAA,MAWvCC,aAXuC,eAWvCA,aAXuC;AAAA,MAYvCC,gBAZuC,eAYvCA,gBAZuC;AAAA,MAavCC,6BAbuC,eAavCA,6BAbuC;AAAA,MAcvCC,kBAduC,eAcvCA,kBAduC;AAAA,MAevCC,qBAfuC,eAevCA,qBAfuC;;AAkBzC,MAAMC,MAAM,GAAGvD,SAAS,EAAxB;AACA,MAAMwD,KAAK,GAAGD,MAAM,CAACC,KAArB;AAEA3D,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACwD,kBAAL,EAAyB;AACvBP,MAAAA,mBAAmB;AACnBQ,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD;AACF,GALQ,EAKN,EALM,CAAT,CArByC,CA4BzC;;AAEA,MAAMG,cAAc,GAClBjB,WAAW,IAAIA,WAAW,CAACkB,aAA3B,IAA4ClB,WAAW,CAACmB,aAD1D;AAGA,MAAMC,cAAc,GAAGjB,eAAe,IAAII,UAA1C,CAjCyC,CAmCzC;AAEA;AACA;;AAEA,MAAMc,kBAAkB,GAAGb,YAAY,IAAIC,iBAA3C,CAxCyC,CA0CzC;AACA;;AAEA,SACE,4BACE,MAAC,iBAAD;AAAmB,IAAA,OAAO,EAAEJ,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,MAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAIGH,WAAW,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOoB,IAAI,CAACC,SAAL,CAAerB,WAAf,EAA4B,IAA5B,EAAkC,CAAlC,CAAP,CAJlB,EAKE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEvC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,mBADF,EAIGsD,cAAc,GACb,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAajB,WAAW,CAACkB,aAAzB,EADa,GAEXE,cAAc,GAChBC,kBAAkB,GAChB,MAAC,iBAAD;AAAmB,IAAA,OAAO,EAAET,6BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADgB,GAKhB,MAAC,iBAAD;AAAmB,IAAA,OAAO,EAAEP,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANc,GAWhB,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ,CADF,EAqBE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,EAsBE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEzC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,mBADF,EAIGwD,cAAc,GACb,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAab,UAAU,CAACiB,IAAxB,EADa,GAGb,MAAC,iBAAD;AAAmB,IAAA,OAAO,EAAE/D,GAAG,CAACgE,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ,CAtBF,EAkCE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,EAmCE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAE5D,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,aADF,EAIGuD,cAAc,GACbC,kBAAkB,GAChB,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWK,IAAI,CAACC,KAAL,CAAWjB,aAAX,CAAX,WADgB,GAGhB,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJW,GAOb,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXJ,CAnCF,EAiDE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjDF,EAkDE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAE5C,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,YADF,EAIGsD,cAAc,GACbC,kBAAkB,GAChB,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,gBAAgB,IAAIA,gBAAgB,CAACiB,MAAjB,GAA0B,CAA9C,GACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,gBAAgB,CAACkB,GAAjB,CAAqB,UAACC,IAAD;AAAA,WACpB,MAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcA,IAAd,EAFF,CADoB;AAAA,GAArB,CADH,CADD,GAUC,MAXJ,CADgB,GAgBhB,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAjBW,GAoBb,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAxBJ,CAlDF,EA6EGV,cAAc,IACb,4BACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAErD,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eADF,EAIE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQkC,MAAR,CAJF,CAFF,EAQGC,WAAW,IACV,4BACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAElC,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,gBADF,EAKE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOsD,IAAI,CAACC,SAAL,CAAerB,WAAf,EAA4B,IAA5B,EAAkC,CAAlC,CAAP,CADF,CALF,CAFF,CATJ,CA9EJ,CALF,CADF;AA+GD,CA5JD;;GAAMH,a;UAkBWvC,S;;;KAlBXuC,a;AA8JN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport styled from \"@emotion/styled\";\n\nimport * as fcl from \"@onflow/fcl\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLink,\n  faPlug,\n  faWallet,\n  faTrophyAlt,\n  faSatelliteDish,\n  faBracketsCurly,\n} from \"@fortawesome/pro-regular-svg-icons\";\n\nimport { WHITE } from \"@style/colors\";\n\nimport { WalletContext } from \"@enhancers/wallet-provider\";\nimport CoralButton from \"@library/components/buttons/coral\";\n\nimport { BASE_TEXT, WEIGHT } from \"@style/typography\";\n\nimport { AuxiliaryPanelHeader } from \"@library/components/typography/headers/auxiliary-panel\";\n\nimport { Divider } from \"@library/components/layout\";\n\nconst Container = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"column\",\n  borderRadius: 3,\n  backgroundColor: WHITE,\n  boxShadow: \"0 1px 2px 0 rgba(0,0,0,.1)\",\n  padding: \"1rem\",\n});\n\nconst Label = styled(\"div\")({\n  ...BASE_TEXT,\n  fontSize: 12,\n  fontWeight: WEIGHT.BOLD,\n});\n\nconst Value = styled(\"div\")({\n  ...BASE_TEXT,\n});\n\nconst TextGroup = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"column\",\n});\n\nconst StyledDivider = styled(Divider)({\n  marginTop: 5,\n  marginBottom: 5,\n});\n\nconst ctaButtonStyles = {\n  height: 24,\n  marginTop: 5,\n  marginBottom: 5,\n};\n\nconst StyledCoralButton = styled(CoralButton)({\n  ...ctaButtonStyles,\n});\n\nconst Awards = styled(\"div\")({\n  display: \"flex\",\n});\n\nconst Award = styled(\"div\")({\n  marginRight: 10,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n});\n\nconst AwardImg = styled(\"div\")({\n  ...BASE_TEXT,\n  fontSize: 22,\n});\n\nconst AwardId = styled(\"div\")({\n  ...BASE_TEXT,\n});\n\nconst WalletDetails = ({ currentUser }) => {\n  const {\n    status,\n    transaction,\n    walletConnected,\n    walletNotConnected,\n    setupWallet,\n    setupFCLAuthHandler,\n    walletUser,\n    vaultIsSetup,\n    collectionIsSetup,\n    walletBalance,\n    walletCollection,\n    connectActiveWalletToLyraLabs,\n    authHandlerIsSetup,\n    setAuthHandlerIsSetup,\n  } = useContext(WalletContext);\n\n  const router = useRouter();\n  const route = router.route;\n\n  useEffect(() => {\n    if (!authHandlerIsSetup) {\n      setupFCLAuthHandler();\n      setAuthHandlerIsSetup(true);\n    }\n  }, []);\n\n  // console.log(\"route\", route);\n\n  const walletIsLinked =\n    currentUser && currentUser.walletAddress && currentUser.walletIsSetup;\n\n  const walletIsActive = walletConnected && walletUser;\n\n  // const walletHasBalance = walletConnected && vaultIsSetup && walletBalance;\n\n  // const walletHasAwards =\n  //   walletConnected && collectionIsSetup && walletCollection;\n\n  const walletIsConfigured = vaultIsSetup && collectionIsSetup;\n\n  // const [status, setStatus] = useState(\"Not started\");\n  // const [transaction, setTransaction] = useState(null);\n\n  return (\n    <>\n      <StyledCoralButton onClick={setupWallet}>Setup Wallet</StyledCoralButton>\n      <AuxiliaryPanelHeader>Flow Wallet</AuxiliaryPanelHeader>\n\n      {transaction && <code>{JSON.stringify(transaction, null, 2)}</code>}\n      <Container>\n        <TextGroup>\n          <Label>\n            <FontAwesomeIcon icon={faLink} /> Linked Wallet\n          </Label>\n          {walletIsLinked ? (\n            <Value>{`0x${currentUser.walletAddress}`}</Value>\n          ) : walletIsActive ? (\n            walletIsConfigured ? (\n              <StyledCoralButton onClick={connectActiveWalletToLyraLabs}>\n                Link Wallet\n              </StyledCoralButton>\n            ) : (\n              <StyledCoralButton onClick={setupWallet}>\n                Setup Wallet\n              </StyledCoralButton>\n            )\n          ) : (\n            <Value>None</Value>\n          )}\n        </TextGroup>\n        <StyledDivider />\n        <TextGroup>\n          <Label>\n            <FontAwesomeIcon icon={faPlug} /> Active Wallet\n          </Label>\n          {walletIsActive ? (\n            <Value>{`0x${walletUser.addr}`}</Value>\n          ) : (\n            <StyledCoralButton onClick={fcl.authenticate}>\n              Connect Wallet\n            </StyledCoralButton>\n          )}\n        </TextGroup>\n        <StyledDivider />\n        <TextGroup>\n          <Label>\n            <FontAwesomeIcon icon={faWallet} /> Balance\n          </Label>\n          {walletIsActive ? (\n            walletIsConfigured ? (\n              <Value>{`${Math.round(walletBalance)} LYRA`}</Value>\n            ) : (\n              <Value>No wallet setup</Value>\n            )\n          ) : (\n            <Value>No active wallet</Value>\n          )}\n        </TextGroup>\n        <StyledDivider />\n        <TextGroup>\n          <Label>\n            <FontAwesomeIcon icon={faTrophyAlt} /> Awards\n          </Label>\n          {walletIsActive ? (\n            walletIsConfigured ? (\n              <Value>\n                {walletCollection && walletCollection.length > 0 ? (\n                  <Awards>\n                    {walletCollection.map((item) => (\n                      <Award key={item}>\n                        <AwardImg>🏅</AwardImg>\n                        <AwardId>{`#${item}`}</AwardId>\n                      </Award>\n                    ))}\n                  </Awards>\n                ) : (\n                  \"none\"\n                )}\n              </Value>\n            ) : (\n              <Value>No wallet setup</Value>\n            )\n          ) : (\n            <Value>No active wallet</Value>\n          )}\n        </TextGroup>\n        {walletIsActive && (\n          <>\n            <StyledDivider />\n            <TextGroup>\n              <Label>\n                <FontAwesomeIcon icon={faSatelliteDish} /> Tx Status\n              </Label>\n              <Value>{status}</Value>\n            </TextGroup>\n            {transaction && (\n              <>\n                <StyledDivider />\n                <TextGroup>\n                  <Label>\n                    <FontAwesomeIcon icon={faBracketsCurly} /> Tx Details\n                  </Label>\n                  {}\n                  <Value>\n                    <code>{JSON.stringify(transaction, null, 2)}</code>\n                  </Value>\n                </TextGroup>\n              </>\n            )}\n          </>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default WalletDetails;\n"]},"metadata":{},"sourceType":"module"}