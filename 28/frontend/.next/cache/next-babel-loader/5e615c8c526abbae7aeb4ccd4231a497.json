{"ast":null,"code":"var _jsxFileName = \"/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/shared/enhancers/mobile-enhancer.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nconst MobileDetect = require(\"mobile-detect\");\n\nexport const MobileContext = React.createContext(false);\nexport const withMobile = (Component, options = {}) => {\n  const WithMobile = props => {\n    return __jsx(MobileContext.Provider, {\n      value: props.isMobile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    })));\n  };\n\n  WithMobile.getInitialProps = async ctx => {\n    const req = ctx.ctx.req;\n    const md = req ? new MobileDetect(req.headers[\"user-agent\"]) : null;\n    const isMobile = md ? md.phone() ? true : false : false;\n    let pageProps = {};\n    pageProps = await Component.getInitialProps(ctx);\n    return _objectSpread({}, pageProps, {\n      isMobile\n    });\n  };\n\n  return WithMobile;\n};","map":{"version":3,"sources":["/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/shared/enhancers/mobile-enhancer.js"],"names":["React","MobileDetect","require","MobileContext","createContext","withMobile","Component","options","WithMobile","props","isMobile","getInitialProps","ctx","req","md","headers","phone","pageProps"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA5B;;AAEA,OAAO,MAAMC,aAAa,GAAGH,KAAK,CAACI,aAAN,CAAoB,KAApB,CAAtB;AAEP,OAAO,MAAMC,UAAU,GAAG,CAACC,SAAD,EAAYC,OAAO,GAAG,EAAtB,KAA6B;AACrD,QAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,WACE,MAAC,aAAD,CAAe,QAAf;AAAwB,MAAA,KAAK,EAAEA,KAAK,CAACC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD,GAND;;AAOAD,EAAAA,UAAU,CAACG,eAAX,GAA6B,MAAMC,GAAN,IAAa;AACxC,UAAMC,GAAG,GAAGD,GAAG,CAACA,GAAJ,CAAQC,GAApB;AACA,UAAMC,EAAE,GAAGD,GAAG,GAAG,IAAIZ,YAAJ,CAAiBY,GAAG,CAACE,OAAJ,CAAY,YAAZ,CAAjB,CAAH,GAAiD,IAA/D;AACA,UAAML,QAAQ,GAAGI,EAAE,GAAIA,EAAE,CAACE,KAAH,KAAa,IAAb,GAAoB,KAAxB,GAAiC,KAApD;AACA,QAAIC,SAAS,GAAG,EAAhB;AACAA,IAAAA,SAAS,GAAG,MAAMX,SAAS,CAACK,eAAV,CAA0BC,GAA1B,CAAlB;AACA,6BAAYK,SAAZ;AAAuBP,MAAAA;AAAvB;AACD,GAPD;;AAQA,SAAOF,UAAP;AACD,CAjBM","sourcesContent":["import React from \"react\";\nconst MobileDetect = require(\"mobile-detect\");\n\nexport const MobileContext = React.createContext(false);\n\nexport const withMobile = (Component, options = {}) => {\n  const WithMobile = props => {\n    return (\n      <MobileContext.Provider value={props.isMobile}>\n        <Component {...props} />\n      </MobileContext.Provider>\n    );\n  };\n  WithMobile.getInitialProps = async ctx => {\n    const req = ctx.ctx.req;\n    const md = req ? new MobileDetect(req.headers[\"user-agent\"]) : null;\n    const isMobile = md ? (md.phone() ? true : false) : false;\n    let pageProps = {};\n    pageProps = await Component.getInitialProps(ctx);\n    return { ...pageProps, isMobile };\n  };\n  return WithMobile;\n};\n"]},"metadata":{},"sourceType":"module"}