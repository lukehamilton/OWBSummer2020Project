{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/pages/settings/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    import HelloWorld from 0x01cf0e2f2f715450\\n\\n    transaction {\\n    \\n      prepare(acct: AuthAccount) {}\\n    \\n      execute {\\n        log(HelloWorld.hello())\\n      }\\n    }\\n  \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n          transaction(code: String) {\\n            prepare(acct: AuthAccount) {\\n              acct.setCode(code.decodeHex())\\n            }\\n          }\\n        \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      transaction {\\n        prepare(acct: AuthAccount) {\\n          log(\\\"Transaction Submitted\\\")\\n        }\\n      }\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        pub fun main(a: Int, b: Int):Int {\\n          return a + b\\n        }\\n      \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useContext } from \"react\";\nimport Page from \"@components/page\";\nimport PostList from \"@components/post-list\";\nimport { USER_POSTS_INBOX } from \"@data/queries\";\nimport { CurrentUserContext } from \"@enhancers/current-user\";\nimport { withCurrentUser } from \"@enhancers/current-user\";\nimport { withLoginModal } from \"@enhancers/login-modal\";\nimport { withPrivateRoute } from \"@enhancers/private-route\";\nimport { flowRight as compose } from \"lodash\";\nimport * as fcl from \"@onflow/fcl\";\nimport * as sdk from \"@onflow/sdk\";\nimport * as types from \"@onflow/types\";\nfcl.config().put(\"challenge.handshake\", \"http://localhost:8701/flow/authenticate\");\n\nvar executeSimpleScript = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(a, b) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fcl.send([sdk.script(_templateObject()), sdk.args([sdk.arg(a, types.Int), sdk.arg(b, types.Int)])]);\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", fcl.decode(response));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function executeSimpleScript(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar simpleTransaction = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var _fcl$currentUser, authorization, tx;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _fcl$currentUser = fcl.currentUser(), authorization = _fcl$currentUser.authorization;\n            _context2.next = 3;\n            return fcl.send([fcl.transaction(_templateObject2()), sdk.payer(authorization), sdk.proposer(authorization), sdk.authorizations([authorization]), sdk.limit(100)]);\n\n          case 3:\n            tx = _context2.sent;\n            console.log({\n              tx: tx\n            });\n            fcl.tx(tx).subscribe(function (txStatus) {\n              if (fcl.tx.isExecuted(txStatus)) {\n                console.log(\"Transaction was executed\");\n              }\n            });\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function simpleTransaction() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar deployHelloCadence = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var code, _fcl$currentUser2, authorization, tx;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            code = \"\\n    access(all) contract HelloWorld {\\n      access(all) let greeting: String\\n\\n      init() {\\n          self.greeting = \\\"Hello, Cadence!\\\"\\n      }\\n  \\n      access(all) fun hello(): String {\\n          return self.greeting\\n      }\\n    }\\n  \";\n            _fcl$currentUser2 = fcl.currentUser(), authorization = _fcl$currentUser2.authorization;\n            _context3.next = 4;\n            return fcl.send([sdk.transaction(_templateObject3()), fcl.args([fcl.arg(Buffer.from(code, \"utf8\").toString(\"hex\"), types.String)]), fcl.proposer(authorization), fcl.payer(authorization), fcl.authorizations([authorization]), fcl.limit(100)]);\n\n          case 4:\n            tx = _context3.sent;\n            console.log({\n              tx: tx\n            });\n            fcl.tx(tx).subscribe(function (txStatus) {\n              if (fcl.tx.isExecuted(txStatus)) {\n                console.log(\"Contract was deployed\");\n              }\n            });\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function deployHelloCadence() {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar pingAccount = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    var _fcl$currentUser3, authorization, tx;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _fcl$currentUser3 = fcl.currentUser(), authorization = _fcl$currentUser3.authorization;\n            _context4.next = 3;\n            return fcl.send([fcl.transaction(_templateObject4()), fcl.proposer(authorization), fcl.payer(authorization), fcl.authorizations([authorization])]);\n\n          case 3:\n            tx = _context4.sent;\n            fcl.tx(tx).subscribe(function (txStatus) {\n              if (fcl.tx.isExecuted(txStatus)) {\n                console.log(\"Transaction was executed\");\n              }\n            });\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function pingAccount() {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar SettingsPage = function SettingsPage(_ref5) {\n  _s();\n\n  var user = _ref5.user;\n  fcl.currentUser().subscribe(function (user) {\n    console.log(\"---------- user change -----------\");\n    console.log(user);\n    console.log(\"--------------------------\");\n  }); // const currentUser = useContext(CurrentUserContext);\n\n  var _useState = useState(null),\n      scriptResult = _useState[0],\n      setScriptResult = _useState[1];\n\n  var callScript = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return executeSimpleScript(10, 20);\n\n            case 2:\n              result = _context5.sent;\n              setScriptResult(result);\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function callScript() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Page, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    onClick: callScript,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, \"Execute Script\"), scriptResult && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: \"script-result\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"Computation Result: \", scriptResult)), __jsx(\"button\", {\n    onClick: function onClick() {\n      return fcl.authenticate();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, \"Connect Wallet\"), __jsx(\"button\", {\n    onClick: simpleTransaction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, \"Submit Tx\"), __jsx(\"button\", {\n    onClick: deployHelloCadence,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, \"Deploy Hello Contract\"), __jsx(\"button\", {\n    onClick: pingAccount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, \"Ping for Hello\"));\n};\n\n_s(SettingsPage, \"I3Xu2ETh1f5rWj2PdsQp3NstJoE=\");\n\n_c = SettingsPage;\nvar enhance = compose(withPrivateRoute, withCurrentUser, withLoginModal, withPrivateRoute);\nexport default _c2 = enhance(SettingsPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SettingsPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/pages/settings/index.js"],"names":["React","useState","useContext","Page","PostList","USER_POSTS_INBOX","CurrentUserContext","withCurrentUser","withLoginModal","withPrivateRoute","flowRight","compose","fcl","sdk","types","config","put","executeSimpleScript","a","b","send","script","args","arg","Int","response","decode","simpleTransaction","currentUser","authorization","transaction","payer","proposer","authorizations","limit","tx","console","log","subscribe","txStatus","isExecuted","deployHelloCadence","code","Buffer","from","toString","String","pingAccount","SettingsPage","user","scriptResult","setScriptResult","callScript","result","authenticate","enhance"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport Page from \"@components/page\";\nimport PostList from \"@components/post-list\";\nimport { USER_POSTS_INBOX } from \"@data/queries\";\nimport { CurrentUserContext } from \"@enhancers/current-user\";\nimport { withCurrentUser } from \"@enhancers/current-user\";\nimport { withLoginModal } from \"@enhancers/login-modal\";\nimport { withPrivateRoute } from \"@enhancers/private-route\";\nimport { flowRight as compose } from \"lodash\";\nimport * as fcl from \"@onflow/fcl\";\nimport * as sdk from \"@onflow/sdk\";\nimport * as types from \"@onflow/types\";\n\nfcl\n  .config()\n  .put(\"challenge.handshake\", \"http://localhost:8701/flow/authenticate\");\n\nconst executeSimpleScript = async (a, b) => {\n  const response = await fcl.send([\n    sdk.script`\n        pub fun main(a: Int, b: Int):Int {\n          return a + b\n        }\n      `,\n    sdk.args([sdk.arg(a, types.Int), sdk.arg(b, types.Int)]),\n  ]);\n\n  return fcl.decode(response);\n};\n\nconst simpleTransaction = async () => {\n  const { authorization } = fcl.currentUser();\n  const tx = await fcl.send([\n    fcl.transaction`\n      transaction {\n        prepare(acct: AuthAccount) {\n          log(\"Transaction Submitted\")\n        }\n      }\n    `,\n    sdk.payer(authorization),\n    sdk.proposer(authorization),\n    sdk.authorizations([authorization]),\n    sdk.limit(100),\n  ]);\n\n  console.log({ tx });\n\n  fcl.tx(tx).subscribe((txStatus) => {\n    if (fcl.tx.isExecuted(txStatus)) {\n      console.log(\"Transaction was executed\");\n    }\n  });\n};\n\nconst deployHelloCadence = async () => {\n  const code = `\n    access(all) contract HelloWorld {\n      access(all) let greeting: String\n\n      init() {\n          self.greeting = \"Hello, Cadence!\"\n      }\n  \n      access(all) fun hello(): String {\n          return self.greeting\n      }\n    }\n  `;\n  const { authorization } = fcl.currentUser();\n  const tx = await fcl.send([\n    sdk.transaction`\n          transaction(code: String) {\n            prepare(acct: AuthAccount) {\n              acct.setCode(code.decodeHex())\n            }\n          }\n        `,\n    fcl.args([\n      fcl.arg(Buffer.from(code, \"utf8\").toString(\"hex\"), types.String),\n    ]),\n    fcl.proposer(authorization),\n    fcl.payer(authorization),\n    fcl.authorizations([authorization]),\n    fcl.limit(100),\n  ]);\n\n  console.log({ tx });\n\n  fcl.tx(tx).subscribe((txStatus) => {\n    if (fcl.tx.isExecuted(txStatus)) {\n      console.log(\"Contract was deployed\");\n    }\n  });\n};\n\nconst pingAccount = async () => {\n  const { authorization } = fcl.currentUser();\n\n  const tx = await fcl.send([\n    fcl.transaction`\n    import HelloWorld from 0x01cf0e2f2f715450\n\n    transaction {\n    \n      prepare(acct: AuthAccount) {}\n    \n      execute {\n        log(HelloWorld.hello())\n      }\n    }\n  `,\n    fcl.proposer(authorization),\n    fcl.payer(authorization),\n    fcl.authorizations([authorization]),\n  ]);\n\n  fcl.tx(tx).subscribe((txStatus) => {\n    if (fcl.tx.isExecuted(txStatus)) {\n      console.log(\"Transaction was executed\");\n    }\n  });\n};\n\nconst SettingsPage = ({ user }) => {\n  fcl.currentUser().subscribe((user) => {\n    console.log(\"---------- user change -----------\");\n    console.log(user);\n    console.log(\"--------------------------\");\n  });\n  // const currentUser = useContext(CurrentUserContext);\n\n  const [scriptResult, setScriptResult] = useState(null);\n\n  const callScript = async () => {\n    const result = await executeSimpleScript(10, 20);\n    setScriptResult(result);\n  };\n\n  return (\n    <Page>\n      <button onClick={callScript}>Execute Script</button>\n      {scriptResult && (\n        <div>\n          <p className=\"script-result\">Computation Result: {scriptResult}</p>\n        </div>\n      )}\n      <button onClick={() => fcl.authenticate()}>Connect Wallet</button>\n      <button onClick={simpleTransaction}>Submit Tx</button>\n      <button onClick={deployHelloCadence}>Deploy Hello Contract</button>\n      <button onClick={pingAccount}>Ping for Hello</button>\n      {/* <button>Deploy Con</button> */}\n    </Page>\n  );\n};\n\nconst enhance = compose(\n  withPrivateRoute,\n  withCurrentUser,\n  withLoginModal,\n  withPrivateRoute\n);\nexport default enhance(SettingsPage);\n"]},"metadata":{},"sourceType":"module"}