{"ast":null,"code":"var _jsxFileName = \"/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/shared/enhancers/private-route.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nconst login = \"/login?redirected=true\";\n\nconst checkUserAuthentication = () => {\n  //   return { auth: null }; // change null to { isAdmin: true } for test it.\n  return {\n    auth: true\n  }; // change null to { isAdmin: true } for test it.\n};\n\nexport const withPrivateRoute = (Component, options = {}) => {\n  const WithPrivateRoute = props => {\n    return __jsx(Component, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }));\n  };\n\n  WithPrivateRoute.getInitialProps = async ({\n    res\n  }) => {\n    console.log(\"XXXXX CRYSTAL CLEAR XXX\", res);\n    const userAuth = await checkUserAuthentication();\n    console.log(\"XXX userAuth XXX\", userAuth);\n\n    if (!(userAuth === null || userAuth === void 0 ? void 0 : userAuth.auth)) {\n      // Handle server-side and client-side rendering.\n      if (res) {\n        res === null || res === void 0 ? void 0 : res.writeHead(302, {\n          Location: login\n        });\n        res === null || res === void 0 ? void 0 : res.end();\n      } else {\n        Router.replace(login);\n      }\n    } else if (Component.getInitialProps) {\n      const wrappedProps = await Component.getInitialProps(userAuth);\n      return _objectSpread({}, wrappedProps, {\n        userAuth\n      });\n    } // res?.writeHead(302, {\n    //   Location: login,\n    // });\n    // res?.end();\n    // const req = ctx.ctx.req;\n    // const md = req ? new MobileDetect(req.headers[\"user-agent\"]) : null;\n    // const isMobile = md ? (md.phone() ? true : false) : false;\n    // let pageProps = {};\n    // pageProps = await Component.getInitialProps(ctx);\n    // return { ...pageProps, isMobile };\n\n  };\n\n  return WithPrivateRoute;\n};","map":{"version":3,"sources":["/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/shared/enhancers/private-route.js"],"names":["React","login","checkUserAuthentication","auth","withPrivateRoute","Component","options","WithPrivateRoute","props","getInitialProps","res","console","log","userAuth","writeHead","Location","end","Router","replace","wrappedProps"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,KAAK,GAAG,wBAAd;;AAEA,MAAMC,uBAAuB,GAAG,MAAM;AACpC;AACA,SAAO;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAP,CAFoC,CAEb;AACxB,CAHD;;AAKA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,SAAD,EAAYC,OAAO,GAAG,EAAtB,KAA6B;AAC3D,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,WAAO,MAAC,SAAD,eAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFD;;AAGAD,EAAAA,gBAAgB,CAACE,eAAjB,GAAmC,OAAO;AAAEC,IAAAA;AAAF,GAAP,KAAmB;AACpDC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,GAAvC;AACA,UAAMG,QAAQ,GAAG,MAAMX,uBAAuB,EAA9C;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCC,QAAhC;;AACA,QAAI,EAACA,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEV,IAAX,CAAJ,EAAqB;AACnB;AACA,UAAIO,GAAJ,EAAS;AACPA,QAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEI,SAAL,CAAe,GAAf,EAAoB;AAClBC,UAAAA,QAAQ,EAAEd;AADQ,SAApB;AAGAS,QAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEM,GAAL;AACD,OALD,MAKO;AACLC,QAAAA,MAAM,CAACC,OAAP,CAAejB,KAAf;AACD;AACF,KAVD,MAUO,IAAII,SAAS,CAACI,eAAd,EAA+B;AACpC,YAAMU,YAAY,GAAG,MAAMd,SAAS,CAACI,eAAV,CAA0BI,QAA1B,CAA3B;AACA,+BAAYM,YAAZ;AAA0BN,QAAAA;AAA1B;AACD,KAjBmD,CAkBpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,GA5BD;;AA6BA,SAAON,gBAAP;AACD,CAlCM","sourcesContent":["import React from \"react\";\n\nconst login = \"/login?redirected=true\";\n\nconst checkUserAuthentication = () => {\n  //   return { auth: null }; // change null to { isAdmin: true } for test it.\n  return { auth: true }; // change null to { isAdmin: true } for test it.\n};\n\nexport const withPrivateRoute = (Component, options = {}) => {\n  const WithPrivateRoute = (props) => {\n    return <Component {...props} />;\n  };\n  WithPrivateRoute.getInitialProps = async ({ res }) => {\n    console.log(\"XXXXX CRYSTAL CLEAR XXX\", res);\n    const userAuth = await checkUserAuthentication();\n    console.log(\"XXX userAuth XXX\", userAuth);\n    if (!userAuth?.auth) {\n      // Handle server-side and client-side rendering.\n      if (res) {\n        res?.writeHead(302, {\n          Location: login,\n        });\n        res?.end();\n      } else {\n        Router.replace(login);\n      }\n    } else if (Component.getInitialProps) {\n      const wrappedProps = await Component.getInitialProps(userAuth);\n      return { ...wrappedProps, userAuth };\n    }\n    // res?.writeHead(302, {\n    //   Location: login,\n    // });\n    // res?.end();\n    // const req = ctx.ctx.req;\n    // const md = req ? new MobileDetect(req.headers[\"user-agent\"]) : null;\n    // const isMobile = md ? (md.phone() ? true : false) : false;\n    // let pageProps = {};\n    // pageProps = await Component.getInitialProps(ctx);\n    // return { ...pageProps, isMobile };\n  };\n  return WithPrivateRoute;\n};\n"]},"metadata":{},"sourceType":"module"}