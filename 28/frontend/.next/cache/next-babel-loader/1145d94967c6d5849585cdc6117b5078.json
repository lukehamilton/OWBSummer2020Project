{"ast":null,"code":"var _jsxFileName = \"/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport * as fcl from \"@onflow/fcl\";\nimport App from \"next/app\";\nimport Layout from \"../components/layout\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { withMobile } from \"../shared/enhancers/mobile-enhancer\";\nconst NODE_ENV = \"development\";\nconst FLOW_CONFIG = process.env.FLOW_CONFIG;\nconst {\n  ACCESS_NODE_API,\n  CHALLENGE_HANDSHAKE\n} = FLOW_CONFIG[\"production\"]; // } = FLOW_CONFIG[NODE_ENV];\n\ntoast.configure();\nfcl.config().put(\"accessNode.api\", \"https://access-testnet.onflow.org\") // connect to Flow testnet\n.put(\"challenge.handshake\", \"https://flow-wallet-testnet.blocto.app/authn\"); // use Blocto testnet wallet\n\nclass MyApp extends App {\n  render(props) {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, __jsx(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, JSON.stringify(process.env.FLOW_CONFIG.development)), __jsx(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, JSON.stringify(process.env.FLOW_CONFIG.production)), __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nexport default withMobile(MyApp);","map":{"version":3,"sources":["/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/pages/_app.js"],"names":["React","fcl","App","Layout","toast","withMobile","NODE_ENV","FLOW_CONFIG","process","env","ACCESS_NODE_API","CHALLENGE_HANDSHAKE","configure","config","put","MyApp","render","props","Component","pageProps","JSON","stringify","development","production"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,aAArB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,uCAAP;AACA,SAASC,UAAT,QAA2B,qCAA3B;AAEA,MAAMC,QAAQ,gBAAd;AACA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAYF,WAAhC;AACA,MAAM;AAAEG,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,IAA2CJ,WAAW,CAAC,YAAD,CAA5D,C,CACA;;AAEAH,KAAK,CAACQ,SAAN;AAEAX,GAAG,CACAY,MADH,GAEGC,GAFH,CAEO,gBAFP,EAEyB,mCAFzB,EAE8D;AAF9D,CAGGA,GAHH,CAGO,qBAHP,EAG8B,8CAH9B,E,CAG+E;;AAE/E,MAAMC,KAAN,SAAoBb,GAApB,CAAwB;AACtBc,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACZ,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKF,KAAtC;AACA,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOG,IAAI,CAACC,SAAL,CAAeb,OAAO,CAACC,GAAR,CAAYF,WAAZ,CAAwBe,WAAvC,CAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOF,IAAI,CAACC,SAAL,CAAeb,OAAO,CAACC,GAAR,CAAYF,WAAZ,CAAwBgB,UAAvC,CAAP,CAFF,EAGE,MAAC,SAAD,eAAeJ,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHF,CADF;AAOD;;AAVqB;;AAaxB,eAAed,UAAU,CAACU,KAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport * as fcl from \"@onflow/fcl\";\nimport App from \"next/app\";\nimport Layout from \"../components/layout\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { withMobile } from \"../shared/enhancers/mobile-enhancer\";\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst FLOW_CONFIG = process.env.FLOW_CONFIG;\nconst { ACCESS_NODE_API, CHALLENGE_HANDSHAKE } = FLOW_CONFIG[\"production\"];\n// } = FLOW_CONFIG[NODE_ENV];\n\ntoast.configure();\n\nfcl\n  .config()\n  .put(\"accessNode.api\", \"https://access-testnet.onflow.org\") // connect to Flow testnet\n  .put(\"challenge.handshake\", \"https://flow-wallet-testnet.blocto.app/authn\"); // use Blocto testnet wallet\n\nclass MyApp extends App {\n  render(props) {\n    const { Component, pageProps } = this.props;\n    return (\n      <Layout>\n        <code>{JSON.stringify(process.env.FLOW_CONFIG.development)}</code>\n        <code>{JSON.stringify(process.env.FLOW_CONFIG.production)}</code>\n        <Component {...pageProps} />\n      </Layout>\n    );\n  }\n}\n\nexport default withMobile(MyApp);\n"]},"metadata":{},"sourceType":"module"}