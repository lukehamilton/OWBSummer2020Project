{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation commentVote($userId: ID!, $commentId: ID!) {\\n    commentVote(userId: $userId, commentId: $commentId) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation vote($userId: ID!, $postId: ID!) {\\n    vote(userId: $userId, postId: $postId) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updateFollowedTopic(\\n    $userId: ID!\\n    $topicId: ID!\\n    $following: Boolean!\\n  ) {\\n    updateFollowedTopic(\\n      userId: $userId\\n      topicId: $topicId\\n      following: $following\\n    ) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation createComment($postId: ID, $parentId: ID, $body: String!) {\\n    createComment(postId: $postId, parentId: $parentId, body: $body) {\\n      id\\n      text\\n      votesCount\\n      author {\\n        avatar\\n        username\\n        name\\n      }\\n      replies {\\n        id\\n        text\\n        votesCount\\n        author {\\n          avatar\\n          username\\n          name\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation archivePost($postId: String) {\\n    archivePost(postId: $postId) {\\n      ...postFields\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation createPost($givenUrl: String) {\\n    createPost(givenUrl: $givenUrl) {\\n      ...postFields\\n    }\\n  }\\n  \", \"\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation signUpload($fileName: String, $fileType: String) {\\n    signUpload(fileName: $fileName, fileType: $fileType) {\\n      signedRequest\\n      url\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport { postFields } from \"./fragments\";\nexport var SIGN_UPLOAD = gql(_templateObject());\nexport var CREATE_POST = gql(_templateObject2(), postFields);\nexport var ARCHIVE_POST = gql(_templateObject3(), postFields);\nexport var CREATE_COMMENT = gql(_templateObject4()); // export const CREATE_REPLY = gql`\n//   mutation createReply($parentId: ID, $body: String!) {\n//     createReply(parentId: $parentId, body: $body) {\n//       id\n//     }\n//   }\n// `;\n\nexport var UPDATE_FOLLOWED_TOPIC = gql(_templateObject5());\nexport var VOTE = gql(_templateObject6());\nexport var COMMENT_VOTE = gql(_templateObject7());","map":{"version":3,"sources":["/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/data/mutations.js"],"names":["gql","postFields","SIGN_UPLOAD","CREATE_POST","ARCHIVE_POST","CREATE_COMMENT","UPDATE_FOLLOWED_TOPIC","VOTE","COMMENT_VOTE"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,OAAO,IAAMC,WAAW,GAAGF,GAAH,mBAAjB;AASP,OAAO,IAAMG,WAAW,GAAGH,GAAH,qBAMpBC,UANoB,CAAjB;AASP,OAAO,IAAMG,YAAY,GAAGJ,GAAH,qBAMrBC,UANqB,CAAlB;AASP,OAAO,IAAMI,cAAc,GAAGL,GAAH,oBAApB,C,CAyBP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMM,qBAAqB,GAAGN,GAAH,oBAA3B;AAgBP,OAAO,IAAMO,IAAI,GAAGP,GAAH,oBAAV;AAQP,OAAO,IAAMQ,YAAY,GAAGR,GAAH,oBAAlB","sourcesContent":["import gql from \"graphql-tag\";\nimport { postFields } from \"./fragments\";\n\nexport const SIGN_UPLOAD = gql`\n  mutation signUpload($fileName: String, $fileType: String) {\n    signUpload(fileName: $fileName, fileType: $fileType) {\n      signedRequest\n      url\n    }\n  }\n`;\n\nexport const CREATE_POST = gql`\n  mutation createPost($givenUrl: String) {\n    createPost(givenUrl: $givenUrl) {\n      ...postFields\n    }\n  }\n  ${postFields}\n`;\n\nexport const ARCHIVE_POST = gql`\n  mutation archivePost($postId: String) {\n    archivePost(postId: $postId) {\n      ...postFields\n    }\n  }\n  ${postFields}\n`;\n\nexport const CREATE_COMMENT = gql`\n  mutation createComment($postId: ID, $parentId: ID, $body: String!) {\n    createComment(postId: $postId, parentId: $parentId, body: $body) {\n      id\n      text\n      votesCount\n      author {\n        avatar\n        username\n        name\n      }\n      replies {\n        id\n        text\n        votesCount\n        author {\n          avatar\n          username\n          name\n        }\n      }\n    }\n  }\n`;\n\n// export const CREATE_REPLY = gql`\n//   mutation createReply($parentId: ID, $body: String!) {\n//     createReply(parentId: $parentId, body: $body) {\n//       id\n//     }\n//   }\n// `;\n\nexport const UPDATE_FOLLOWED_TOPIC = gql`\n  mutation updateFollowedTopic(\n    $userId: ID!\n    $topicId: ID!\n    $following: Boolean!\n  ) {\n    updateFollowedTopic(\n      userId: $userId\n      topicId: $topicId\n      following: $following\n    ) {\n      id\n    }\n  }\n`;\n\nexport const VOTE = gql`\n  mutation vote($userId: ID!, $postId: ID!) {\n    vote(userId: $userId, postId: $postId) {\n      id\n    }\n  }\n`;\n\nexport const COMMENT_VOTE = gql`\n  mutation commentVote($userId: ID!, $commentId: ID!) {\n    commentVote(userId: $userId, commentId: $commentId) {\n      id\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}