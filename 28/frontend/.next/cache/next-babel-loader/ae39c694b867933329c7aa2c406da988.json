{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/shared/enhancers/wallet-provider.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\", \"\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport * as fcl from \"@onflow/fcl\";\nimport * as sdk from \"@onflow/sdk\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { ASSOCIATE_WALLET } from \"@data/mutations\";\nimport { toast } from \"react-toastify\";\nimport { CURRENT_USER_QUERY } from \"../../data/queries\";\nimport flowConfig from \"@config/flow\";\nimport checkReference from \"../../flow/scripts/check-ref.cdc\";\nimport checkCollection from \"../../flow/scripts/check-collection.cdc\";\nimport vaultBalance from \"../../flow/scripts/vault-balance.cdc\";\nimport getCollectionItems from \"../../flow/scripts/get-collection-items.cdc\";\nimport giveNFTAward from \"../../flow/transactions/give-nft-award.cdc\";\nimport setupUserWallet from \"../../flow/transactions/setup-user-wallet.cdc\";\nexport var WalletContext = React.createContext({});\nvar TOKEN_CONTRACT_ADDRESS = flowConfig.TOKEN_CONTRACT_ADDRESS,\n    AWARD_CONTRACT_ADDRESS = flowConfig.AWARD_CONTRACT_ADDRESS;\n\nvar getAddress = function getAddress(user) {\n  var nullPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return nullPrefix ? \"0x\".concat(user.addr) : user.addr;\n};\n\nvar generateCode = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(rawCode, match) {\n    var query;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (match) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", rawCode);\n\n          case 2:\n            query = match.query;\n            return _context.abrupt(\"return\", rawCode.replace(query, function (item) {\n              return match[item];\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function generateCode(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport var withWallet = function withWallet(Component) {\n  var _s = $RefreshSig$();\n\n  var WithWallet = function WithWallet() {\n    _s();\n\n    var _useState = useState(null),\n        walletUser = _useState[0],\n        setWalletUser = _useState[1];\n\n    var _useState2 = useState(false),\n        vaultIsSetup = _useState2[0],\n        setVaultIsSetup = _useState2[1];\n\n    var _useState3 = useState(false),\n        collectionIsSetup = _useState3[0],\n        setCollectionIsSetup = _useState3[1];\n\n    var _useState4 = useState(null),\n        walletBalance = _useState4[0],\n        setWalletBalance = _useState4[1];\n\n    var _useState5 = useState(null),\n        walletCollection = _useState5[0],\n        setWalletCollection = _useState5[1];\n\n    var _useState6 = useState(false),\n        authHandlerIsSetup = _useState6[0],\n        setAuthHandlerIsSetup = _useState6[1];\n\n    var _useState7 = useState(false),\n        getResourcesComplete = _useState7[0],\n        setGetResourcesComplete = _useState7[1];\n\n    var _useState8 = useState(null),\n        status = _useState8[0],\n        setStatus = _useState8[1];\n\n    var _useState9 = useState(null),\n        transaction = _useState9[0],\n        setTransaction = _useState9[1];\n\n    var walletConnected = walletUser && walletUser.loggedIn;\n    var walletNotConnected = walletUser === null || walletUser && !walletUser.loggedIn;\n\n    var setupFCLAuthHandler = function setupFCLAuthHandler() {\n      fcl.currentUser().subscribe( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(user) {\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  console.log(\"FCVL CALLBACK\", user.loggedIn);\n\n                  if (user.loggedIn) {\n                    console.log(\"XXXXXXX\");\n                    setWalletUser(user);\n                    getWalletResources();\n                  } else {\n                    console.log(\"YYYYYY\");\n                  }\n\n                case 2:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x3) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    };\n\n    var getWalletResources = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var vaultStatus, collectionStatus;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return checkUserVaultStatus();\n\n              case 2:\n                vaultStatus = _context3.sent;\n                setVaultIsSetup(vaultStatus);\n\n                if (vaultStatus) {\n                  startBalancePoll();\n                }\n\n                _context3.next = 7;\n                return checkUserCollectionStatus();\n\n              case 7:\n                collectionStatus = _context3.sent;\n                setCollectionIsSetup(collectionStatus);\n\n                if (collectionStatus) {\n                  startCollectionPoll();\n                }\n\n                setGetResourcesComplete(true);\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function getWalletResources() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    var balancePollId = null;\n\n    var startBalancePoll = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var balance;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return getUserBalance();\n\n              case 2:\n                balance = _context4.sent;\n                setWalletBalance(balance);\n                balancePollId = setTimeout(startBalancePoll, 2000);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function startBalancePoll() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    var collectionPollId = null;\n\n    var startCollectionPoll = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var items;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return getUserCollection();\n\n              case 2:\n                items = _context5.sent;\n                setWalletCollection(items);\n                collectionPollId = setTimeout(startCollectionPoll, 2000);\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function startCollectionPoll() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    var getUserBalance = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var user, snapshot, address, scriptCode, script, response, balance;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                user = fcl.currentUser();\n                _context6.next = 3;\n                return user.snapshot();\n\n              case 3:\n                snapshot = _context6.sent;\n                address = getAddress(snapshot);\n                _context6.next = 7;\n                return generateCode(vaultBalance, {\n                  query: /(0x01|0x02)/g,\n                  \"0x01\": \"0x\".concat(TOKEN_CONTRACT_ADDRESS),\n                  \"0x02\": address\n                });\n\n              case 7:\n                scriptCode = _context6.sent;\n                script = sdk.script(_templateObject(), scriptCode);\n                _context6.next = 11;\n                return fcl.send([script]);\n\n              case 11:\n                response = _context6.sent;\n                _context6.next = 14;\n                return fcl.decode(response);\n\n              case 14:\n                balance = _context6.sent;\n                return _context6.abrupt(\"return\", balance);\n\n              case 16:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function getUserBalance() {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    var getUserCollection = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var user, snapshot, address, scriptCode, script, response, items;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                user = fcl.currentUser();\n                _context7.next = 3;\n                return user.snapshot();\n\n              case 3:\n                snapshot = _context7.sent;\n                address = getAddress(snapshot);\n                _context7.next = 7;\n                return generateCode(getCollectionItems, {\n                  query: /(0x01|0x02)/g,\n                  \"0x01\": \"0x\".concat(AWARD_CONTRACT_ADDRESS),\n                  \"0x02\": address\n                });\n\n              case 7:\n                scriptCode = _context7.sent;\n                script = sdk.script(_templateObject2(), scriptCode);\n                _context7.next = 11;\n                return fcl.send([script]);\n\n              case 11:\n                response = _context7.sent;\n                _context7.next = 14;\n                return fcl.decode(response);\n\n              case 14:\n                items = _context7.sent;\n                return _context7.abrupt(\"return\", items);\n\n              case 16:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function getUserCollection() {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    var checkUserVaultStatus = /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var user, snapshot, address, scriptCode, script, response, checkResult;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                user = fcl.currentUser();\n                _context8.next = 3;\n                return user.snapshot();\n\n              case 3:\n                snapshot = _context8.sent;\n                address = getAddress(snapshot);\n                _context8.next = 7;\n                return generateCode(checkReference, {\n                  query: /(0x01|0x02)/g,\n                  \"0x01\": \"0x\".concat(TOKEN_CONTRACT_ADDRESS),\n                  \"0x02\": address\n                });\n\n              case 7:\n                scriptCode = _context8.sent;\n                script = sdk.script(_templateObject3(), scriptCode);\n                _context8.next = 11;\n                return fcl.send([script]);\n\n              case 11:\n                response = _context8.sent;\n                _context8.next = 14;\n                return fcl.decode(response);\n\n              case 14:\n                checkResult = _context8.sent;\n                return _context8.abrupt(\"return\", checkResult);\n\n              case 16:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      return function checkUserVaultStatus() {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n\n    var checkUserCollectionStatus = /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var user, snapshot, address, scriptCode, script, response, checkResult;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                user = fcl.currentUser();\n                _context9.next = 3;\n                return user.snapshot();\n\n              case 3:\n                snapshot = _context9.sent;\n                address = getAddress(snapshot);\n                _context9.next = 7;\n                return generateCode(checkCollection, {\n                  query: /(0x01|0x02)/g,\n                  \"0x01\": \"0x\".concat(AWARD_CONTRACT_ADDRESS),\n                  \"0x02\": address\n                });\n\n              case 7:\n                scriptCode = _context9.sent;\n                script = sdk.script(_templateObject4(), scriptCode);\n                _context9.next = 11;\n                return fcl.send([script]);\n\n              case 11:\n                response = _context9.sent;\n                _context9.next = 14;\n                return fcl.decode(response);\n\n              case 14:\n                checkResult = _context9.sent;\n                return _context9.abrupt(\"return\", checkResult);\n\n              case 16:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      return function checkUserCollectionStatus() {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n\n    var runSampleTx = /*#__PURE__*/function () {\n      var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        var simpleTransaction, blockResponse, block, tx, transactionId, unsub;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                simpleTransaction = \"        transaction {\\n          execute {\\n            log(\\\"Hello World!!\\\")\\n          }\\n        }\\n      \";\n                setStatus(\"Resolving...\");\n                _context10.next = 4;\n                return fcl.send([fcl.getLatestBlock()]);\n\n              case 4:\n                blockResponse = _context10.sent;\n                _context10.next = 7;\n                return fcl.decode(blockResponse);\n\n              case 7:\n                block = _context10.sent;\n                _context10.prev = 8;\n                _context10.next = 11;\n                return fcl.send([fcl.transaction(simpleTransaction), fcl.proposer(fcl.currentUser().authorization), fcl.payer(fcl.currentUser().authorization), fcl.ref(block.id)]);\n\n              case 11:\n                tx = _context10.sent;\n                transactionId = tx.transactionId;\n                setStatus(\"Transaction sent, waiting for confirmation\");\n                unsub = fcl.tx({\n                  transactionId: transactionId\n                }).subscribe(function (transaction) {\n                  setTransaction(transaction);\n\n                  if (fcl.tx.isSealed(transaction)) {\n                    setStatus(\"Transaction is Sealed\");\n                    unsub();\n                  }\n                });\n                _context10.next = 21;\n                break;\n\n              case 17:\n                _context10.prev = 17;\n                _context10.t0 = _context10[\"catch\"](8);\n                console.error(_context10.t0);\n                setStatus(\"Transaction failed\");\n\n              case 21:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, null, [[8, 17]]);\n      }));\n\n      return function runSampleTx() {\n        return _ref10.apply(this, arguments);\n      };\n    }();\n\n    var setupWallet = /*#__PURE__*/function () {\n      var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        var initCode, blockResponse, block, tx, transactionId, unsub;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return generateCode(setupUserWallet, {\n                  query: /(0x01|0x02)/g,\n                  \"0x01\": \"0x\".concat(TOKEN_CONTRACT_ADDRESS),\n                  \"0x02\": \"0x\".concat(AWARD_CONTRACT_ADDRESS)\n                });\n\n              case 2:\n                initCode = _context11.sent;\n                setStatus(\"Resolving...\");\n                _context11.next = 6;\n                return fcl.send([fcl.getLatestBlock()]);\n\n              case 6:\n                blockResponse = _context11.sent;\n                _context11.next = 9;\n                return fcl.decode(blockResponse);\n\n              case 9:\n                block = _context11.sent;\n                _context11.prev = 10;\n                _context11.next = 13;\n                return fcl.send([sdk.transaction(_templateObject5(), initCode), fcl.proposer(fcl.currentUser().authorization), fcl.payer(fcl.currentUser().authorization), fcl.ref(block.id), fcl.authorizations([fcl.currentUser().authorization]), fcl.limit(100)]);\n\n              case 13:\n                tx = _context11.sent;\n                transactionId = tx.transactionId;\n                setStatus(\"Transaction sent, waiting for confirmation\");\n                unsub = fcl.tx({\n                  transactionId: transactionId\n                }).subscribe(function (transaction) {\n                  setTransaction(transaction);\n\n                  if (fcl.tx.isSealed(transaction)) {\n                    setStatus(\"Transaction is Sealed\");\n                    getWalletResources();\n                    unsub();\n                  }\n                });\n                _context11.next = 23;\n                break;\n\n              case 19:\n                _context11.prev = 19;\n                _context11.t0 = _context11[\"catch\"](10);\n                console.error(error);\n                setStatus(\"Transaction failed\");\n\n              case 23:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, null, [[10, 19]]);\n      }));\n\n      return function setupWallet() {\n        return _ref11.apply(this, arguments);\n      };\n    }();\n\n    var giveAward = /*#__PURE__*/function () {\n      var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(_ref12) {\n        var recipientAddress, initCode, blockResponse, block, tx, transactionId, unsub;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                recipientAddress = _ref12.recipientAddress;\n                _context12.next = 3;\n                return generateCode(giveNFTAward, {\n                  query: /(0x01|0x02|0x03)/g,\n                  \"0x01\": \"0x\".concat(TOKEN_CONTRACT_ADDRESS),\n                  \"0x02\": \"0x\".concat(AWARD_CONTRACT_ADDRESS),\n                  \"0x03\": \"0x\".concat(recipientAddress)\n                });\n\n              case 3:\n                initCode = _context12.sent;\n                setStatus(\"Resolving...\");\n                _context12.next = 7;\n                return fcl.send([fcl.getLatestBlock()]);\n\n              case 7:\n                blockResponse = _context12.sent;\n                _context12.next = 10;\n                return fcl.decode(blockResponse);\n\n              case 10:\n                block = _context12.sent;\n                _context12.prev = 11;\n                _context12.next = 14;\n                return fcl.send([sdk.transaction(_templateObject6(), initCode), fcl.proposer(fcl.currentUser().authorization), fcl.payer(fcl.currentUser().authorization), fcl.ref(block.id), fcl.authorizations([fcl.currentUser().authorization]), fcl.limit(100)]);\n\n              case 14:\n                tx = _context12.sent;\n                transactionId = tx.transactionId;\n                setStatus(\"Transaction sent, waiting for confirmation\");\n                unsub = fcl.tx({\n                  transactionId: transactionId\n                }).subscribe(function (transaction) {\n                  setTransaction(transaction);\n\n                  if (fcl.tx.isSealed(transaction)) {\n                    setStatus(\"Transaction is Sealed\");\n                    unsub();\n                  }\n                });\n                _context12.next = 24;\n                break;\n\n              case 20:\n                _context12.prev = 20;\n                _context12.t0 = _context12[\"catch\"](11);\n                console.error(external);\n                setStatus(\"Transaction failed\");\n\n              case 24:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, null, [[11, 20]]);\n      }));\n\n      return function giveAward(_x4) {\n        return _ref13.apply(this, arguments);\n      };\n    }();\n\n    var _useMutation = useMutation(ASSOCIATE_WALLET, {\n      update: function update(cache, _ref14) {\n        var data = _ref14.data;\n\n        var _cache$readQuery = cache.readQuery({\n          query: CURRENT_USER_QUERY\n        }),\n            currentUserData = _cache$readQuery.me;\n\n        cache.writeQuery({\n          query: CURRENT_USER_QUERY,\n          data: {\n            me: _objectSpread(_objectSpread({}, currentUserData), data.associateWallet)\n          }\n        });\n      },\n      onError: function onError() {\n        toast.error(\"😳 Ekkk! Failed to link wallet.\", {\n          position: \"bottom-left\"\n        });\n      }\n    }),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        associateWallet = _useMutation2[0],\n        _useMutation2$ = _useMutation2[1],\n        data = _useMutation2$.data,\n        loading = _useMutation2$.loading,\n        error = _useMutation2$.error;\n\n    var connectActiveWalletToLyraLabs = /*#__PURE__*/function () {\n      var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                associateWallet({\n                  variables: {\n                    address: walletUser.addr\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13);\n      }));\n\n      return function connectActiveWalletToLyraLabs() {\n        return _ref15.apply(this, arguments);\n      };\n    }();\n\n    return __jsx(WalletContext.Provider, {\n      value: {\n        status: status,\n        setStatus: setStatus,\n        transaction: transaction,\n        setTransaction: setTransaction,\n        walletConnected: walletConnected,\n        walletNotConnected: walletNotConnected,\n        setupWallet: setupWallet,\n        setupFCLAuthHandler: setupFCLAuthHandler,\n        walletUser: walletUser,\n        vaultIsSetup: vaultIsSetup,\n        collectionIsSetup: collectionIsSetup,\n        walletBalance: walletBalance,\n        walletCollection: walletCollection,\n        connectActiveWalletToLyraLabs: connectActiveWalletToLyraLabs,\n        giveAward: giveAward,\n        authHandlerIsSetup: authHandlerIsSetup,\n        setAuthHandlerIsSetup: setAuthHandlerIsSetup,\n        getResourcesComplete: getResourcesComplete,\n        runSampleTx: runSampleTx\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 7\n      }\n    }, __jsx(Component, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  _s(WithWallet, \"WYj8andx/YbhdwT4jmH2bmR1I/w=\", false, function () {\n    return [useMutation];\n  });\n\n  return WithWallet;\n};","map":{"version":3,"sources":["/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/shared/enhancers/wallet-provider.js"],"names":["React","useState","fcl","sdk","useMutation","ASSOCIATE_WALLET","toast","CURRENT_USER_QUERY","flowConfig","checkReference","checkCollection","vaultBalance","getCollectionItems","giveNFTAward","setupUserWallet","WalletContext","createContext","TOKEN_CONTRACT_ADDRESS","AWARD_CONTRACT_ADDRESS","getAddress","user","nullPrefix","addr","generateCode","rawCode","match","query","replace","item","withWallet","Component","WithWallet","walletUser","setWalletUser","vaultIsSetup","setVaultIsSetup","collectionIsSetup","setCollectionIsSetup","walletBalance","setWalletBalance","walletCollection","setWalletCollection","authHandlerIsSetup","setAuthHandlerIsSetup","getResourcesComplete","setGetResourcesComplete","status","setStatus","transaction","setTransaction","walletConnected","loggedIn","walletNotConnected","setupFCLAuthHandler","currentUser","subscribe","console","log","getWalletResources","checkUserVaultStatus","vaultStatus","startBalancePoll","checkUserCollectionStatus","collectionStatus","startCollectionPoll","balancePollId","getUserBalance","balance","setTimeout","collectionPollId","getUserCollection","items","snapshot","address","scriptCode","script","send","response","decode","checkResult","runSampleTx","simpleTransaction","getLatestBlock","blockResponse","block","proposer","authorization","payer","ref","id","tx","transactionId","unsub","isSealed","error","setupWallet","initCode","authorizations","limit","giveAward","recipientAddress","external","update","cache","data","readQuery","currentUserData","me","writeQuery","associateWallet","onError","position","loading","connectActiveWalletToLyraLabs","variables"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport * as fcl from \"@onflow/fcl\";\nimport * as sdk from \"@onflow/sdk\";\n\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { ASSOCIATE_WALLET } from \"@data/mutations\";\nimport { toast } from \"react-toastify\";\nimport { CURRENT_USER_QUERY } from \"../../data/queries\";\nimport flowConfig from \"@config/flow\";\n\nimport checkReference from \"../../flow/scripts/check-ref.cdc\";\nimport checkCollection from \"../../flow/scripts/check-collection.cdc\";\nimport vaultBalance from \"../../flow/scripts/vault-balance.cdc\";\nimport getCollectionItems from \"../../flow/scripts/get-collection-items.cdc\";\nimport giveNFTAward from \"../../flow/transactions/give-nft-award.cdc\";\n\nimport setupUserWallet from \"../../flow/transactions/setup-user-wallet.cdc\";\n\nexport const WalletContext = React.createContext({});\n\nconst { TOKEN_CONTRACT_ADDRESS, AWARD_CONTRACT_ADDRESS } = flowConfig;\n\nconst getAddress = (user, nullPrefix = true) => {\n  return nullPrefix ? `0x${user.addr}` : user.addr;\n};\n\nconst generateCode = async (rawCode, match) => {\n  if (!match) {\n    return rawCode;\n  }\n  const { query } = match;\n  return rawCode.replace(query, (item) => {\n    return match[item];\n  });\n};\n\nexport const withWallet = (Component) => {\n  const WithWallet = () => {\n    const [walletUser, setWalletUser] = useState(null);\n    const [vaultIsSetup, setVaultIsSetup] = useState(false);\n    const [collectionIsSetup, setCollectionIsSetup] = useState(false);\n    const [walletBalance, setWalletBalance] = useState(null);\n    const [walletCollection, setWalletCollection] = useState(null);\n    const [authHandlerIsSetup, setAuthHandlerIsSetup] = useState(false);\n    const [getResourcesComplete, setGetResourcesComplete] = useState(false);\n\n    const [status, setStatus] = useState(null);\n    const [transaction, setTransaction] = useState(null);\n\n    const walletConnected = walletUser && walletUser.loggedIn;\n    const walletNotConnected =\n      walletUser === null || (walletUser && !walletUser.loggedIn);\n\n    const setupFCLAuthHandler = () => {\n      fcl.currentUser().subscribe(async (user) => {\n        console.log(\"FCVL CALLBACK\", user.loggedIn);\n        if (user.loggedIn) {\n          console.log(\"XXXXXXX\");\n          setWalletUser(user);\n          getWalletResources();\n        } else {\n          console.log(\"YYYYYY\");\n        }\n      });\n    };\n\n    const getWalletResources = async () => {\n      const vaultStatus = await checkUserVaultStatus();\n      setVaultIsSetup(vaultStatus);\n      if (vaultStatus) {\n        startBalancePoll();\n      }\n      const collectionStatus = await checkUserCollectionStatus();\n      setCollectionIsSetup(collectionStatus);\n      if (collectionStatus) {\n        startCollectionPoll();\n      }\n      setGetResourcesComplete(true);\n    };\n\n    let balancePollId = null;\n    const startBalancePoll = async () => {\n      const balance = await getUserBalance();\n      setWalletBalance(balance);\n      balancePollId = setTimeout(startBalancePoll, 2000);\n    };\n\n    let collectionPollId = null;\n    const startCollectionPoll = async () => {\n      const items = await getUserCollection();\n      setWalletCollection(items);\n      collectionPollId = setTimeout(startCollectionPoll, 2000);\n    };\n\n    const getUserBalance = async () => {\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      const scriptCode = await generateCode(vaultBalance, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": `0x${TOKEN_CONTRACT_ADDRESS}`,\n        \"0x02\": address,\n      });\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const balance = await fcl.decode(response);\n      return balance;\n    };\n\n    const getUserCollection = async () => {\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      const scriptCode = await generateCode(getCollectionItems, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": `0x${AWARD_CONTRACT_ADDRESS}`,\n        \"0x02\": address,\n      });\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const items = await fcl.decode(response);\n      return items;\n    };\n\n    const checkUserVaultStatus = async () => {\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      const scriptCode = await generateCode(checkReference, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": `0x${TOKEN_CONTRACT_ADDRESS}`,\n        \"0x02\": address,\n      });\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const checkResult = await fcl.decode(response);\n      return checkResult;\n    };\n\n    const checkUserCollectionStatus = async () => {\n      const user = fcl.currentUser();\n      const snapshot = await user.snapshot();\n      const address = getAddress(snapshot);\n      const scriptCode = await generateCode(checkCollection, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": `0x${AWARD_CONTRACT_ADDRESS}`,\n        \"0x02\": address,\n      });\n      const script = sdk.script`${scriptCode}`;\n      const response = await fcl.send([script]);\n      const checkResult = await fcl.decode(response);\n      return checkResult;\n    };\n\n    const runSampleTx = async () => {\n      const simpleTransaction = `\\\n        transaction {\n          execute {\n            log(\"Hello World!!\")\n          }\n        }\n      `;\n      setStatus(\"Resolving...\");\n      const blockResponse = await fcl.send([fcl.getLatestBlock()]);\n      const block = await fcl.decode(blockResponse);\n      try {\n        const tx = await fcl.send([\n          fcl.transaction(simpleTransaction),\n          fcl.proposer(fcl.currentUser().authorization),\n          fcl.payer(fcl.currentUser().authorization),\n          fcl.ref(block.id),\n        ]);\n\n        const { transactionId } = tx;\n\n        setStatus(\"Transaction sent, waiting for confirmation\");\n\n        const unsub = fcl.tx({ transactionId }).subscribe((transaction) => {\n          setTransaction(transaction);\n\n          if (fcl.tx.isSealed(transaction)) {\n            setStatus(\"Transaction is Sealed\");\n            unsub();\n          }\n        });\n      } catch (e) {\n        console.error(e);\n        setStatus(\"Transaction failed\");\n      }\n    };\n\n    const setupWallet = async () => {\n      // Create a vault and a collection\n      const initCode = await generateCode(setupUserWallet, {\n        query: /(0x01|0x02)/g,\n        \"0x01\": `0x${TOKEN_CONTRACT_ADDRESS}`,\n        \"0x02\": `0x${AWARD_CONTRACT_ADDRESS}`,\n      });\n\n      setStatus(\"Resolving...\");\n\n      const blockResponse = await fcl.send([fcl.getLatestBlock()]);\n      const block = await fcl.decode(blockResponse);\n\n      try {\n        const tx = await fcl.send([\n          sdk.transaction`${initCode}`,\n          fcl.proposer(fcl.currentUser().authorization),\n          fcl.payer(fcl.currentUser().authorization),\n          fcl.ref(block.id),\n          fcl.authorizations([fcl.currentUser().authorization]),\n          fcl.limit(100),\n        ]);\n\n        const { transactionId } = tx;\n\n        setStatus(\"Transaction sent, waiting for confirmation\");\n\n        const unsub = fcl.tx({ transactionId }).subscribe((transaction) => {\n          setTransaction(transaction);\n\n          if (fcl.tx.isSealed(transaction)) {\n            setStatus(\"Transaction is Sealed\");\n            getWalletResources();\n            unsub();\n          }\n        });\n      } catch (e) {\n        console.error(error);\n        setStatus(\"Transaction failed\");\n      }\n    };\n\n    const giveAward = async ({ recipientAddress }) => {\n      const initCode = await generateCode(giveNFTAward, {\n        query: /(0x01|0x02|0x03)/g,\n        \"0x01\": `0x${TOKEN_CONTRACT_ADDRESS}`,\n        \"0x02\": `0x${AWARD_CONTRACT_ADDRESS}`,\n        \"0x03\": `0x${recipientAddress}`,\n      });\n\n      setStatus(\"Resolving...\");\n\n      const blockResponse = await fcl.send([fcl.getLatestBlock()]);\n      const block = await fcl.decode(blockResponse);\n\n      try {\n        const tx = await fcl.send([\n          sdk.transaction`${initCode}`,\n          fcl.proposer(fcl.currentUser().authorization),\n          fcl.payer(fcl.currentUser().authorization),\n          fcl.ref(block.id),\n          fcl.authorizations([fcl.currentUser().authorization]),\n          fcl.limit(100),\n        ]);\n        const { transactionId } = tx;\n\n        setStatus(\"Transaction sent, waiting for confirmation\");\n\n        const unsub = fcl.tx({ transactionId }).subscribe((transaction) => {\n          setTransaction(transaction);\n\n          if (fcl.tx.isSealed(transaction)) {\n            setStatus(\"Transaction is Sealed\");\n            unsub();\n          }\n        });\n      } catch (e) {\n        console.error(external);\n        setStatus(\"Transaction failed\");\n      }\n    };\n\n    const [associateWallet, { data, loading, error }] = useMutation(\n      ASSOCIATE_WALLET,\n      {\n        update: (cache, { data }) => {\n          const { me: currentUserData } = cache.readQuery({\n            query: CURRENT_USER_QUERY,\n          });\n          cache.writeQuery({\n            query: CURRENT_USER_QUERY,\n            data: { me: { ...currentUserData, ...data.associateWallet } },\n          });\n        },\n        onError: () => {\n          toast.error(\"😳 Ekkk! Failed to link wallet.\", {\n            position: \"bottom-left\",\n          });\n        },\n      }\n    );\n\n    const connectActiveWalletToLyraLabs = async () => {\n      associateWallet({\n        variables: {\n          address: walletUser.addr,\n        },\n      });\n    };\n\n    return (\n      <WalletContext.Provider\n        value={{\n          status,\n          setStatus,\n          transaction,\n          setTransaction,\n          walletConnected,\n          walletNotConnected,\n          setupWallet,\n          setupFCLAuthHandler,\n          walletUser,\n          vaultIsSetup,\n          collectionIsSetup,\n          walletBalance,\n          walletCollection,\n          connectActiveWalletToLyraLabs,\n          giveAward,\n          authHandlerIsSetup,\n          setAuthHandlerIsSetup,\n          getResourcesComplete,\n          runSampleTx,\n        }}\n      >\n        <Component />\n      </WalletContext.Provider>\n    );\n  };\n  return WithWallet;\n};\n"]},"metadata":{},"sourceType":"module"}