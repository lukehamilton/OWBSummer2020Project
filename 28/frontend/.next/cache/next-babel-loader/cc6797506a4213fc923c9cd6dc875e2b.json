{"ast":null,"code":"var _jsxFileName = \"/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/shared/enhancers/current-user.js\";\nvar __jsx = React.createElement;\nimport { useQuery } from \"@apollo/react-hooks\";\nimport React from \"react\";\nimport { withApollo } from \"./apollo\";\nimport { CURRENT_USER_QUERY } from \"../../data/queries\";\nexport const CurrentUserContext = React.createContext({});\nexport const withCurrentUser = Component => {\n  const WithCurrentUser = ({\n    user\n  }) => {\n    const {\n      loading,\n      error,\n      data\n    } = useQuery(CURRENT_USER_QUERY, {});\n\n    if (loading) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 14\n        }\n      }, `loading: ${loading}`);\n    }\n\n    if (error) {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 14\n        }\n      }, JSON.stringify(error));\n    }\n\n    if (data) {\n      return __jsx(CurrentUserContext.Provider, {\n        value: data.me,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, __jsx(Component, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }));\n    }\n  };\n\n  return withApollo(WithCurrentUser);\n};","map":{"version":3,"sources":["/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/shared/enhancers/current-user.js"],"names":["useQuery","React","withApollo","CURRENT_USER_QUERY","CurrentUserContext","createContext","withCurrentUser","Component","WithCurrentUser","user","loading","error","data","JSON","stringify","me"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,qBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AAEA,OAAO,MAAMC,kBAAkB,GAAGH,KAAK,CAACI,aAAN,CAAoB,EAApB,CAA3B;AAEP,OAAO,MAAMC,eAAe,GAAIC,SAAD,IAAe;AAC5C,QAAMC,eAAe,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc;AACpC,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,QAA2BZ,QAAQ,CAACG,kBAAD,EAAqB,EAArB,CAAzC;;AACA,QAAIO,OAAJ,EAAa;AACX,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,YAAWA,OAAQ,EAA1B,CAAP;AACD;;AACD,QAAIC,KAAJ,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAME,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAN,CAAP;AACD;;AACD,QAAIC,IAAJ,EAAU;AACR,aACE,MAAC,kBAAD,CAAoB,QAApB;AAA6B,QAAA,KAAK,EAAEA,IAAI,CAACG,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;AACF,GAfD;;AAiBA,SAAOb,UAAU,CAACM,eAAD,CAAjB;AACD,CAnBM","sourcesContent":["import { useQuery } from \"@apollo/react-hooks\";\nimport React from \"react\";\nimport { withApollo } from \"./apollo\";\nimport { CURRENT_USER_QUERY } from \"../../data/queries\";\n\nexport const CurrentUserContext = React.createContext({});\n\nexport const withCurrentUser = (Component) => {\n  const WithCurrentUser = ({ user }) => {\n    const { loading, error, data } = useQuery(CURRENT_USER_QUERY, {});\n    if (loading) {\n      return <div>{`loading: ${loading}`}</div>;\n    }\n    if (error) {\n      return <div>{JSON.stringify(error)}</div>;\n    }\n    if (data) {\n      return (\n        <CurrentUserContext.Provider value={data.me}>\n          <Component />\n        </CurrentUserContext.Provider>\n      );\n    }\n  };\n\n  return withApollo(WithCurrentUser);\n};\n"]},"metadata":{},"sourceType":"module"}