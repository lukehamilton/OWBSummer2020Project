{"ast":null,"code":"var _jsxFileName = \"/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/shared/enhancers/private-route.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nconst login = \"/login?redirected=true\";\n\nconst checkUserAuthentication = () => {\n  //   return { auth: null }; // change null to { isAdmin: true } for test it.\n  return true; // change null to { isAdmin: true } for test it.\n};\n\nexport const withPrivateRoute = (Component, options = {}) => {\n  const WithPrivateRoute = props => {\n    return __jsx(Component, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }));\n  };\n\n  WithPrivateRoute.getInitialProps = async ({\n    res\n  }) => {\n    console.log(\"XXXXX CRYSTAL CLEAR XXX\", res);\n    const isAuthorized = await checkUserAuthentication(); // console.log(\"XXX userAuth XXX\", userAuth);\n\n    if (!isAuthorized) {\n      // Handle server-side and client-side rendering.\n      if (res) {\n        res === null || res === void 0 ? void 0 : res.writeHead(302, {\n          Location: login\n        });\n        res === null || res === void 0 ? void 0 : res.end();\n      } else {\n        Router.replace(login);\n      }\n    } // else if (Component.getInitialProps) {\n    //   const wrappedProps = await Component.getInitialProps();\n    //   return { ...wrappedProps };\n    // }\n    // res?.writeHead(302, {\n    //   Location: login,\n    // });\n    // res?.end();\n    // const req = ctx.ctx.req;\n    // const md = req ? new MobileDetect(req.headers[\"user-agent\"]) : null;\n    // const isMobile = md ? (md.phone() ? true : false) : false;\n    // let pageProps = {};\n    // pageProps = await Component.getInitialProps(ctx);\n    // return { ...pageProps, isMobile };\n\n  };\n\n  return WithPrivateRoute;\n};","map":{"version":3,"sources":["/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/shared/enhancers/private-route.js"],"names":["React","login","checkUserAuthentication","withPrivateRoute","Component","options","WithPrivateRoute","props","getInitialProps","res","console","log","isAuthorized","writeHead","Location","end","Router","replace"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,KAAK,GAAG,wBAAd;;AAEA,MAAMC,uBAAuB,GAAG,MAAM;AACpC;AACA,SAAO,IAAP,CAFoC,CAEvB;AACd,CAHD;;AAKA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,SAAD,EAAYC,OAAO,GAAG,EAAtB,KAA6B;AAC3D,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,WAAO,MAAC,SAAD,eAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFD;;AAGAD,EAAAA,gBAAgB,CAACE,eAAjB,GAAmC,OAAO;AAAEC,IAAAA;AAAF,GAAP,KAAmB;AACpDC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,GAAvC;AACA,UAAMG,YAAY,GAAG,MAAMV,uBAAuB,EAAlD,CAFoD,CAGpD;;AACA,QAAI,CAACU,YAAL,EAAmB;AACjB;AACA,UAAIH,GAAJ,EAAS;AACPA,QAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEI,SAAL,CAAe,GAAf,EAAoB;AAClBC,UAAAA,QAAQ,EAAEb;AADQ,SAApB;AAGAQ,QAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEM,GAAL;AACD,OALD,MAKO;AACLC,QAAAA,MAAM,CAACC,OAAP,CAAehB,KAAf;AACD;AACF,KAdmD,CAgBpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,GA9BD;;AA+BA,SAAOK,gBAAP;AACD,CApCM","sourcesContent":["import React from \"react\";\n\nconst login = \"/login?redirected=true\";\n\nconst checkUserAuthentication = () => {\n  //   return { auth: null }; // change null to { isAdmin: true } for test it.\n  return true; // change null to { isAdmin: true } for test it.\n};\n\nexport const withPrivateRoute = (Component, options = {}) => {\n  const WithPrivateRoute = (props) => {\n    return <Component {...props} />;\n  };\n  WithPrivateRoute.getInitialProps = async ({ res }) => {\n    console.log(\"XXXXX CRYSTAL CLEAR XXX\", res);\n    const isAuthorized = await checkUserAuthentication();\n    // console.log(\"XXX userAuth XXX\", userAuth);\n    if (!isAuthorized) {\n      // Handle server-side and client-side rendering.\n      if (res) {\n        res?.writeHead(302, {\n          Location: login,\n        });\n        res?.end();\n      } else {\n        Router.replace(login);\n      }\n    }\n\n    // else if (Component.getInitialProps) {\n    //   const wrappedProps = await Component.getInitialProps();\n    //   return { ...wrappedProps };\n    // }\n    // res?.writeHead(302, {\n    //   Location: login,\n    // });\n    // res?.end();\n    // const req = ctx.ctx.req;\n    // const md = req ? new MobileDetect(req.headers[\"user-agent\"]) : null;\n    // const isMobile = md ? (md.phone() ? true : false) : false;\n    // let pageProps = {};\n    // pageProps = await Component.getInitialProps(ctx);\n    // return { ...pageProps, isMobile };\n  };\n  return WithPrivateRoute;\n};\n"]},"metadata":{},"sourceType":"module"}