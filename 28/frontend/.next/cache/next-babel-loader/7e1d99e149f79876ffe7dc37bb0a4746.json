{"ast":null,"code":"var _jsxFileName = \"/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/pages/settings/index.js\";\nvar __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport Page from \"@components/page\";\nimport PostList from \"@components/post-list\";\nimport { USER_POSTS_INBOX } from \"@data/queries\";\nimport { CurrentUserContext } from \"@enhancers/current-user\";\nimport { withCurrentUser } from \"@enhancers/current-user\";\nimport { withLoginModal } from \"@enhancers/login-modal\";\nimport { withPrivateRoute } from \"@enhancers/private-route\";\nimport { flowRight as compose } from \"lodash\";\nimport * as fcl from \"@onflow/fcl\";\nfcl.config().put(\"challenge.handshake\", \"http://localhost:8701/flow/authenticate\");\n\nconst executeSimpleScript = async (a, b) => {\n  const response = await fcl.send([sdk.script`\n        pub fun main(a: Int, b: Int):Int {\n          return a + b\n        }\n      `, sdk.args([sdk.arg(a, types.Int), sdk.arg(b, types.Int)])]);\n  return fcl.decode(response);\n};\n\nconst simpleTransaction = async () => {\n  const {\n    authorization\n  } = fcl.currentUser();\n  const tx = await fcl.send([fcl.transaction`\n      transaction {\n        prepare(acct: AuthAccount) {\n          log(\"Transaction Submitted\")\n        }\n      }\n    `, sdk.payer(authorization), sdk.proposer(authorization), sdk.authorizations([authorization]), sdk.limit(100)]);\n  console.log({\n    tx\n  });\n  fcl.tx(tx).subscribe(txStatus => {\n    if (fcl.tx.isExecuted(txStatus)) {\n      console.log(\"Transaction was executed\");\n    }\n  });\n};\n\nconst SettingsPage = ({\n  user\n}) => {\n  fcl.currentUser().subscribe(user => {\n    console.log(\"---------- user change -----------\");\n    console.log(user);\n    console.log(\"--------------------------\");\n  }); // const currentUser = useContext(CurrentUserContext);\n\n  return __jsx(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    onClick: () => fcl.authenticate(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Connect Wallet\"), __jsx(\"button\", {\n    onClick: simpleTransaction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Submit Tx\"), __jsx(\"button\", {\n    onClick: deployHelloCadence,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Deploy Hello Contract\"), __jsx(\"button\", {\n    onClick: pingAccount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Ping for Hello\"));\n};\n\nconst enhance = compose(withPrivateRoute, withCurrentUser, withLoginModal, withPrivateRoute);\nexport default enhance(SettingsPage);","map":{"version":3,"sources":["/Users/lukehamilton/development/lyra-labs-dev/lyra-labs/frontend/pages/settings/index.js"],"names":["React","useContext","Page","PostList","USER_POSTS_INBOX","CurrentUserContext","withCurrentUser","withLoginModal","withPrivateRoute","flowRight","compose","fcl","config","put","executeSimpleScript","a","b","response","send","sdk","script","args","arg","types","Int","decode","simpleTransaction","authorization","currentUser","tx","transaction","payer","proposer","authorizations","limit","console","log","subscribe","txStatus","isExecuted","SettingsPage","user","authenticate","deployHelloCadence","pingAccount","enhance"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport Page from \"@components/page\";\nimport PostList from \"@components/post-list\";\nimport { USER_POSTS_INBOX } from \"@data/queries\";\nimport { CurrentUserContext } from \"@enhancers/current-user\";\nimport { withCurrentUser } from \"@enhancers/current-user\";\nimport { withLoginModal } from \"@enhancers/login-modal\";\nimport { withPrivateRoute } from \"@enhancers/private-route\";\nimport { flowRight as compose } from \"lodash\";\nimport * as fcl from \"@onflow/fcl\";\n\nfcl\n  .config()\n  .put(\"challenge.handshake\", \"http://localhost:8701/flow/authenticate\");\n\nconst executeSimpleScript = async (a, b) => {\n  const response = await fcl.send([\n    sdk.script`\n        pub fun main(a: Int, b: Int):Int {\n          return a + b\n        }\n      `,\n    sdk.args([sdk.arg(a, types.Int), sdk.arg(b, types.Int)]),\n  ]);\n\n  return fcl.decode(response);\n};\n\nconst simpleTransaction = async () => {\n  const { authorization } = fcl.currentUser();\n  const tx = await fcl.send([\n    fcl.transaction`\n      transaction {\n        prepare(acct: AuthAccount) {\n          log(\"Transaction Submitted\")\n        }\n      }\n    `,\n    sdk.payer(authorization),\n    sdk.proposer(authorization),\n    sdk.authorizations([authorization]),\n    sdk.limit(100),\n  ]);\n\n  console.log({ tx });\n\n  fcl.tx(tx).subscribe((txStatus) => {\n    if (fcl.tx.isExecuted(txStatus)) {\n      console.log(\"Transaction was executed\");\n    }\n  });\n};\n\nconst SettingsPage = ({ user }) => {\n  fcl.currentUser().subscribe((user) => {\n    console.log(\"---------- user change -----------\");\n    console.log(user);\n    console.log(\"--------------------------\");\n  });\n  // const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <Page>\n      <button onClick={() => fcl.authenticate()}>Connect Wallet</button>\n      <button onClick={simpleTransaction}>Submit Tx</button>\n      <button onClick={deployHelloCadence}>Deploy Hello Contract</button>\n      <button onClick={pingAccount}>Ping for Hello</button>\n      {/* <button>Deploy Con</button> */}\n    </Page>\n  );\n};\n\nconst enhance = compose(\n  withPrivateRoute,\n  withCurrentUser,\n  withLoginModal,\n  withPrivateRoute\n);\nexport default enhance(SettingsPage);\n"]},"metadata":{},"sourceType":"module"}